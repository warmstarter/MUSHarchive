

     LOCAL                                                       LOGEDIT(1)

     NAME
          logedit - trim logs of MUSH events

     SYNOPSIS

          logedit [-acdlmnpstwAIO:%] [-f [-]world] [-o [outputfile]] [-r
          regexp] [-x name] [-y name] [-F filename] [-W
          [<col>[,<first>[,<rest>]]]] filename

     DESCRIPTION

          The logedit program is a tool designed to help players and admins
          of role-playing MUSHes trim down logs of role-playing events on
          the MUSH. It takes a log file (indicated by 'filename' or from
          stdin) and produces as output another file (by default
          'filename.log') after optionally removing a number of typical
          things which are annoying in logs.

               Logedit *always* strips the following things from logs:
               - Messages beginning with GAME: or MAIL:
               - Nospoof []'s
               - * has connected, disconnected, or reconnected messages
               - Huh? (Type help for help)
               - Flag set. and Doing set.
               - Any line appearing twice in succession (simple SPAM)
               - Anything between a pair of '#log' lines. This allows you, while
                 logging, to 'think #log', thus indicating that what follows
                 (until you 'think #log' again) is to be stripped by logedit.

     OPTIONS

          These options control what is to be stripped from the log:

          -a   Remove @wall/@rwall/@wizwall messages

          -c   Remove @chat messages from all channels

          -d   Remove DOING/WHO lists

          -f [-]world
               This option supports tinyfugue logging. -f world will put
               only output from "world" into the log; -f -world will skip
               output from "world" when making the log. You can specify
               either multiple worlds to include, or multiple -worlds to
               skip, each with its own -f switch. If only one world is
               specified to include, tf's ---- World <name> ---- messages
               will not be printed. If more than one world is specified to
               include, the messages will be printed. (If you wanna be sure
               they're not there, use a regexp like "^---- World .* ----$"
               in your .logeditrc.

          -l   Remove * has arrived and * has left messages

                                                                          1

     LOGEDIT(1)                                                       LOCAL

          -m   Remove @mail messages read while logging

          -p   Remove pages to you and from you

          -q   Quick-edit. Removes all lines except those which start with
               a player's name (thus, usually leaving you only player
               actions.) This switch implies others, as it also auto-
               removes all pages, whispers, leave/arrive messages, admin
               and broadcast messages, channels, and WHO/DOINGs.  It's a
               very good idea to use the -y <name> switch with this option,
               as well, particularly for short logs. This switch is often
               used with -n, since it tends to stand alone, though you
               could probably combine it just fine with your

          -r <regexp>
               Remove the regular expression (as per ex, grep, etc) which
               follows the switch. You can have multiple regexps, but each
               needs its own switch, e.g.  logedit -r foo -r "[Bb]ar\."
               myfile

          -t   Terse mode: room descriptions are removed, and contents
               lists are shoved onto a single line. This mode requires that
               the log be taken by someone who can see db#s - usually an
               admin, a see_all player (in PennMUSH), or possibly a mortal
               if the whole log takes place in rooms they own.

          -w   Remove whispers to you and from you

          -x <name>
               Remove anything by <name>. Like -r, you can stack these, but
               you must use multiple -x's, too, e.g.  logedit -apw -x Paul
               -x Javelin myfile

          -A   Remove any ANSI codes in the from the log.

          -O   Remove "o-spam", the messages you get when 20 players all
               leave a room, one after the other, giving you 20 osucc/odrop
               messages.  Essentially removes any consecutive lines in
               which everything but the first word (a player's name)
               matches.

          -:   Remove any lines starting with : or " characters.  Useful
               for people stuck logging from telnet.

          -%   Remove any lines starting with % characters. These are usu-
               ally messages from tinyfugue telling you about activity in
               other worlds or whatever.

          These options modify the output in useful ways:

          -s   Include statistics at the end of the log. These statistics
               include line and word counts on the original and new files
               (so you can see how much you trimmed), a list of all players
               who spoke or acted during the event (with numbers for how

     2

     LOCAL                                                       LOGEDIT(1)

               often they spoke (VERBOSITY) or acted (ACTION) - speaking
               counts as an action), and players who appear to have been
               on-line or present, but said nothing.

          -y <name>
               Convert 'You say,' to '<name> says,' to give the log a
               third-person view.

          -I   Insert blank lines between log lines. This improves reada-
               bility of the log significantly, at the cost of making it
               longer to print, etc. Room descs, contents lists, etc, are
               kept together.  This switch added by Christian Scarborough.

          -W [<col>[,<first>[,<rest>]]]
               Word wrap long lines, resulting in no line longer than <col>
               characters.  For each word-wrapped paragraph, indent the
               first line <first> spaces, and all other lines <rest>
               spaces. Any of the parameters can be left out: if no <col>
               is specified, 72 is assumed. <first> and <rest> default to
               0.  Word wrap will, of course, fail miserably if you have
               words longer than <col> characters. There must be a space
               between -W and the numbers.

          Finally, these options control the use of the configuration file,
          input and output files, or provide program help:

          -n   Ignore the settings in the configuration file (.logeditrc by
               default) Command-line switches always take precedence over
               configuration file settings, and work like toggles, i.e., if
               statistics are set on in the configuration file, logedit -s
               will turn them off. Use the -n switch in situations where
               there might be multiple configuration files.

          -o [filename]
               Use "filename" as the output file for the editted log,
               instead of the default <inputfile>.log. If "filename" is
               omitted, the output is sent to stdout.

          -F filename
               Use "filename" as the configuration file, in place of
               ~/.logeditrc.

          -h, -H, -?
               Show help. The help display lists all logedit switches, and
               their values as defined in the configuration file. Because
               this display is longer than many screens, running logedit
               without arguments provides a paged version of the same
               display.

          -    If "-" is used as the last item on the command line in place
               of an input filename, logedit will read from the stdin, and
               write to the stdout, unless a different file is specified
               with -o.  This allows logedit to function as a filter in a
               pipe.

                                                                          3

     LOGEDIT(1)                                                       LOCAL

     EXAMPLE

          logedit joust

          logedit -o joust.log joust

          logedit -o joust.log - < joust

          logedit - < joust > joust.log

          cat joust.log | logedit - > joust.log

          Trim the file joust using the default settings in .logeditrc, and
          write the result to joust.log. All five commands will produce the
          same result, and the last three illustrate the use of logedit as
          a filter for stdin and stdout.

          logedit -n -aw -x John -r OOC -y Javelin joust

          Trim the file joust, ignoring .logeditrc, skipping any actions by
          John and any lines containing the string "OOC", converting "You
          say" to "Javelin says", and write the result to joust.log

          logedit -n -q -y Javelin -o joust.stripped joust

          Quick-trim the file joust, ignoring .logeditrc, converting "You
          say" to "Javelin says" and writing the output to joust.stripped.
          The output will contain only lines with player actions.

     CONFIGURATION FILE

          The configuration file (.logeditrc by default) is used to store
          your most common settings and preferences for logedit. It may
          contain any number of lines, but each line must be one of the
          following types:

          #    Lines beginning with '#' are comments.

          switches=<switches>
               Specifies switches to use. The list should be just like the
               command-line form, but with no '-' character, e.g.
               switches=apw You may not use the -f, -o, -r, -x, -y, or -W
               switches in this way.  Instead:

          remove=<regexp>
               Specifies a unix regular expression to strip from all logs.
               Any line containing the expression will be removed.  This is
               equivalent to the -r command-line switch.  Use one remove
               line per regexp.  For more information about regexps, see
               the man pages for ex, sed, or grep.

          exclude=<name>
               Specifies the name of a player to exclude (gag) in the log.

     4

     LOCAL                                                       LOGEDIT(1)

               All lines starting with the <name> are removed.  Use a
               separate exclude line for each name.

          world=<name>
               Specifies a single tinyfugue world from which output is to
               be kept.  Output from all other worlds is skipped. Takes
               precedence over -world lines.

          -world=<name>
               Specifies a tinyfugue world from which output is to be
               skipped.  You can have multiple -world lines, one for each
               world to skip.

          wrap=<col>[,<first>[,<rest>]]
               Specifies how to wrap long lines. The column at which to
               wrap is given by <col>, and is required. The optional param-
               eters <first> and <rest> set the number of spaces to indent
               the first line in the wrapped paragraph and the rest of the
               lines, respectively, and default to 0. To indicate a <rest>
               and no <first> (for hanging indentation), either
               wrap=<col>,0,<rest> or wrap=<col>,,<rest> is acceptable.

          you=<name>
               Specifies how you would like "You" in "You say," to be
               translated.

          Logedit will report any other kind of line as an warning, to aid
          in the proper creation of the configuration file, but will go
          ahead and process the log anyway.

          The -n command-line switch causes logedit to ignore the confi-
          guration file, should you wish to override it on occasion.

     BUGS

          There may be some discrepancies in the handling of spoofed emits.
          Because some MUSHes (notably the one I run) use []'s for MUSH-
          coded chat channels, the whole removal of nospoof stuff is a
          question I've been reconsidering. Anyway, the use of the -q flag
          may make spoofed emits get handled differently than normal.

          When editing multi-world logs using the -f switch, logedit
          assumes that any text before the first world change should be
          preserved in the log.

     AUTHOR

          Logedit was written by Alan Schwartz (aka Paul@DuneMUSH, Javelin)

          Alan can be reached as: alansz@cogsci.berkeley.edu
          Or at: Dept. of Psychology
                 University of California
                 Berkeley, CA 94720

                                                                          5

     LOGEDIT(1)                                                       LOCAL

          The SunOS port, and the -i command-line option (now -I) were
          added by Christian Scarborough.

          Lorrie Wood (Chani@DuneMUSH) has been invaluable in providing
          real-world tests of beta versions of logedit, ideas for improve-
          ments and new switches, and general moral support. :)

          Thanks are due to all users who've suggested improvements or bug-
          fixes. If you port logedit to another system, please send me mail
          telling me about changes you had to make (especially to get the
          regexp stuff working) so I can incorporate them.

          Logedit is released into the public domain, with the provision
          that this code or modifications thereof can not be sold or used
          commercially.

     VERSION

          This is logedit version 2.5.

     6

9

@create IC-Message Carrier
@link IC-Message Carrier=*me
@lock IC-Message Carrier==*me
@set IC-Message Carrier=LINK_OK
@set IC-Message Carrier=QUIET
@set IC-Message Carrier=VISUAL
@set IC-Message Carrier=SAFE
@set IC-Message Carrier=HALT
@set IC-Message Carrier=NO_COMMAND
&LAST_UPCOMING IC-Message Carrier=5/95
&LAST_UPDATE IC-Message Carrier=5/95
&CURRENT_UPCOMING IC-Message Carrier=[ansi(h,UPCOMING for IC Message Carrier:)]%r%rSome new commands added. See NEWEST and ownmenu. No more updates planned right now. Let me know if it needs something.%r[ansi(h,--)]
&CURRENT_UPDATE IC-Message Carrier=[ansi(h,NEWEST update for IC Message Carrier:)]%r%rThere are three new commands as of 5/11/95. List Clean which removes non-players from the ownerlist, View All which lists the names of all the messages that the object is holding, and Peek which allows any owner to `peek' at any message they wish to. Let me know what you think of them....%r%r[ansi(h,--)]
&MESSAGE IC-Message Carrier=$write * *:@sel [pmatch(%0)]=#-1,{@pem/sil %#=[ansi(h,[capstr(%0)])] is not a valid player.},{&M_%0[eval([num(me)],named)] me=%1;&N_%0[eval([num(me)],named)] me=%N;&T_%0[eval([num(me)],named)] me=[time()];@wait 1=&num%0 me=[eval([num(me)],actual)]; @wait 2=&tot%0 me=[eval([num(me)],named)];@emit [u(action)]}
&DUMP IC-Message Carrier=$dump *:&M_%N%0 me=;&N_%N%0 me=;&T_%N%0 me=;&num%N me=[switch([sub([v(num%N)],1)],<0,0,[sub([v(num%N)],1)])];@emit [u(trash)];@wait 1=&tot%N me=[switch([v(num%N)],0,0,>0,[v(tot%N)])]
&READ IC-Message Carrier=$scan *:@sel [isnum(%0)]=1,{@sel [member([lattr(me/M_%N*)],[ucstr(M_%N%0)])]=0,{@pem/sil %#=Message [ansi(h,%0)] does not exist.},{@pem/sil %#=[repeat(=-,39)]%rFrom:%b[ansi(h,[v(N_%N%0)])]%tWhen:%b[ansi(h,[v(T_%N%0)])]%r[repeat(=-,39)]%r%r%t[v(M_%N%0)]%r%r[repeat(=-,39)]%r;@oemit %#=[u(take)]}},{@pem/sil %#=Sorry, [ansi(h,%0)] is not a number.}
&ASK IC-Message Carrier=$ask:@pem/sil %#=[Name(me)] is holding [ansi(h,[switch([v(num%N)],,0,[v(num%N)])])] message(s) for you.
&CHECK IC-Message Carrier=$check:@pem/sil %#=[switch([lattr(me/M_%N*)],,[ansi(h,You have no messages.)],Your messages are:%r[ansi(h,[iter([revwords([lattr(me/M_%N*)])],[after(##,M_[ucstr(%N)])])])])]
&MENU IC-Message Carrier=$messhelp:@pem/sil %#=%r[repeat(=-=,23)]%r[center([ansi(h,[Name(me)]'s Menu)],69)]%r[repeat(=-=,23)]%r%r[ansi(h,WRITE <name> <message>)][rjust(Gives [Name(me)] a message for <name>.,47)]%r[ansi(h,ASK)][rjust(Asks [Name(me)] if there are any messages for you.,66)]%r[ansi(h,CHECK)][rjust(Lists the names of messages for you.,64)]%r[ansi(h,SCAN #)][rjust(Reads message #.,63)]%r[ansi(h,DUMP #)][rjust(Destroys message #.,63)]%r[ansi(h,OWNLIST)][rjust(Gives a list of people who can control [Name(me)].,62)]%r%r[repeat(=-=,23)]%r
&DESC1 IC-Message Carrier=This is a very flexible message carrier. I think it works best as a person or reception desk, but it can work like a pink elephant if that is what you want. To customize your new message carrier you need to add three attributes to the object. Take, Trash, and Action.%rTake is what is emitted when someone reads a message.%rTrash is what is emitted when someone destroys a message.%rAction is what is emitted when someone makes a message.%rExamples:%r&TAKE object=%%N reads %%p message.%r&TRASH object=%%N rips %%p message to shreds.%r&ACTION object=%%N gives %%p message to the pink elephant.%r%rThey evaluate substitutions so feel free to add them in. The first command you need to type is [ansi(i,SETUP)] before any thing else. Its main command menu is [ansi(h,MESSHELP)] and the owner menu is [ansi(h,OWNMENU)]. If you have trouble or want help @mail William and I will help as soon as I can.
@DESCRIBE IC-Message Carrier=[eval(me,desc1)]
&MENU1 IC-Message Carrier=$ownmenu:@pem/sil %#=[repeat(=-=,23)]%r[center([ansi(h,Owner's Menu for [Name(me)])],69)]%r[repeat(=-=,23)]%rThese commands can be used only by those on the owner list.:%r%r[ansi(h,NEWEST)]%b[xget(#3898,last_update)][rjust(Updates to the parent.,58)]%r[ansi(h,SUGGEST <whatever>)][rjust(Sends your suggestions for improvement.,51)]%r[ansi(h,UPCOMING)]%b[xget(#3898,last_upcoming)][rjust(Upcoming features that [name([owner([num(me)])])] is working on.,56)]%r[ansi(h,ADDOWNER <name>)][rjust(Adds person to owner list.,54)]%r[ansi(h,DELOWNER <name>)][rjust(Takes name off owner list.,54)]%r[ansi(h,CLEAN)][rjust(Clears the object of all messages.,64)]%r[ansi(h,LIST CLEAN)][rjust(Cleans ownerlist of non-players.,59)]%r[ansi(h,VIEW ALL)][rjust(Allows owners to view all message names.,61)]%r[ansi(h,PEEK <message name>)][rjust(Allows owners to read any message.,50)]%r%r[repeat(=-=,23)]%r%r
&UPCOMING IC-Message Carrier=$upcoming:@sel [member([v(owners)],%#)]=0,{@pem/sil %#=Sorry [Name(%#)],you are not on the ownerlist.},{@pem/sil %#=[eval(#3898,current_upcoming)]}
&UPDATE IC-Message Carrier=$newest:@sel [member([v(owners)],%#)]=0,{@pem/sil %#=Sorry [Name(%#)], you are not on the ownerlist.},{@pem/sil %#=[eval(#3898,current_update)]}
&SUGGEST IC-Message Carrier=$suggest *:@sel [member([v(owners)],%#)]=0,{@pem/sil %#=Sorry [Name(%#)], you are not on the ownerlist. Feel free to @mail William with your suggestion.},{@fo [owner(me)]=@mail/silent [owner(#3898)]=[Name(%#)] suggests:%b%b%0;@pem/sil %#=Suggestion for [Name(me)] noted.}
&OWNERS IC-Message Carrier=#344
&CATTHING IC-Message Carrier=$cat *=*:&%0 me=[cat([v(%0)],%1)]
&ADDOWNER IC-Message Carrier=$addowner *:@sel [member([v(owners)],%#)]=0,{@pem/sil %#=Sorry [Name(%#)], you are not on the ownerlist.},{@sel [member([v(owners)],[num(*%0)])]=0,{@sel [pmatch(%0)]=#-1,{@pem/sil %#=That is not a valid player.},{&owners me=[cat([v(owners)],[num(*%0)])];@pem/sil %#=[ansi(h,[capstr(%0)])] is added to the ownerlist.}},{@pem/sil %#=[capstr(%0)] is already on the list.}}
&DELOWNER IC-Message Carrier=$delowner *:@sel [member([v(owners)],%#)]=0,{@pem/sil %#=Sorry [Name(%#)], you are not on the ownerlist.},{@sel [member([v(owners)],[num(*%0)])]=0,{@pem/sil %#=[ansi(h,[capstr(%0)])] was not on the list.},{&owners me=[remove([v(owners)],[num(*%0)])];@pem/sil %#=[ansi(h,[capstr(%0)])] deleted from list.}}
&NAMED IC-Message Carrier=[switch([v(tot%0)],,1,0,1,>0,[add([v(tot%0)],1)])]
&ACTUAL IC-Message Carrier=[switch([v(num%0)],,1,0,1,>0,[add([v(num%0)],1)])]
&CLEAN IC-Message Carrier=$clean:@sel [member([v(owners)],%#)]=0,{@pem/sil %#=Sorry [Name(%#)], you are not on the ownerlist.},{@wipe [num(me)]/M_*;@wipe [num(me)]/T_*;@wipe [num(me)]/N_*;@wipe [num(me)]/tot*;@wipe [num(me)]/num*;@pem/sil %#=[Name(me)] cleaned.}
&OWNLIST IC-Message Carrier=$ownlist:@pem/sil %#=The owners of [Name(me)] are:%r[iter([v(owners)],[ansi(h,[Name(##)])])]%r
&MAKEOWNERS IC-Message Carrier=$setup:@sel %#=[owner(me)],{&owners me=%#;@@XX;@pem/sil %#=[Name(me)] is now set up for ownerlist commands.},{@pem/sil %#=You must own [Name(me)] to do that.}
&LIST_CLEAN IC-Message Carrier=$list clean:@sel [member([v(owners)],%#)]=0,{@pem/sil %#=Sorry [Name(%#)], you are not on the ownerlist.},{@dolist [xget(me,owners)]={@sel [pmatch(##)]=#-1,{&owners me=[setdiff([xget(me,owners)],##)]},@@};@pem/sil %#=Owner list cleared of non-players.}
&VIEW_ALL IC-Message Carrier=$view all:@sel [member([v(owners)],%#)]=0,{@pem/sil %#=Sorry [Name(%#)], you are not on the ownerlist.},{@pem/sil %#=Janette is holding these messages:%r[iter([lattr(me/M_*)],[after(##,M_)])]}
&PEEK IC-Message Carrier=$peek *:@sel [member([v(owners)],%#)]=0,{@pem/sil %#=Sorry [Name(%#)], you are not on the ownerlist.},{@sel [member([lattr(me/M_*)],M_[ucstr(%0)])]=0,{@pem/sil %#=That message does not exist.},{@pem/sil %#=[repeat(=-,39)]%rFrom:%b[ansi(h,[v(N_%0)])]%tWhen:%b[ansi(h,[v(T_%0)])]%r[repeat(=-,39)]%r%r%t[v(M_%0)]%r%r[repeat(=-,39)]%r;@oemit %#=[u(take)]}}
&CREDITS IC-Message Carrier=William@Battlestar, Wolfram@DuneII

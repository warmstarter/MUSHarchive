@create Parent: Zone
@link Parent: Zone = #2810
@set Parent: Zone = LINK_OK
@set Parent: Zone = NO_COMMAND
&LIST_ON Parent: Zone=[pemit(%0,[ansi(hb,+------------------------+---------+-------+-----------------------+)]%R[ansi(hb,|)] [ansi(hw,Name)] [space(17)] [ansi(hb,|)] [ansi(hw,Status:)] [ansi(hb,|)] [ansi(wh,Deck:)] [ansi(hb,|)] [ansi(hw,Location:)] [space(11)] [ansi(hb,|)]%R[ansi(hb,+------------------------+---------+-------+-----------------------+)]%R[iter(pinzone(num(me)),[setq(0,[switch(conn(##),-1,n,hc)])][setq(1,[u(for_rname,loc(##))])][ansi(bh,|)] [ansi(%q0,[ljust(left([class(##)] [name(##)],22),22)])] [ansi(hb,|)] [ansi(%q0,[ljust([switch(%q0,n,Asleep,Awake)],7)])] [ansi(hb,|)] [ansi(%q0,[ljust(last(%q1),5,%B)])] [ansi(hb,|)] [ansi(%q0,[ljust(left(first(%q1),21),21)])] [ansi(hb,|)],,%R)]%R[ansi(hb,+------------------------+---------+-------+-----------------------+)])]
&DISENGAGE_FORCEFIELD Parent: Zone=$disengage force*:@switch [u(command_check,%#)]=1,{&forcefield [loc(%#)]=0;@pem %#=You say, "[setq(0,Computer%, disengage security forcefields authorization [switch([rand(5)],0,alpha,1,beta,2,delta,3,gama,4,omega)] [rand(1000)].)]%q0";@oem [loc(%#)]/%#=%N says, "%q0";&log [v(sec_num)]=[get(v(sec_num)/log)]%R%N disengaged forcefields at: [u(for_rname,[loc(%#)])]%R-----[time()]}, {@pem %#=You don't have the authority to do that.}
&COMMAND_CHECK Parent: Zone=[switch([get(v(sec_num)/command)]%B[get(v(sec_num)/admin)],*%0*,1,0)]
&ENGAGE_FORCEFIELD Parent: Zone=$engage force*:@switch [u(command_check,%#)]=1,{&forcefield [loc(%#)]=1;@pem %#=You say, "[setq(0,Computer%, engage security forcefields authorization [switch([rand(5)],0,alpha,1,beta,2,delta,3,gama,4,omega)] [rand(1000)].)]%q0";@oem [loc(%#)]/%#=%N says, "%q0";&log [v(sec_num)]=[get(v(sec_num)/log)]%R%N engaged forcefields at: [u(for_rname,[loc(%#)])]%R-----[time()]}, {@pem %#=You don't have the authority to do that.}
&INT_OPEN Parent: Zone=$open int to *:@switch [setq(0,[extract(u(field_list),%0,1)])]%q0=,{@pem %#=That is not a valid room.}, {@pem %#=You open the intercom.;@oem [loc(%#)]/%#=%N opens the intercom.;&int_status [loc(%#)]=%q0;&int_status %q0=[loc(%#)];@rem %q0=The intercom clicks on.}
&INT_CLOSE Parent: Zone=$close int:@switch [get(loc(%#)/int_status)]=0, {@pem %#=The intercom is already closed.}, {@pem %#=You close the intercom.;@oem [loc(%#)]/%#=%N closes the intercom.;@rem [get(loc(%#)/int_status)]=The intercom shuts off.;&int_status [get(loc(%#)/int_status)]=0;&int_status [loc(%#)]=0}
&INT_LIST Parent: Zone=$int list *:@switch [and([lte(%0,[ceil(fdiv(words(u(field_list)),10))])],[gt(%0,0)])]=0, {@pem %#=That is not a valid page list.}, {@pem %#=[ansi(hb,+----+---+-----------------------------------------+)]%R[iter([extract(u(field_list),[switch(%0,1,1,[dec(%0)]1)],10)],[ansi(hb,|)]%B[ansi([setq(1,[switch(get(##/int_status),0,w,hr)])]%q1,[ljust(#@,3)])][ansi(hb,|)]%B[ansi(%q1,[switch(%q1,w,C,O)]%B)][ansi(hb,|)]%B[ansi(%q1,[ljust(u(for_rname,##),40)])][ansi(hb,|)],,%R)]%R[ansi(hb,+----+---+-----------------------------------------+)]
&LOCK Parent: Zone=[u(v(locked),%#)]
&ALL Parent: Zone=1
&RNAME_FORMAT Parent: Zone=* - [v(floor_type)] %0 <[v(ship_name)]>
&FIELD_STATUS Parent: Zone=$field status *:@switch [and([lte(%0,[ceil(fdiv(words(u(field_list)),10))])],[gt(%0,0)])]=0, {@pem %#=That is not a valid page list.}, {@pem %#=[ansi(hw,rjust(%0%/[ceil(fdiv(words(u(field_list)),10))],52))]%R[ansi(hb,+----+---+-----------------------------------------+)]%R[iter([extract(u(field_list),[switch(%0,1,1,[dec(%0)]1)],10)],[ansi(hb,|)]%B[ansi([setq(1,[switch(get(##/forcefield),1,rh,w)])]%q1,[ljust(#@,3)])][ansi(hb,|)]%B[ansi(%q1,[switch(%q1,w,D,U)]%B)][ansi(hb,|)]%B[ansi(%q1,[ljust(u(for_rname,##),40)])][ansi(hb,|)],,%R)]%R[ansi(hb,+----+---+-----------------------------------------+)]
&FOR_RNAME Parent: Zone=[left([before([name(%0)],%B<)],40)]
&FIELD_LIST Parent: Zone=[squish([v(field_add)] [setq(0,[u(field_list2)])][iter(v(field_remove),[setq(0,[edit(%q0,##,)])])]%q0)]
&FIELD_LIST2 Parent: Zone=[iter(lnum(inc(v(decks))),[u(filter_deck,##)],,%B)]
&FILTER_DECK Parent: Zone=[iter(inzone(num(me)),[switch(name(##),[u(rname_format,%0)],##%B)],,)]
&FLOOR_TYPE Parent: Zone=deck
&DECKS Parent: Zone=
&CHANGE_ALERT Parent: Zone=[if([u(command_check,%0)],[switch(|[v(valid_alerts)],*|%1|*,[pemit(%0,You say%, "%1 alert.")][oemit(loc(%0)/%0,name(%0) says%, "%1 alert.")][set(me,color:[setq(1,extract(v(alert_colors),member(ucstr(v(valid_alerts)),ucstr(%1),|),1,|))]%q1)][set(me,alert:[setq(0,[extract(v(valid_alerts),[member(ucstr(v(valid_alerts)),ucstr(%1),|)],1,|)])]%q0)][zemit(num(me),The wall panels [switch(%q0,normal,go dark.,red,start flashing [ansi(hr,red)]%, as sirens go off.,change to [lcstr([ansi(%q1,%q0)].)])])][set(v(sec_num),LOG:[get(v(sec_num)/log)]%R[name(%0)] changed alerts to %q0.%R-----[time()])],[pemit(%0,That is not a valid alert.)])],[pemit(%0,Permission Denied.)])]
&VALID_ALERTS Parent: Zone=Red|Yellow|Blue|Normal|Intruder
&ALERT_COLORS Parent: Zone=hr|hy|hb|hc|hm
&FIELD_REMOVE Parent: Zone=
&FIELD_ADD Parent: Zone=
&LOCKED Parent: Zone=all
&SHIP_NAME Parent: Zone=
&DISABLE_TL Parent: Zone=$disable turbo*:@switch [u(command_check,%#)]=1, {@switch [hasflag(v(tl_num),halt)]=1,{@pem %#=The turbolift is already disabled.}, {@pem %#=You say%, "Computer, disable the turbolift.";@oem [loc(%#)]/%#=%N says%, "Computer%, disable the turbolift.";@set [v(tl_num)]=halt;@rem [loc(%#)]=The computer chimes, "Turbolift disabled.";@rem [loc(v(tl_num))]=The turbolift slows to a halt, as the power shuts off.;&log [v(sec_num)]=[get(v(sec_num)/log)]%R%N disabled the turbolift.%R-----[time()]}}, {@pem %#=You don't have the authority to do that."}
&ENABLE_TL Parent: Zone=$enable turbo*:@switch [u(command_check,%#)]=1, {@switch [hasflag(v(tl_num),halt)]=0, {@pem %#=The turbolift isn't disabled.}, {@pem %#=You say%, "Computer, enable the turbolift.";@oem [loc(%#)]/%#=%N says%, "Computer%, enable the turbolift.";@set [v(tl_num)]=!halt;@rem [loc(%#)]=The computer chimes, "Turbolift enabled.";@rem [loc(v(tl_num))]=The lights flicker as the turbolift comes back to live.;&log [v(sec_num)]=[get(v(sec_num)/log)]%R%N enabled the turbolift.%R-----[time()]}}, {@pem %#=You don't have the authority to do that."}
&MAN_CMD Parent: Zone=$man *:@switch [strmatch(security,*%0*)]=1,{@switch [loc(%#)]=[loc(v(sec_num))],{@pem %#=You man the [name(v(sec_num))].;@oem [loc(%#)]/%#=%N mans the [name(v(sec_num))].;&user [v(sec_num)]=%#}, {@pem %#=Huh?  (Type "help" for help.)}}
&ANN_INTRUDER Parent: Zone=[zemit(num(me),The alert panels switch to [ansi(hm,Magenta)].%RIntruder detected at: [before(name(%1),%B-)])][set(me,alert:Intruder)][set(me,color:hm)][set(v(sec_num),LOG:[get(v(sec_num)/log)]%RIntruder detected: [name(%0)] at [before(name(%1),%B-)].%R-----[time()])]
&CMD_LISTON Parent: Zone=$list on*:th [u(list_on,%#)]
&CMD_ALERT Parent: Zone=$* alert:think [u(CHANGE_ALERT,%#,%0)]
@DESCRIBE Parent: Zone=To install security, do the following:%R1%) parent the zone and create and parent a security console.%R2%) set the attr ship_name on the zone to the name of the ship%R3%) set the attr decks on the zone to the # of decks on the ship%R4%) set the attr sec_num  on the zone to the # of the security console%R5%) set the attr field_add on the zone to the db#'s of rooms that don't have a deck # in the desc%R6%) set the attr field_remove to rooms you don't want people to be able to change the forcefield status on from the security console...ie, like the armory and brigs.%R7%) type: "setup verbal" to install the verbal stuff to the system...like intercoms..%RThe security lists work as follows:%RAdmin access: Has same access as command access, but can add/remove people from the command access lsit, as well as the crew and visitor list.%RCommand access: Can add people to the visitor and crew lists, see command help to see a list of what other commands you can do.%RCrew access: gives you normal access to the ship.%RVisitor access: basically just keeps the forcefields from raising when someone has this. no privaliges.%R%RNOTE: Room names should be named as the following: Bridge - Deck 1 <USS Whatever>%RMain Engineering - Deck 1000 <USS Bla>%Retc...
@set Parent: Zone/DESCRIBE=no_command visual
@create Parent: Console
@link Parent: Console = #2810
@set Parent: Console = LINK_OK
@set Parent: Console = NO_COMMAND
&ACCESS Parent: Console=[and(strmatch([v(crew)]%B[v(command)]%B[v(admin)],*%#*),strmatch(v(user),%#))]
&VIEW_LOG Parent: Console=$view log*:@pem %#=[ansi(rh,Security Logs:%B[ansi(bh,[repeat(-,35)])][v(log)]%R[ansi(hb,[repeat(-,50)])]
&CLEAR_LOG Parent: Console=$clear log*:@switch [u(zone(here)/command_check,%#)]=1, {@pem %#=You clear the security logs.;&log me=%R%N cleared the logs.%R-----[time()]}, {@pem %#=Permission denied.}
&LOWER_FIELD Parent: Console=$lower field *:@switch [setq(0,[extract(u(zone(here)/field_list),%0,1)])]%q0=,{@pem %#=That is not a valid field.}, {@switch [get(%q0/forcefield)]=0, {@pem %#=The forcefield around that room is not currently raised.}, {&forcefield %q0=0;@rem %q0=Forcefields around the exits disapate.;@pem %#=The forcefield around the [setq(1,[before([u(zone(here)/for_rname,%q0)],%B-)])]%q1 has been lowered.;&log me=[v(log)]%R%N lowered the forcefield around the %q1.%R-----[time()]}}
&RAISE_FIELD Parent: Console=$raise field *:@switch [setq(0,[extract(u(zone(here)/field_list),%0,1)])]%q0=,{@pem %#=That is not a valid field.}, {@switch [get(%q0/forcefield)]=1, {@pem %#=The forcefield around that room is currently raised.}, {&forcefield %q0=1;@rem %q0=Forcefields materialize around the exits.;@pem %#=The forcefield around the [setq(1,[before([u(zone(here)/for_rname,%q0)],%B-)])]%q1 how been raised.;&log me=[v(log)]%R%N raised the forcefield around the %q1.%R-----[time()]}}
&ACCESS_LIST Parent: Console=$access list:@pem %#=[ansi(rh,Access List:%B)][ansi(bh,[repeat(-,38)])]%R[space(3)][ansi(rh,Admin Access:)]%R%T[iter(v(admin),[name(##)],,%,%B)]%R[space(3)][ansi(rh,Command Access:)]%R%T[iter(v(command),[name(##)],,%,%B)]%R[space(3)][ansi(rh,Crew Access:)]%R%T[iter(v(crew),[name(##)],,%,%B)]%R[space(3)][ansi(rh,Visitor Access:)]%R%T[iter(v(visitor),[name(##)],,%,%B)]%R[ansi(bh,[repeat(-,50)])]
&ACCESS_ADD Parent: Console=$add access *=*:@switch [u(zone(here)/command_check)]=0, {@pem %#=You don't have the authority to do that.}, {@switch [type(*%1)]=PLAYER, {@switch |command|crew|visitor|=*|%0|*,{@switch %0=command, {@switch [v(admin)]=*%#*, {@pem %#=[name(*%1)] was granted command access.;&command me=[v(command)]%B[num(*%1)]}, {@pem %#=You don't have the authority to grant people command access.}}, {@pem %#=[setq(0,[num(*%1)])][name(%q0)] was granted %0 access.;&%0 me=[v(%0)]%B%q0}}, {@pem %#=Invalid access list.}}, {@pem %#=I Couldn't find who you were refering to.}
&ACCESS_DEL Parent: Console=$remove access *=*:@switch [u(zone(here)/command_check)]=0, {@pem %#=You don't have the authority to do that.}, {@switch [type(*%1)]=PLAYER, {@switch |command|crew|visitor|=*|%0|*,{@switch %0=command, {@switch [v(admin)]=*%#*, {@switch [member(v(command),[num(*%1)])]=0, {@pem %#=[name(*%1)] dosn't have command access.}, {@pem %#=[name(*%1)]'s command access was revoked.;&command me=[squish([edit([v(command)],[num(*%1)],)])]}}, {@pem %#=You don't have the authority to revoke people command access.}}, {@switch [member(v(%0),[num(*%1)])]=0, {@pem %#=[name(*%1)] dosn't have %0 access.}, {@pem %#=[setq(0,[num(*%1)])][name(%q0)]'s %0 access was revoked.;&%0 me=[squish(edit(v(%0),%q0,))]}}}, {@pem %#=Invalid access list.}}, {@pem %#=I Couldn't find who you were refering to.}
&UNMAN Parent: Console=$unman *:@switch [strmatch(security,*%0*)]=1, {@pem %#=You unman the [name(me)].;@oem %#=%N unmans the [name(me)].;&user me=}

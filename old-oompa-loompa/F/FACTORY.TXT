@create Factory Parent
@lock/Basic Factory Parent==me
@lock/Use Factory Parent=CANUSE/1
@set Factory Parent = WIZARD
@set Factory Parent = SAFE
@set Factory Parent = NO_COMMAND
&BETWEEN Factory Parent=[and([gte(%0,%1)],[lte(%0,%2)])]
&CAPACITY_AVAILABLE Factory Parent=414
&CAPACITY_NEEDED Factory Parent=0
&CMD_ALLOCATE Factory Parent=$alloc *=*:th [switch({[u(iscommod,[secure(%0)])][cand([lte(%1,[add([v(free_power)],[v(%0_alloc)])])],[gte(%1,0)])]},11,[u(fun_alloc_power,[secure(%0)],[secure(%1)])],10,[pemit(%#,Not enough power to do that.)],01,[pemit(%#,That is not a valid commodity.)],00,[pemit(%#,That is not a valid commodity.)])]
&CMD_COMMOD_INFO Factory Parent=$commod info *:th [switch([u(iscommod,[secure(%0)])],1,[pemit(%#,[ljust([ansi(hr,Commodity:)],13)] [ansi(h,[capstr([lcstr(%0)])])]%r[ansi(hr,Productivity:)] [ansi(h,[v(%0.PRODUCTION)])]%r[ljust([ansi(hr,Energy Req.:)],13)] [ansi(h,[v(%0.ENERGY)])]%r[ljust([ansi(hr,Description:)],13)] [ansi(h,[v(%0.DESC)])]%r[ljust([ansi(hr,Capacity per Unit:)],13)] [ansi(h,v(%0.weight))]%r[ansi(hr,Required per Unit:)] [u(fun_find_requires2,[secure(%0)])])],0,[pemit(%#,Invalid commodity.)])]
&CMD_COMMOD_LIST Factory Parent=$commod list:th [pemit(%#,[ansi(hb,[repeat(=,76)])]%r[center([ansi(h,Producable Commodities)],76)]%r[ansi(hb,[repeat(=,76)])]%r%b[iter([u(commodlist)],[capstr([lcstr(##)])],|,%r)]%r%r[ansi(h,Type)] [ansi(hr,commod info <commod>)] [ansi(h,for information.)]%r[ansi(hb,[repeat(=,76)])]
&CMD_DESTINATION_LIST Factory Parent=$list destinations:th [pemit(%#,[ansi(v(border_color),[repeat(=,76)])]%r[center([ansi(v(title_color),[name(me)] Destination List)],76)]%r[ansi(v(border_color),[repeat(=,76)])]%r [iter([edit([v(destination_list)],|,%b)],[ljust(##,8)][name(##)]%r)][ansi(v(border_color),[repeat(=,76)])])]
&CMD_HOUSE_LIST Factory Parent=$house list:th [pemit(%#,[ansi(v(border_color),[repeat(=,76)])]%r[center([ansi(v(title_color),[name(me)] House List)],76)]%r[ansi(v(border_color),[repeat(=,76)])]%r [iter([edit([v(house_list)],|,%b)],[ljust(##,8)][name(##)]%r)][ansi(v(border_color),[repeat(=,76)])])]
&CMD_LOAD_TECH Factory Parent=$load tech *:th [if(hasattr(v(designdb),SYS_[edit(%0,%b,_)]),[if(strmatch(u(fun_techlist,[get(%#/empire)]),*|[edit(%0,_,%b)]|*),[if(hasattr(me,[edit(%0,%b,_)].production),[pemit(%#,That is already loaded as a technology here.)],[u(fun_load_tech,[edit(%0,%b,_)])])],[pemit(%#,You do not own that technology.)])],[pemit(%#,That is not a valid technology.)])]
&CMD_MANUFACTURE Factory Parent=$manufacture *=*:th [switch([hasattr(me,house)],1,[u(fun_calc_used_workers)][switch([u(iscommod,[secure(%0)])][lte(%1,[add([switch(hasattr(v(house),workers_[num(me)]),1,[sub([get(v(house)/workers_[num(me)])],[v(used_workers)])],0,0)],[switch([hasattr(me,producing_%0)],1,[v(producing_%0)],0,1)])])][gte(%1,0)],111,[u(fun_set_manufacturing,[secure(%0)],[ceil([secure(%1)])])],110,[pemit(%#,Number must be greater than 0.)],101,[pemit(%#,Not enough workers to do that.)],100,[pemit(%#,Not enough workers to do that.)],011,[pemit(%#,That is not a valid commodity.)],001,[pemit(%#,That is not a valid commodity.)],000,[pemit(%#,That is not a valid commodity.)],010,[pemit(%#,That is not a valid commodity.)])],0,[pemit(%#,You do not have a house for your workers!)])]
&CMD_POWER_PLANT_LIST Factory Parent=$list power sources:th [pemit(%#,[ansi(v(border_color),[repeat(=,76)])]%r[center([ansi(v(title_color),[name(me)] Power Sources List)],76)]%r[ansi(v(border_color),[repeat(=,76)])]%r [iter([edit([v(power_plant_list)],|,%b)],[ljust(##,8)][name(##)]%r)][ansi(v(border_color),[repeat(=,76)])])]
&CMD_SET_DESTINATION Factory Parent=$set destination *:th [switch([strmatch([v(destination_list)],*|%0|*)],1,[set(me,warehouse:%0)][pemit(%#,The commodities are now transferred to [name(%0)] hourly.)],0,[pemit(%#,Invalid destination.)])]
&CMD_SET_HOUSE Factory Parent=$set house *:th [switch([strmatch([v(house_list)],*|%0|*)],1,[set(me,house:%0)][pemit(%#,The new house for workers is [name(%0)].)],0,[pemit(%#,Invalid house.)])]
&CMD_SET_MAX_CAPACITY Factory Parent=$set max capacity *:th [switch([hasflag(%#,Wiz)],1,[u(fun_set_max_capacity,%0)],0,[pemit(%#,Permission denied.)])]
&CMD_SET_POWER_PLANT Factory Parent=$set power plant *:th [switch([strmatch([v(power_plant_list)],*|%0|*)],1,[set(me,power_plant:%0)][pemit(%#,The new source of power is [name(%0)].)],0,[pemit(%#,Invalid power plant.)])]
&CMD_SET_SOURCE Factory Parent=$set source *:th [switch([strmatch([u(source_list)],*|%0|*)],1,[set(me,source:%0)][pemit(%#,The commodities are now transferred from [name(%0)] hourly.)],0,[pemit(%#,Invalid source.)])]
&CMD_SOURCE_LIST Factory Parent=$source list:th [pemit(%#,[ansi(v(border_color),[repeat(=,76)])]%r[center([ansi(v(title_color),[name(me)] Source List)],76)]%r[ansi(v(border_color),[repeat(=,76)])]%r [iter([edit([v(source_list)],|,%b)],[ljust(##,8)][name(##)]%r)][ansi(v(border_color),[repeat(=,76)])])]
&CMD_STOP_MANUFACTURING Factory Parent=$stop manufacturing *:th [switch({[u(iscommod,[secure(%0)])][hasattr(me,PRODUCING_%0)]},01,{[pemit(%#,That is not a valid material.)]},10,{[pemit(%#,We are not manufacturing that at this time.)]},00,{[pemit(%#,That is not a valid commod.)]},11,{[wipe(me/producing_%0)][pemit(%#,No longer manufacturing [capstr([lcstr(%0)])].)][wipe(me/%0_alloc)][u(fun_calc_power_used)][u(fun_calc_power_needed)][u(fun_calc_power_available)][[u(fun_calc_capacity_remaining)][u(fun_calc_used_workers)]})]
&CMD_STOREHOUSE Factory Parent=$storehouse:th [pemit(%#,[ansi(v(border_color),[repeat(=,76)])]%r[center([ansi(h,Storehouse Contents)],76)]%r[ansi(v(border_color),[repeat(=,76)])]%r[if([lattr([v(source)]/STORAGE_*)],[u([v(source)]/fun_find_contents2)],None%r)][ansi(v(border_color),[repeat(=,76)])]
&CREDITS Factory Parent=Dave@GalacticMUSH [EMAIL: davemilford@home.com] [ICQ: 8516328]
@set Factory Parent/CREDITS=no_command
&CURRENT_BUFF Factory Parent=4
&CURRENT_CAPACITY Factory Parent=0
@DESCRIBE Factory Parent=%b[squish([u(fun_calc_used_workers)][u(fun_calc_power_status)][u(fun_calc_power_available)][edit([set(me,power_needed:0)],%b,)][u(fun_calc_power_needed)])][ansi(v(border_color),[repeat(_,74)]%r/)]%b[ljust([ansi(v(name_color),[v(planet)] Factory)],73)][ansi(v(border_color),\\%r|[repeat(-,74)]|%r|)]%b[ljust([ansi(v(title_color),Owner:)] [v(owner)],73)][ansi(v(border_color),|%r|)]%b[ljust([ansi(v(title_color),Source:)] [if([hasattr(me,source)],[name(u(source))]%b%b%([u(source)]%),None)],73)][ansi(v(border_color),|%r|)]%b[ljust([ansi(h,Destination:)] [switch([hasattr(me,warehouse)],1,[name([u(warehouse)])]%b%b%([u(warehouse)]%),0,None)],73)][ansi(v(border_color),|%r|[repeat(-,74)]|%r|)]%b[ljust([ansi(v(title_color),Housing Unit%b:)] [if(hasattr(me,house),name(v(house))%b%b%([v(house)]%),None)],73)][ansi(v(border_color),|%r|)]%b[ljust([ansi(v(title_color),Work Force%b%b%b:)] [u(fun_check_house)],73)][ansi(v(border_color),|%r|)]%b[ljust([ansi(v(title_color),Worker Health:)] [if(hasattr(me,house),[u(fun_show_worker_health)] %([mul([fdiv([get(v(house)/worker_health)],10)],100)]%%%),Not Available)],73)][ansi(v(border_color),|%r|[repeat(-,74)]|%r|)]%b[ljust([ansi(v(title_color),Power Plant:)]%b[switch([hasattr(me,power_plant)],1,[name([u(power_plant)])]%b%b%([u(power_plant)]%),0,None)],73)][ansi(v(border_color),|%r|)]%b[ljust([ansi(v(title_color),Power Supplied%b:)]%b[if(hasattr(me,power_plant),[u(fun_calc_power_supplied)][if(strmatch(name(u(power_plant)),*Warehouse*),%b[ansi(v(border_color),%[)][ansi(v(subtitle_color),Batteries)][ansi(v(border_color),%])])],0)],36)][ljust([ansi(v(title_color),Power Used%b%b:)]%b[v(used_power)],37)][ansi(v(border_color),|%r|)]%b[ljust([ansi(v(title_color),Power Available:)]%b[v(free_power)],36)][ljust([ansi(v(title_color),Power Needed:)]%b[v(power_needed)],37)][ansi(v(border_color),|%r|[repeat(-,74)]|%r|)]%b[ljust([ansi(v(title_color),Currently Manufacturing:)],73)][ansi(v(border_color),|%r|)]%b[ljust([ansi(v(subtitle_color),Commodity)],22)][ljust([ansi(v(subtitle_color),Workers)],9)][ljust([ansi(ny,Power)],8)][ljust([ansi(v(subtitle_color),Power Req.)],14)][ljust([ansi(v(subtitle_color),Hourly Production)],20)][ansi(v(border_color),|%r|)]%b[u(fun_find_manufacturing)][ljust([ansi(v(title_color),Idle Workers:)] [if(hasattr(me,house),[if(hasattr(v(house),workers_[num(me)]),[sub([get(v(house)/workers_[num(me)])],[v(used_workers)])],0)],0)],73)][ansi(v(border_color),|)]%r[ansi(v(border_color),\\[repeat(_,74)]/)]
@set Factory Parent/DESCRIBE=no_command visual
&DESTINATION_LIST Factory Parent=|
&FREE_POWER Factory Parent=0
&FUN_ALLOC_POWER Factory Parent=[set(me,%0_alloc:%1)][pemit(%#,[capstr([lcstr(%0)])] now has %1 power.)][u(fun_calc_power_used)][u(fun_calc_power_available)]
&FUN_CALC_CAPACITY_NEEDED Factory Parent=[set(me,capacity_needed:0)][iter([lattr(me/PRODUCING_*)],[set(me,capacity_needed:[add([v(capacity_needed)],[v(##)])])]
&FUN_CALC_ENERGY Factory Parent=[mul([v(%0.ENERGY)],[v(producing_%0)])]
&FUN_CALC_GOT_ENOUGH_MATERIAL Factory Parent=[squish([set(me,current_buff:1)][iter([v(%0.req)],[set(me,buff_[v(current_buff)]:[switch([gte([get([v(source)]/storage_[extract([edit(##,|,%b)],1,1)])],[mul([extract([edit(##,|,%b)],2,1)],[u(fun_calc_prod2,%0)])])],1,1,0,0)][set(me,current_buff:[inc([v(current_buff)])])])])][switch([dec([v(current_buff)])],1,[v(buff_1)],2,[cand([v(buff_1)],[v(buff_2)])],3,[cand([v(buff_1)],[v(buff_2)],[v(buff_3)])],4,[cand([v(buff_1)],[v(buff_2)],[v(buff_3)],[v(buff_4)])],5,[cand([v(buff_1)],[v(buff_2)],[v(buff_3)],[v(buff_4)],[v(buff_5)])])][u(fun_clear_buff)])]
&FUN_CALC_IDLE_WORKERS Factory Parent=
&FUN_CALC_POWER_AVAILABLE Factory Parent=[if(hasattr(me,power_plant),[if(hasattr(u(power_plant),power_[num(me)]),[set(me,FREE_POWER:[sub([switch([hasattr(me,power_plant)],1,[u(fun_power_supplied)],0,0)],[v(used_power)])])])])]
&FUN_CALC_POWER_NEEDED Factory Parent=[set(me,power_needed:0)][iter([lattr(me/PRODUCING_*)],[set(me,power_needed:[add([v(power_needed)],[mul([v(##)],[v([edit(##,PRODUCING_,)].ENERGY)])])]
&FUN_CALC_POWER_STATUS Factory Parent=[switch([hasattr(me,power_plant)],1,[set(me,powered:yes)],0,[set(me,powered:no)])]
&FUN_CALC_POWER_SUPPLIED Factory Parent=[switch(strmatch(name(u(power_plant)),*Warehouse*),1,[if(hasattr(u(power_plant),storage_batteries),[mul(get(u(power_plant)/storage_batteries),400)],0)],[if(hasattr(u(power_plant),power_[num(me)]),[get([u(power_plant)]/POWER_[num(me)])],0)])]
&FUN_CALC_POWER_USED Factory Parent=[set(me,used_power:0)][iter([lattr(me/*_ALLOC)],[set(me,used_power:[add([v(used_power)],[v(##)])])]
&FUN_CALC_PROD Factory Parent=[switch([u(fun_calc_got_enough_material,%0,[v(producing_%0)])],1,[if([gt([mul(v(producing_%0),v(%0.energy))],v(%0_alloc))],[round([mul([mul([mul([v(%0.PRODUCTION)],[v(producing_%0)])],[fdiv([get(v(house)/worker_health)],10)])],[fdiv(v(%0_alloc),[mul(v(producing_%0),v(%0.energy))])])],2)],[round([mul([mul([v(%0.PRODUCTION)],[v(producing_%0)])],[fdiv([get(v(house)/worker_health)],10)])],2)])],0,0)]
&FUN_CALC_PROD2 Factory Parent=[switch([gte([v(%0_alloc)],[mul([v(%0.energy)],[v(producing_%0)])])],1,[mul([mul([v(%0.production)],[v(PRODUCING_%0)])],[fdiv([get(v(house)/worker_health)],10)])],0,0)]
&FUN_CALC_PROD_OLD Factory Parent=[switch([and([gte([v(%0_alloc)],[mul([v(%0.ENERGY)],[v(producing_%0)])])],[u(fun_calc_got_enough_material,%0,[v(producing_%0)])])],1,[mul([mul([v(%0.PRODUCTION)],[v(producing_%0)])],[fdiv([get(v(house)/worker_health)],10)])],0,0)]
&FUN_CALC_USED_WORKERS Factory Parent=[set(me,used_workers:0)][if([lattr(me/PRODUCING_*)],[iter([lattr(me/PRODUCING_*)],[set(me,used_workers:[add(v(used_workers),v(##))])])]
&FUN_CHECK_HOUSE Factory Parent=[if([hasattr(me,house)],[if([hasattr(v(house),workers_[num(me)])],[get(v(house)/workers_[num(me)])],0)],0)]
&FUN_CHECK_MATERIAL Factory Parent=[iter([lattr(me/PRODUCING_*)],[switch([squish([u(fun_calc_got_enough_material,[edit(##,PRODUCING_,)],[v(##)])])],0,[emit(Raw material shortage for [capstr([lcstr([edit(##,PRODUCING_,)])])] production.  Halting production.)][set(me,##:0)][u(fun_calc_capacity_remaining)][u(fun_calc_capacity_used)])]
&FUN_CLEAR_BUFF Factory Parent=[iter([lattr(me/buff_*)],[wipe(me/##)])]
&FUN_DELETE_BATTERIES Factory Parent=[set(u(power_plant),storage_batteries:[sub([get(u(power_plant)/storage_batteries)],[round(fdiv(v(used_power),400),2)])])][u(u(power_plant)/fun_calc_capacity_used)][u(u(power_plant)/fun_calc_capacity_remaining)]
&FUN_FIND_COMMOD_LIST Factory Parent=%b[iter([v(commodlist)],[ljust([ansi(ng,[capstr([lcstr(##)])])],20)][ljust([v(##.production)],15)][ljust([v(##.energy)],15)][u(fun_find_requires,##)]
&FUN_FIND_MANUFACTURING Factory Parent=[if([lattr(me/PRODUCING_*)],{[iter([lattr(me/PRODUCING_*)],[ljust([capstr([lcstr([edit(##,PRODUCING_,)])])],22)][ljust([v(##)],9)][ljust([ansi([u(fun_power_color,##)],[v([edit(##,PRODUCING_,)]_alloc)])],8)][ljust([u(fun_calc_energy,[edit(##,PRODUCING_,)])],14)][ljust([ansi(nc,[u(fun_calc_prod,[edit(##,PRODUCING_,)])])][switch([squish([u(fun_calc_got_enough_material,[edit(##,PRODUCING_,)],[v(##)])])],0,%b[ansi(nb,%[)][ansi(nr,Insuff. Material)][ansi(nb,%])])],20)][ansi(v(border_color),|%r|)])][ansi(v(border_color),[repeat(-,74)]|%r|%b)]},{[ljust([ansi(hr,None)],73)][ansi(v(border_color),|%r|)][ansi(v(border_color),[repeat(-,74)]|%r|%b)]})]
&FUN_FIND_REQUIRES Factory Parent=[iter([v(%0.REQ)],[ansi(ny,[ljust([capstr([lcstr([extract([edit(##,|,%b)],1,1)])])],15)])]%([ansi(nc,[extract([edit(##,|,%b)],2,1)])]%)%r[space(50)])]%r
&FUN_FIND_REQUIRES2 Factory Parent=[iter([v(%0.REQ)],[ansi(ny,[ljust([capstr([lcstr([extract([edit(##,|,%b)],1,1)])])],15)])]%([ansi(nc,[extract([edit(##,|,%b)],2,1)])]%)%r[space(18)])]
&FUN_LOAD_TECH Factory Parent=[set(me,%0.production:[get(v(shipsys)/%0.production)])][set(me,%0.energy:[get(v(shipsys)/%0.energy)])][if(hasattr(me,commodlist),[set(me,commodlist:[v(commodlist)]%0|)],[set(me,commodlist:[lit([u(v(econo)/commodlist)])]%0|)])][pemit(%#,Technology '[edit(%0,_,%b)]' added to the Factory's production line.)]
&FUN_MOVE_COMMODS Factory Parent=[iter([lattr(me/STORAGE_*)],[switch([u(iscommod,[edit(##,STORAGE_,)])],1,[set([u(warehouse)],##:[switch([hasattr([u(warehouse)],##)],1,[add([get([u(warehouse)]/##)],[v(##)])],0,[v(##)])])][wipe(me/##)])][u([u(warehouse)]/fun_calc_capacity_used)][u([u(warehouse)]/fun_calc_capacity_remaining)])]
&FUN_POWER_COLOR Factory Parent=[switch([lt([v([edit(%0,PRODUCING_,)]_alloc)],[u(fun_calc_energy,[edit(%0,PRODUCING_,)])])],1,nr,0,[switch([gt([v([edit(%0,PRODUCING_,)]_alloc)],[u(fun_calc_energy,[edit(%0,PRODUCING_,)])])],1,nm,0,ng)])]
&FUN_POWER_STATUS Factory Parent=[switch([v(powered)],yes,[switch([gt([v(power_needed)],[v(used_power)])],1,[ansi(hr,Insufficient Power)],0,[ansi(hg,Powered)])],no,[ansi(hr,No Power)],insufficient,[ansi(hy,Insufficient Power)],None)]
&FUN_POWER_SUPPLIED Factory Parent=[u(fun_calc_power_supplied)]
&FUN_PROD_CYCLE Factory Parent=[u(fun_check_material)][iter([lattr(me/PRODUCING_*)],[setq(0,[u(fun_calc_prod,[edit(##,PRODUCING_,)])])][if([lt([mul(%q0,[v([edit(##,PRODUCING_,)].weight)])],[get(u(warehouse)/capacity_remaining)])],[if(not(strmatch(%q0,0)),[set(me,STORAGE_[edit(##,PRODUCING_,)]:%q0)][u(fun_reduce_materials,##)])])])][set(me,lastprod:[secs()])][u(fun_move_commods)]
&FUN_PROD_CYCLE_OLD Factory Parent=[u(fun_check_material)][iter([lattr(me/PRODUCING_*)],[switch([hasattr(me,STORAGE_[edit(##,PRODUCING_,)])],1,[set(me,STORAGE_[edit(##,PRODUCING_,)]:[add([v(storage_[edit(##,PRODUCING_,)])],[u(fun_calc_prod,[edit(##,PRODUCING_,)])])])][u(fun_reduce_materials,##)],0,[set(me,STORAGE_[edit(##,PRODUCING_,)]:[u(fun_calc_prod,[edit(##,PRODUCING_,)])])][u(fun_reduce_materials,##)])][set(me,lastprod:[secs()])][trigger(me/fun_move_commods)][u(fun_check_material)]
&FUN_REDUCE_MATERIALS Factory Parent=[iter([v([edit(%0,PRODUCING_,)].REQ)],[set([v(source)],storage_[extract([edit(##,|,%b)],1,1)]:[sub([get([v(source)]/storage_[extract([edit(##,|,%b)],1,1)])],[mul([extract([edit(##,|,%b)],2,1)],[u(fun_calc_prod2,[edit(%0,PRODUCING_,)])])])])]
&FUN_SET_CAPACITY Factory Parent=[set(me,current_capacity:%0)][u(fun_calc_capacity_needed)][pemit(%#,%0 workers are now available.)][switch([lt(%0,[v(capacity_needed)])],1,{[pemit(%#,Not enough workers, resetting allocations.)][iter([lattr(me/PRODUCING_*)],[set(me,##:0)])]})][u(fun_calc_capacity_remaining)][u(fun_calc_power_used)][u(fun_calc_power_needed)][u(fun_calc_power_available)][u(fun_calc_food_needed)][u(fun_calc_water_needed)]
&FUN_SET_MANUFACTURING Factory Parent=[switch([hasattr(me,power_plant)],1,[switch([strmatch(u(warehouse),[v(none)])],1,[pemit(%#,You do not have a destination for the product set!)],0,[set(me,PRODUCING_%0:%1)][switch([hasattr(me,%0_alloc)],0,[set(me,%0_alloc:0)])][pemit(%#,%1 workers have been assigned to manufacture [capstr([lcstr(%0)])].)][u(fun_calc_power_used)][u(fun_calc_power_needed)][u(fun_calc_power_available)][u(fun_calc_used_workers)])],0,[pemit(%#,The Factory is unpowered.)])]
&FUN_SET_MAX_CAPACITY Factory Parent=[set(me,max_capacity:%0)][pemit(%#,[name(me)] now has %0 available workers.)]
&FUN_SET_POWER_PLANT Factory Parent=[set(me,power_plant:%0)][pemit(%#,[name(me)] is now using [name(%0)] %(%0%) as a Power Plant.)]
&FUN_SHOW_WORKER_HEALTH Factory Parent=[if([strmatch([get(v(house)/worker_health)],0)],[ansi(hr,Dying)])][if([u(between,[get(v(house)/worker_health)],0.1,4.9)],[ansi(hr,Bad)])][if([u(between,[get(v(house)/worker_health)],5.0,7.5)],[ansi(hy,Fair)])][if([u(between,[get(v(house)/worker_health)],7.6,8.9)],[ansi(hg,Good)])][if([u(between,[get(v(house)/worker_health)],9.0,10.0)],[ansi(hg,Excellent)])]
&FUN_SMARTALLOC Factory Parent=[set(me,AMOUNT_DONE:0)][iter([lattr(me/*_ALLOC)],[setq(0,[v(##)])][if([not([hasattr(me,ALLOC_DONE)])],[if([gte(v(##),[sub(%0,[v(amount_done)])])],[set(me,##:[sub([v(##)],[sub(%0,[v(amount_done)])])])][set(me,ALLOC_DONE:YES)],[set(me,##:0)][set(me,amount_done:[add(v(amount_done),%q0)])])])])][wait(1,[lit([wipe(me/amount_done)][wipe(me/alloc_done)][u(fun_calc_power_used)][set(me,free_power:0)])])]
&FUN_TECHLIST Factory Parent=[setq(0,[edit(%0,%b,_)])][get(v(designdb)/CORP_%q0_ENGINES)][get(v(designdb)/CORP_%q0_SHIELD)][get(v(designdb)/CORP_%q0_SENSORS)][get(v(designdb)/CORP_%q0_FUEL_SYSTEM)][get(v(designdb)/CORP_%q0_JUMP_DRIVE)][get(v(designdb)/CORP_%q0_THRUSTERS)][get(v(designdb)/CORP_%q0_REACTOR)]
&FUN_WAREHOUSE Factory Parent=[if([lattr(me/STORAGE_*)],%b[iter([lattr(me/STORAGE_*)],[ljust([capstr([lcstr([edit(##,STORAGE_,)])])],30)][u(##)]%r)],None%r)]
&HOUSE_LIST Factory Parent=|
&ISCOMMOD Factory Parent=[strmatch([u(commodlist)],*|%0|*)]
&LASTPROD Factory Parent=954798665
&MAX_CAPACITY Factory Parent=10
&OWNER Factory Parent=Administration Production Corp.
&PLANET Factory Parent=Factory Parent
&POWERED Factory Parent=yes
&POWER_NEEDED Factory Parent=0
&POWER_PLANT Factory Parent=[v(none)]
&POWER_PLANT_LIST Factory Parent=|
&POWER_SWEEP Factory Parent=[u(fun_calc_power_needed)][switch(gt(v(used_power),u(fun_power_supplied)),1,[emit(Global power shortage.  Resetting allocations.)][u(fun_smartalloc,[sub(v(used_power),u(fun_calc_power_supplied))])])][u(fun_calc_power_used)][u(fun_calc_power_needed)][u(fun_calc_power_available)][u(fun_calc_capacity_remaining)])]
&SOURCE Factory Parent=[u(warehouse)]
&SOURCE_LIST Factory Parent=|
&SWEEP Factory Parent=[wait(1,{[lit([u(power_sweep)][u(fun_prod_cycle)][u(fun_check_material)])][if(strmatch(name(u(power_plant)),*Warehouse*),[u(fun_delete_batteries)])]})]
&USED_POWER Factory Parent=0
&USED_WORKERS Factory Parent=0
&VERSION Factory Parent=3.0
@set Factory Parent/VERSION=no_command
&WAREHOUSE Factory Parent=[v(none)]

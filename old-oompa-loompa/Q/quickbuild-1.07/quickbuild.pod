=head1 NAME

B<quickbuild> - MUSH offline building tool

=head1 SYNOPSIS

B<quickbuild> [options] < area.qb > area.msh

=head1 DESCRIPTION

B<quickbuild> is a perl script that lets you quickly lay out a MUSH area.
It accepts a file of quickbuilding instructions on stdin and
produces uploadable MUSH code on stdout.

=head2 Quickbuild File Format

An input file for B<quickbuild> can include the following:

=over 4

=item Comments

Lines beginning with # are considered comments and ignored.

=item Building commands

A line of the form:

  "Exit name" : "Source Room Name" -> "Destination Room Name"

will be translated into instructions to create the source and
desination rooms and open an exit from the source to the destination.

The following exit names are special: n, s, e, w, ne, nw, se, sw, u, d,
and out. If you use one of these names, it will automatically be expanded
into a complete set of exit aliases. For example, "n" will be expanded
to "<N>orth;nort;nor;no;n". "out" is expanded to "<O>ut;back;leave;exit;out;o".
(See also the --nobrackets option below).

The exit names n, s, e, w, ne, nw, se, sw, u, and d can also be used
to automatically open exits between rooms in both directions, like this:

  "n" : "Source Room Name" <-> "Destination Room Name"

This will open a north exit from source to destination and a south exit
back from destination to source.

See the CONFIGURATION FILE section for details on how to add/remove
exit aliases and reverse exits.

When rooms are built, their dbrefs are stored on the building player
using attributes with names like ROOM.<room_name> (spaces in room
names are converted to underscores).

=item Zones and Parents

You can set a default zone to be assigned to rooms with the line

  ROOM ZONE: <dbref of ZMO> or "Room Name"

B<quickbuild> will generate @chzone commands setting the zone of any rooms
defined after the ROOM ZONE: command. Note that a room is defined when it
is first used in the input. You may use additional ROOM ZONE: commands
to change the active room zone.

If you provide a room name instead of a dbref, the room will be
created by the script quickbuild generates. You can use the 
IN..ENDIN block to add code to this room (for example, to set it
floating).

Similarly, you can set default exit zones, room parents, and exit parents
with EXIT ZONE:, ROOM PARENT:, and EXIT PARENT: commands. Note that
if you're not providing dbrefs, you should be providing a room
name, even if you're setting exit zone/parent. That is, quickbuild
will generate a room as the exit parent (which doesn't hurt).

=item Flags

You can set default flags to be @set on rooms with the line

  ROOM FLAGS: <flag> <flag> <flag> ...

Simiarly, EXIT FLAGS: sets default exit flags.

=item Custom Code

You can add custom code that will be executed in a given room like this:

C<IN "Room Name">

C<...MUSH code in mpp format here...>

C<ENDIN>

You can add custom code that will be executed in a given room like this:

C<ON "Exit Name" FROM "Source Room Name">

C<...MUSH code in mpp format here...>

C<ENDON>

mpp format is the format defined by Josh Bell's mpp (MUSH preprocessor)
program. It  works like this:

1. Blank lines and lines starting with @@ are removed.

2. A non-whitespace, non-'>' character in the first
  column indicates the start of a new line of MUSHcode.

3. Leading whitespace on a line is otherwise stripped,
  and indicates the line is a continuation of the previous line

4. (not implemented by B<quickbuild>) Lines starting with '>' 
   (in the first column) are treated
  as continuations and are converted from plain ASCII to
  "MUSH-ready" ASCII, i.e. spaces -> %b, [ -> \[, etc. %r
  characters are prepended to any subsequent > lines.

5. In any other line, each tab is converted to a space.

=back
=head1 OPTIONS

=over 4

=item --help

Prints a usage summary

=item --nobrackets

By default, B<quickbuild> assumes that you like the <B>racket style
of exit naming, where the abbreviation in the brackets is the short
name for the exit. If you don't like this, use the --nobrackets
option, which strips bracketing out from exit names.

=item --config-file <filename>

Use <filename> as the configuration file instead of the default.

=item --no-config-file

Don't use any configuration file.

=back

=head1 CONFIGURATION FILE

By default, B<quickbuild> uses a configuration file to determine
aliases for exits (e.g., "n" for "<N>orth;north;nort;nor;no;n")
and reverse exits (e.g. "n" and "s"). It searches for this file
in the following order:

=over 4

=item 

Given on the command line with --config-file

=item 

.qbcfg or qb.cfg in the current directory

=item 

.qbcfg or qb.cfg in the user's home directory

=back

The configuration file consists of lines defining aliases and lines
defining reverse exits. Blank lines and lines beginning with "#"
are ignored.

=head2 Defining Aliases

The syntax for defining an exit alias is:

alias "<alias>" "<full exit name>"

For example:

alias "n" "<N>orth;north;nort;nor;no;n"

=head2 Defining Reverse Exits

The syntax for defining reverse exits is:

reverse "<alias or name>" "<alias or name>"

For example:

reverse "n" "s"

If you're defining reverse exits for aliased exits, always use the
alias, rather than the full exit name. You may list the two exits in 
the reverse statement in either order.

=head1 EXAMPLE

Here is an example that illustrates most of the features:

=over 4

=item Input

ROOM ZONE: #123

ROOM FLAGS: transparent

EXIT PARENT: #444

"n": "Town Square" <-> "City Gates"

"e": "Town Square" <-> "Main Street"

EXIT FLAGS: opaque

"<M>anhole;manhole;m;down;dow;do;d": "Main Street" -> "Sewer"

IN "Town Square"

@desc here=This is town square

ENDIN

ON "s" FROM "City Gat"

@lock s = ok/1

ENDON

=item Resulting Output

think Digging Rooms

@wait 0 = { @dig/tel Sewer; &ROOM.Sewer me = %l }

@wait 0 = { @dig/tel City Gates; &ROOM.City_Gates me = %l }

@wait 0 = { @dig/tel Main Street; &ROOM.Main_Street me = %l }

@wait 0 = { @dig/tel Town Square; &ROOM.Town_Square me = %l }

think Linking Rooms

@tel [v(ROOM.Sewer)]

@chzone here = #123

@set here = transparent

@tel [v(ROOM.City_Gates)]

@open South <S>;south;sout;sou;so;s = [v(ROOM.Town Square)]

@parent South <S> = #444

@lock s = ok/1

@chzone here = #123

@set here = transparent

@tel [v(ROOM.Main_Street)]

@open West <W>;west;wes;we;w = [v(ROOM.Town Square)]

@parent West <W> = #444

@open <M>anhole;manhole;m;down;dow;do;d = [v(ROOM.Sewer)]

@parent <M>anhole = #444

@set <M>anhole = opaque

@chzone here = #123

@set here = transparent

@tel [v(ROOM.Town_Square)]

@open East <E>;east;eas;ea;e = [v(ROOM.Main Street)]

@parent East <E> = #444

@open North <N>;north;nort;nor;no;n = [v(ROOM.City Gates)]

@parent North <N> = #444

@chzone here = #123

@set here = transparent

@desc here=This is town square

=back

In this silly example, an input of 324 characters resulted in an output of
1027 characters, so you saved considerable typing time.


=head1 RESTRICTIONS

Rooms must have unique names.

Exits originating from the same source room must have unique names.

=head1 AUTHOR

B<quickbuild> was written by Alan Schwartz <alansz@pennmush.org>
and comments, bug reports, and praise should be sent to him.

B<quickbuild> is copyrighted by Alan Schwartz and distributed under the 
GNU public license.  The latest version of pbemtools is available at:
	ftp://ftp.pennmush.org/pub/PennMUSH/Accessories

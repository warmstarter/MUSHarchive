=head1 NAME

gengen - A MUSH character generation system generator

=head1 SYNOPSIS

gengen < infile | quickbuild > outfile.msh

(and then upload outfile.msh to a MUSH. Note that those are the literal
shell metacharacters <, |, and >, and you actually type them.)

=head1 DESCRIPTION

gengen is a perl script that lets you quickly create a character generation
area for a MUSH by specifying the attributes of your characters and
how they should be generated in an easy-to-use format. It converts
this file into a quickbuild input file which can be converted
into uploadable MUSH code.

gengen expects to receive a chargen definition file on standard input.
A chargen definition file contains some (optional) initial
configuration information followed by a set of paragraphs defining
attributes to be generated by the system, as well as how they should be
generated, and associated help text.

Its output is a quickbuild(1) file that creates the chargen area,
a room parent, an exit parent, and a function object that provides
a basic "display character sheet" command.

=head2 Configuration Information

The optional configuration information is given as a set of
<name>=<value> pairs. Here are the known options:

=over 4

=item topology=[linear|spokes]

Determines the topology of the chargen rooms.

The linear settings (the default) produces a sequence of rooms that
players move through in order, performing required steps in each
room. After the last room, their character should be complete.

The spokes setting produces a hub room and a set of spoke rooms
all connected to the hub. The hub room can be used for initial
instructions, and each spoke room is an element of chargen that
can be completed in any order. A chargen-global exit is
used when the player decides they're done with chargen, and the
command checks that they've done all required elements before allowing
them to leave.

=item addition=[lmath|ladd|s|fold]

Sets the function used to sum up a list of numbers. 

Users of PennMUSH 1.7.3 will want 'lmath' which generates lmath(add,1 2 3).

Users of Tiny 3.0 will want 'ladd' which generates ladd(1 2 3).

Users of PennMUSH 1.7.2 or later can use 's', which generates 
s(add\([edit(1 2 3,%b,\,)]\))

Users of any server can use 'fold', which generates fold(add_nums,1 2 3)
and an add_nums function. This is the default.

=item command=<string>

Set the base $command that will be used in the chargen system.
Defaults to +char.

=item base=<string>

This wil be used as a prefix on all of
the attributes (e.g. base = STAT_).  Defaults to CHAR_

=item atrflags=<flags>

This will set the flags associated with your chargen attributes
by using @set obj/attr=<flags>. You may omit this if you
plan to set these flags with @attribute yourself. Defaults to
wizard mortal_dark

=back

=head2 Attribute Paragraphs

Attribute paragraphs are the heart of the gengen system.  Each creates
a stage of the character generation process (represented by a room in
MUSHcode).  The order of the paragraphs determines the order in which
players will go through the system.

The format for each attribute paragraph is:

<name of this chargen area> : <attribute list> : <method>
  Help text, on lines beginning with white space

The <name of chargen area> is used as the room name for this stage
of character generation. The help text is displayed when players
use the chargen help command. You may use only <name of chargen area>
(with nothing else on the line) to generate a room in the chargen
sequence with no attribute-setting code.

The <attribute list> is a list of attribute names for this stage of
the chargen system.

The <method> determins how the attributes in the list will be given
values.  Currently, these are the known methods:

=over 4

=item <null>

If you leave out the method (but include <name of area> : <attrib list> :)
you will generate a room that has no code for setting attributes,
but you will still register the attributes as part of the chargen system
(so they'll appear on the character sheet).

Example:

End of Character Generation : ONLINETIME :
  You're done with chargen!

=item string

Prompt for an arbitrary string for each attribute.

Example:

Your background : BG : string
  Your background should include all of the 
  important life events that your character has 
  experienced. Other players can't see this, so
  you can include secrets as well.

=item roll/[<times>] <dice spec>

Roll some dice for each attribute. 

A <dice spec> is a formula consisting of one or more <dice>. 

<dice> are specified as [-][{<number>best|<number>worst}]<number>[d<sides>]. 

For example, this <dice spec> rolls 4d6, takes the best 3, adds 1d20, and
subtracts 2:

3best4d6 1d20 -2

If a value is given for <times>, players are permitted to re-roll
up to <times> times for each attribute.

Example:

Basics : STR DEX CON INT WIS CHR : roll 3best4d6
  Your basic attributes include strength 
  (STR), dexterity (DEX), constitution (CON), 
  intelligence (INT), wisdom (WIS), and 
  charisma (CHR). Each is assigned by rolling 
  4 six-sided dice and adding up the three highest.

=item spend <point spec>

Prompts player to distribute some points on the attributes.

A <point spec> is of the form:

<total points> [start <lvl>] [max <max lvl/attrib>] [min <min lvl/attrib>] [poly<n>|exp<n>]

<total points> are the points available to be distributed to buy levels.

If start is given, that sets the initial level.  If max is given, the
attributes may be raised to no higher than that level. If min is given,
the attributes must be raised to at least that level (default 0).

Normally, it costs 1 point to raise an attribute by 1 level, but there
are also two non-linear spending models: 

If poly<n> is given, it costs j^n - k^n points to raise an attribute to
level j to a lower level k (that is, with poly2, from 0 to 1 costs 1,
from 1 to 2 costs 3, from 2 to 3 costs 5, from 3 to 4 costs 7, etc.

If exp<n> is given, it costs n^j - n^k to got from level j to k.  That
is, with exp3, from 0 to 1 costs 2, from 1 to 2 costs 6, from 2 to 3
costs 18, from 3 to 4 costs 54, etc.

Example:

Science : BIO CHEM PHYS GEO ASTRO : spend 25 max 5 poly2
  There are 5 fields of scientific knowledge: 
  biology (BIO), chemistry (CHEM), physics (PHYS), 
  geology (GEO), and astronomy (ASTRO).  Level 0 in 
  a knowledge means that you have no knowledge of
  the subject, while level 5 means that you are
  the world expert. To raise a field from 0 to a
  higher level n costs n-squared points.

=item choose option, option, option

Prompts player to choose one option from the listed set.

If multiple attributes are listed, each attribute's value must
be chosen from the set, and a different option must be chosen
for each attribute. (If that's not what you want, use different
paragraphs for each attribute)

Example:

Virtue/Flaw:VIRTUE FLAW:choose thought,action,belief
  Your virtue is an area at which you are 
  particularly gifted, and your flaw is an 
  area in which you are particularly weak. 
  You must have a different virtue and flaw. 

=back

=head1 SEE ALSO

quickbuild(1)

=head1 CAVEATS

No automatically generated chargen system is going to be as efficient
or perfect as a hand-tooled one. You might like to use a gengen'd system
as a starting point for further hacking. Or you might not care and
just want a quick-n-dirty. :)

Does gengen not do something that it ought to? Does it do something
it shouldn't? Send a bug report or feature request to the author
(below)!

=head1 AUTHOR

gengen was written by Alan Schwartz (alansz@pennmush.org), known in the
MUSH world mostly as Javelin. It is Copyright (c) 2000-2002 by Alan Schwartz,
and released under the GNU Public License.



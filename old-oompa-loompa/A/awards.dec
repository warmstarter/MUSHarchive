@@ Faraday's Vote System
@@ Coded by Linda Naughton O'Meara (http://www.wordsmyth.org)
@@
@@ DISCLAIMERS:
@@ - Permission is given to use and distribute this code, providing the 
@@   credits entry in the help file remains intact.
@@ - Although every effort has been made to test and debug this code, no warranty 
@@   is provided for its use.
@@   By using this code, you agree that the author is not responsible for any ill 
@@   effects on your MUSH.
@@ - I will support the code as far as I can, but I make no guarantees that I will 
@@   have time to do everything.  RL comes first.  Please report any bugs or 
@@   suggestions through http://www.wordsmyth.org
@@
@@ FEATURES:
@@ The MUSH awards system is used to reward outstanding achievement by players on the MUSH. 
@@ There are different types of awards for different things (roleplaying, staffing, etc.) 
@@ and different levels of awards. 
@@
@@ - Votes are tallied automatically, but require a comment field explaining why you feel
@@   the person deserves an award. This allows staff review of comments to prevent abuse of 
@@   the system. The player receiving the award gets the comments anonymously. 
@@ - Automatically notifies staff when a player is eligible for an award, through the Staff 
@@   Notice System (though the award still has to be given manually). 
@@ - Automatically @mails a person's vote comments to them when they get an award, and then 
@@   clears them. Any "extra" votes (i.e. if they only needed 10 votes for the next award 
@@   and had 12) are kept, not erased. 
@@ - When an award is given, posts a message to an awards bulletin board, if one exists. 
@@   This allows lasting recognition. 
@@ - Stores votes and awards on the player rather than on a central object. Nuked players' 
@@   votes disappear along with the players automatically, and FC votes can be reset with a 
@@   simple +vote/reset command. 
@@ - If the comments get too long for the attribute, they are sent to the player so none 
@@   are lost. 
@@ - Configuration options allow you to set up the types and levels of awards, 
@@   enable/disable the ability to see who's voted for you, and choose how multiple votes 
@@   from the same person will be counted. 
@@ - You can also configure special actions to be taken upon an award being given (like 
@@   handing out XP). 
@@
@@ CREDITS:
@@ This awards system was originally coded for B5MUSH, and was designed with input from 
@@ numerous players and staff members from that game.
@@
@@ REQUIREMENTS:
@@ This code is designed for PennMUSH only.  As long as PennMUSH stays backwards compatible,
@@ it will work on version 1.7.4 patchlevel 15 or higher.  You're welcome to try it on older
@@ versions of Penn, or on TinyMUX, but I make no guarantees that it will work.
@@
@@ See more requirements under SETUP NOTES below.
@@
@@ INSTALLATION:
@@ This install script will handle everything for you. Simply save it as a TEXT file and
@@ /quote it (or equivalent) to your MUSH as your Wizard character.
@@
@@ There is no need to create objects ahead of time.  You do not even have to edit this 
@@ file by hand unless your globals room is not #2 (in which case replace #2 with the 
@@ appropriate DB# throughout this file)
@@
@@ If you do not have /quote in your MUSH client, you can copy and paste, but beware of 
@@ linebreaks inserted when copying!!
@@
@@ SETUP:
@@ Once the system is installed, you will need to configure some options and set up a few 
@@ other things.
@@ 
@@ Configuration:
@@    +vote/confighelp gives a run-down of the options available and how to configure them.
@@    See the features list for an overview of what kinds of things can be configured.
@@
@@ Staff Notice:
@@    The awards system uses my Staff Notice System to notify staff when someone is eligible
@@    for an award or receives an award.  If you do not want to install this system, you'll
@@    need to replace instances of STAFF_NOTICE with the notification system you want to use
@@    (@mail is a functional alternative, though it doesn't have the features of the notice system).
@@
@@ Mail:
@@    The system sends an @mail to the player receiving an award.  If you want to use +mail
@@    or some other system, you'll need to replace instances of @mail in the code.
@@
@@ BBS:
@@    The system automatically attempts to post a message to the "Awards" bulletin board, using
@@    Myrddin's BBS system syntax.  If you don't have this board, nothing will happen.  If you 
@@    are using some other BBS system, you can edit instances of +bbpost to reflect your syntax.
@@
@@ Player Start:
@@    New players will need their award attributes setup correctly.  In your new player room, you'll
@@    need to call the FUN_SETUP_ATTRS function, passing in the DB# of the new player.
@@ 
@@ USAGE:
@@ See +vote/help for instructions.
@@
@@ UPDATES:
@@ A mailing list is available if you wish to be notified of bugfixes or other updates to this code.  
@@ Visit my webpage: http://www.wordsmyth.org/faraday to find out more.
@@
@@ --------------------------------------------------------------------------------

@set me=quiet

@pemit/silent %#=[ansi(hr,Beginning Awards System Installation.  Please wait until you see the 'Installation Complete' message...)]%R

@pemit/silent %#=[ansi(hr,Creating Objects...)]%R


@create Awards System
@set Awards System = WIZARD
@set Awards System = SAFE
&CMD-+VOTE-AWARD Awards System=$+vote/award *=*:@switch/first [setq(0,pmatch(%0))][setq(1,u(fun_next_award_level,%q0,trim(ucstr(%1))))]0=u(fun_isstaff,%#),think pemit(%#,ansi(hr,This command is restricted to staff members only!)),t(%q0),think pemit(%#,ansi(hr,That is not a valid player.)),match(v(dat_award_types),%1),think pemit(%#,ansi(hr,That is not a valid award type.)),u(fun_has_enough_votes,%q0,%1),think pemit(%#,ansi(hr,%0 does not have enough votes yet for a %q1 award!)),{think pemit(%#,ansi(hg,You award %0 a %q1 award!))[set(%q0,award_notified_[trim(%1)]:0)][u(fun_add_award,%q0,%q1)];think [staff_notice(Award - [name(%q0)],[name(%q0)] has been awarded a %q1 award.)];@mail [name(%q0)]=Award!/Congratulations [name(%q0)]!  You have just received a %q1 award!  Below are your vote comments:[u(fun_get_vote_comments,%q0,trim(ucstr(%1)))];@trigger me/TRG_GIVE_AWARD=%0,%q1;+bbpost awards/%q1 Award!/Congratulations to [name(%q0)] for [poss(%q0)] recent %q1 award!;think [set(%q0,votedetails-[trim(%1)]:[iter(lnum(sub(u(fun_num_votes,%q0,trim(%1)),u(fun_votes_for_level,sub(u(fun_next_award_num,%q0,trim(%1)),1)))),OldVote## - [time()] - Carried over|)])][set(%q0,votes-[trim(%1)]:[iter(lnum(sub(u(fun_num_votes,%q0,trim(%1)),u(fun_votes_for_level,sub(u(fun_next_award_num,%q0,trim(%1)),1)))),OldVote##%b)])]}
&CMD-+VOTE-CONFIG-COUNT Awards System=$+vote/config count=*:think switch(0,u(fun_isstaff,%#),pemit(%#,ansi(hr,Sorry - this command is restricted to staff.)),hasattr(me,fun_count_votes_[trim(%0)]),pemit(%#,ansi(hr,Sorry that is not a valid vote-counting method.  Choose one of these: [iter(lattr(me/fun_count_votes*),last(##,_))])),pemit(%#,ansi(hg,You set the vote counting method to "%0".))[set(me,dat_count_setting:[trim(%0)])])
&CMD-+VOTE-CONFIGHELP Awards System=$+vote/confighelp:think pemit(%#,[u(fun_top_line)]%RThere are several options that may be configured on the awards system via the +vote/config command.  This configuration may only be performed by staff.  The syntax for the award config command is:%R[center(+vote/config <option>=<setting>,78)]%RThe options are described here. %R%R[ansi(h,+vote/me)]%RThe first option is [ansi(hr,me)].  This controls whether players are allowed to use the +vote/me command.  Valid settings are "1" (to allow the command) and "0" (to disable the command).%R%RContinued in +vote/confighelp2%R[u(fun_bottom_line)]
&CMD-+VOTE-CONFIGHELP2 Awards System=$+vote/confighelp2:think pemit(%#,[u(fun_top_line)]%R[ansi(h,Vote Counting)]%RAnother config option is [ansi(hr,count)] which determines how multiple votes from the same person are tallied.  The various options are described below:%R%R- ALL - Every vote is counted, even multiple votes from the same person.%R- MAX1 - Only one vote is counted per person.%R- MAX3 - Each vote is counted, up to a maximum of 3 from a single person.%R- MAX5 - Each vote is counted, up to a maximum of 5 from a single person.%R- 1FOR2 - The first vote is always counted normally.  After that, only half the votes from the same person count.%R- 1FOR4 - The first vote is always counted normally.  After that, only a fourth of the votes from the same person count.%R%RContinued in +vote/confighelp3%R[u(fun_bottom_line)]
&CMD-+VOTE-CONFIGHELP3 Awards System=$+vote/confighelp3:think pemit(%#,[u(fun_top_line)]%RIn addition to these fixed options, there are a couple other things you may wish to edit by changing the attributes on the object itself.%R%R[ansi(h,DAT_AWARD_LEVELS)] - Edit this to change the names of the awards, or to add a new award level.  This must be kept in the same order as DAT_AWARD_COSTS.  To check your order and levels, use [ansi(h,+vote/awardinfo)].%R%R[ansi(h,DAT_AWARD_TYPES)] - Edit this to add a new type of award.  If you do this, you [ansi(hr,must re-run +vote/setup)] to properly initialize all the attributes.To check your order and levels, use [ansi(h,+vote/awardinfo)].%R%R[ansi(h,DAT_AWARD_COSTS)] - Edit this to change the number of votes required for each award level, or to add a new level.  This must be kept in the same order as DAT_AWARD_LEVELS. To check your order and levels, use [ansi(h,+vote/awardinfo)].%R%R[ansi(h,FUN_TOP_LINE)] - This is the top line displayed on various award commands.  You may edit this so it is in keeping with your MUSH's style of lines.%R%R[ansi(h,FUN_BOTTOM_LINE)] - This is the bottom line displayed on various award commands.  You may edit this so it is in keeping with your MUSH's style of lines.  However, I ask that you please keep the '+vote/help' tag in there somewhere.%R%R[ansi(h,TRG_GIVE_AWARD)] - If you want to do something extra when an award is given (like giving out XP) you can put the actions into this attribute.  It will be called via an @trigger, with the following parameters: \%0 = Player DB#, \%1 = Award level and type (i.e. BRONZE-RPER)%R%R[ansi(h,FUN_ISSTAFF)] - Edit this attribute attribute if you need to modify the way the system determines who's on the staff.  By default, it looks for the Wiz, Roy, or Judge flags.%R[u(fun_bottom_line)]
&CMD-+VOTE-CONFIG-ME Awards System=$+vote/config me=*:think switch(0,u(fun_isstaff,%#),pemit(%#,ansi(hr,Sorry - this command is restricted to staff.)),match(1 0,%0),pemit(%#,ansi(hr,Please use 1 or 0 for the option.  1 enables the command, 0 disables it.)),pemit(%#,ansi(hg,You [switch(%0,1,enable,0,disable)] the +vote/me command.))[set(me,dat_allow_me:%0)])
&CMD-+VOTE-SETUP Awards System=$+vote/setup:@dolist lsearch(all,type,player)=think [u(fun_setup_attrs,##)];@pemit %#=Award setup complete.
&CMD-+VOTE Awards System=$+vote *=*/*:think [setq(0,pmatch(%0))]switch(1,match(%#,%q0),pemit(%#,ansi(hr,You may not vote for yourself  silly.)),not(%q0),pemit(%#,ansi(hr,That is not a player.)),match(%2,*|*),pemit(%#,ansi(hr,Please do not use the | character in your vote comments.)),and(match(lcstr(%1),staff),not(orflags(%q0,WrJ))),pemit(%#,ansi(hr,[capstr(%0)] cannot receive a staff award because [subj(%q0)] is not on the staff.)),not(match(v(dat_award_types),ucstr(%1))),pemit(%#,ansi(hr,That is not a valid award type.  Use one of these: [v(dat_award_types)].)),pemit(%#,ansi(hc,You vote for %0 for a [u(fun_next_award_level,%q0,trim(ucstr(%1)))] award.))[u(fun_add_vote,%q0,trim(ucstr(%1)),%#,%2)]);@tr me/trg_check_award=%q0,trim(ucstr(%1))
&CMD-+VOTE-AWARDINFO Awards System=$+vote/awardinfo:think pemit(%#,[u(fun_top_line)]%R[ansi(hr,Award Information)]%R%R[ansi(r,Award Types)][iter(v(dat_award_types),%R##)]%R%R[ansi(r,Award Levels and Votes Required)][iter(v(dat_award_levels),%R##%T[extract(v(dat_award_costs),#@,1)])]%R[u(fun_bottom_line)])
&CMD-+VOTE-HELP Awards System=$+vote/help:think pemit(%#,[u(fun_top_line)]%R[u(help_+vote)]%R[switch(u(fun_isstaff,%#),1,%RUse [ansi(h,+vote/staffhelp)] to see staff-only commands.%R)]%R--Awards System v[v(version)] coded by [ansi(hr,Faraday)] (http://www.wordsmyth.org)--%R[u(fun_bottom_line)])
&CMD-+VOTE-LIST Awards System=$+vote/list *:think [setq(0,pmatch(%0))]switch(0,t(%q0),pemit(%#,ansi(hr,There is no such player.)),pemit(%#,[u(fun_top_line)]%R[ansi(hr,Your vote comments for [name(%q0)]:)][iter(lattr(%q0/votedetails-*),%R%R[ansi(r,after(##,-))][u(fun_get_list_comments,%N,%q0,##)])]%R[u(fun_bottom_line)]))
&CMD-+VOTE-LIST-ALL Awards System=$+vote/list:think pemit(%#,[u(fun_top_line)]%R[ansi(hr,Your have voted for the following people:)]%R[iter(lsearch(all,type,player),[switch(words(grepi(##,votes-*,%N)),>0,%R[name(##)])],,)]%R%RUse [ansi(h,+vote/list <player>)] to see your comments.%R[u(fun_bottom_line)]))
&CMD-+VOTE-ME Awards System=$+vote/me:think switch(0,v(dat_allow_me),pemit(%#,ansi(hr,Sorry but the staff has disabled this command.)),pemit(%#,[u(fun_top_line)]%R[ansi(hm,Vote Comments You Have Received:)][iter(lattr(%#/votedetails-*),%R%R[ansi(r,after(##,-))][u(fun_get_vote_comments,%#,after(##,-))])]%R[u(fun_bottom_line)]))
&CMD-+VOTE-RESET Awards System=$+vote/reset *:think [setq(0,pmatch(%0))]switch(0,u(fun_isstaff,%#),pemit(%#,ansi(hr,This command is restricted to staff only.)),t(%q0),pemit(%#,ansi(hr,That is not a valid player.)),pemit(%#,ansi(hg,You reset %0's votes.))[u(fun_setup_attrs,%q0)])
&CMD-+VOTE-SHOW Awards System=$+vote/show *=*:think [setq(0,pmatch(%0))]switch(0,u(fun_isstaff,%#),pemit(%#,ansi(hr,This command is restricted to staff only.)),t(%q0),pemit(%#,ansi(hr,That is not a valid player.)),match(v(dat_award_types),%1),pemit(%#,ansi(hr,That is not a valid award type.)),pemit(%#,[u(fun_top_line)]%R[ansi(hg,Votes for [name(%q0)] for [u(fun_next_award_level,%q0,trim(ucstr(%1)))]:)][iter(rest(revwords(xget(%q0,votedetails-[trim(ucstr(%1))]),|),|),%r-+- ##,|)]%R%R[ansi(h,[u(fun_num_votes,%q0,trim(%1))] votes counted -- [u(fun_votes_for_level,u(fun_next_award_num,%q0,trim(%1)))] needed for next level)]%R[u(fun_bottom_line)]))
&CMD-+VOTE-STAFFHELP Awards System=$+vote/staffhelp:think pemit(%#,[u(fun_top_line)]%R[u(help_awards_staff)]%R[u(fun_bottom_line)])
&DAT_ALLOW_ME Awards System=1
&DAT_AWARD_COSTS Awards System=5 10 15 20 25 30 35 40 45 50 55 60
&DAT_AWARD_LEVELS Awards System=BRONZE SILVER GOLD PLATINUM QUARTZ SAPPHIRE EMERALD TOPAZ RUBY OBSIDIAN COBALT DIAMOND
&DAT_AWARD_TYPES Awards System=RPER STORYTELLER STAFF
&DAT_AWARD_XP Awards System=1
&DAT_COUNT_SETTING Awards System=all
@DESCRIBE Awards System=The MUSH awards system is used to reward outstanding achievement by players on the MUSH. There are different types of awards for different things (roleplaying, staffing, etc.) and different levels of awards. The main help file is +vote/help.%R%RLots of things can be configured.   See +vote/confighelp for configuration information.  Also see the install file "Setup Notes" section for important setup information.%R%R-- Awards System coded by [ansi(hr,Faraday)] (http://www.wordsmyth.org) --
@set Awards System/DESCRIBE=no_command visual
&FUN_ADD_AWARD Awards System=[set(%0,awards:[switch(match(xget(%0,awards),*-[after(%1,-)]),0,[xget(%0,awards)] %1,replace(xget(%0,awards),match(xget(%0,awards),*-[after(%1,-)]),%1))])][set(%q0/awards,wiz)]
&FUN_ADD_VOTE Awards System=[set(%0,votes-%1:[xget(%0,votes-%1)][name(%2)]%b)][set(%0,votedetails-%1:[xget(%0,votedetails-%1)][name(%2)] - [time()] - %3|)]
&FUN_BOTTOM_LINE Awards System=ansi(h,[repeat(=,33)] +vote/help [repeat(=,33)])
&FUN_CONVERT_NUM_TO_NAME Awards System=[iter(%0,switch(isplayer(##),1,name(##),NonPlayerOldVote#@))]%B
&FUN_COUNT_VOTES_1FOR3 Awards System=[trim([setq(9,0)][iter(sort(setunion(%0,%b)),[setq(9,add(%q9,add(1,div(words(graball(%0,##)),3))))])]%q9)]
&FUN_COUNT_VOTES_1FOR5 Awards System=[trim([setq(9,0)][iter(sort(setunion(%0,%b)),[setq(9,add(%q9,add(1,div(words(graball(%0,##)),5))))])]%q9)]
&FUN_COUNT_VOTES_ALL Awards System=words(%0)
&FUN_COUNT_VOTES_MAX1 Awards System=[trim([setq(9,0)][iter(sort(setunion(%0,%b)),[setq(9,add(%q9,switch(words(graball(%0,##)),>1,1,words(graball(%0,##)))))])]%q9)]
&FUN_COUNT_VOTES_MAX3 Awards System=[trim([setq(9,0)][iter(sort(setunion(%0,%b)),[setq(9,add(%q9,switch(words(graball(%0,##)),>3,3,words(graball(%0,##)))))])]%q9)]
&FUN_COUNT_VOTES_MAX5 Awards System=[trim([setq(9,0)][iter(sort(setunion(%0,%b)),[setq(9,add(%q9,switch(words(graball(%0,##)),>5,5,words(graball(%0,##)))))])]%q9)]
&FUN_GET_LIST_COMMENTS Awards System=iter(edit(xget(%1,%2),\(,\\\(),switch(match(trim(before({##},-)]),%0*),0,,%r-+- [after({##},-)]),|)
&FUN_GET_VOTE_COMMENTS Awards System=iter(rest(revwords([edit(xget(%0,votedetails-%1),\(,\\\()],|)),%R%R-+- [after([after({##},-)],-)],|)
&FUN_HAS_ENOUGH_VOTES Awards System=gte(u(fun_num_votes,%0,%1),u(fun_votes_for_level,u(fun_next_award_num,%0,%1)))
&FUN_ISSTAFF Awards System=orflags(%#,WrJ)
&FUN_NEXT_AWARD_LEVEL Awards System=[extract(v(dat_award_levels),u(fun_next_award_num,%0,%1),1)]-%1
&FUN_NEXT_AWARD_NUM Awards System=switch(0,match(xget(%0,awards),*-%1),1,[add(1,match(v(dat_award_levels),before(extract(xget(%0,awards),match(xget(%0,awards),*-%1),1),-)))])
&FUN_NUM_VOTES Awards System=u(FUN_COUNT_VOTES_[v(dat_count_setting)],xget(%0,votes-%1))
&FUN_SETUP_ATTRS Awards System=[iter(v(dat_award_types),[switch(hasattr(%0,votes-##),0,[set(%0,award_notified_##:0)][set(%0,votes-##:)][set(%0,votedetails-##:)])][set(%0/award_notified_##,mortal_dark)][set(%0/votes-##,mortal_dark)][set(%0/votedetails-##,mortal_dark)][atrlock(%0/award_notified_##,on)][atrlock(%0/votes-##,on)][atrlock(%0/votedetails-##,on)])][switch(hasattr(%0,awards),0,[set(%0,awards:)])][set(%0/awards,mortal_dark)][atrlock(%0/awards,on)]
&FUN_TOP_LINE Awards System=ansi(h,[repeat(=,30)] Awards System v[u(version)] [repeat(=,28)])
&FUN_VOTES_FOR_LEVEL Awards System=extract(v(dat_award_costs),%0,1)
&HELP_AWARDS_STAFF Awards System=The Awards system will automatically notify you when a player is eligible for an award.  Someone must then review the votes that player has received (to make sure everything is in order) and then manually give the award.  Staff award commands include:%R%R[ansi(h,+vote/show <player>=<award type>)] - Reviews a player's votes.%R%R[ansi(h,+vote/award <player>=<award type>)] - Awards the player the next level in a given award type.  Any extra votes will be carried over, not lost.  The player will receive an @mail notifying them of the award.  If an awards bulletin board exists, a message will be posted to it.%R%R[ansi(h,+vote/reset <player>)] - Resets a player's votes, for whatever reason.%R%R[ansi(h,+vote/confighelp)] - Shows configuration help info%R[ansi(h,+vote/config <config option>=<setting>)] - Configures an option on the system%R[ansi(h,+vote/setup)] - Sets up the necessary attributes.  This is run automatically at install time, and must be run manually any time you add a new award type.
&HELP_+VOTE Awards System=The MUSH awards system is used to reward outstanding achievement by players on the MUSH.  There are different types of awards for different things (roleplaying, staffing, etc.) and different levels of awards.%R%RVotes will be tallied automatically, and the staff notified when a person has enough votes to receive an award.  The staff must then approve the award.  The staff can see who cast each vote, but the player receiving the award sees the vote comments with the names removed.  NOTE: Multiple votes from the same person may or may not count, depending on how the staff has configured the system.%R%R[ansi(h,Usage:)]%R%R[ansi(h,+vote <player>=<award type>/<reason you're voting>)] - Cast a vote for a player.%R%R[ansi(h,+vote/list)] - Shows who all you've voted for.%R[ansi(h,+vote/list <player>)] - Show what votes and comments you've given for a player.%R%R[ansi(h,+vote/me)] - Show the comments that others have made when voting for you, minus their names.  Note that this is not always an accurate gauge of how close you are to an award since some votes may be from the same person and may not all count.%R%R[ansi(h,+vote/awardinfo)] - Shows the valid types of awards, the levels, and how many votes are required for each level.
@QUEUE Awards System=
@set Awards System/QUEUE=no_inherit no_clone wizard mortal_dark
@STARTUP Awards System=@set me=!no_command
@set Awards System/STARTUP=no_command
&TRG_CHECK_AWARD Awards System=@switch t(%0)=0,,{@switch gt(strlen(xget(%0,votedetails-%1)),5000)=1,{@mail [name(%0)]=Vote Comments Overflow/Your +vote comments for the [u(fun_next_award_level,%0,%1)] award have reached the limit.  We're sending them to you now to make room for more!  Note that all the old votes will still count towards your next award - only the comments are being reset.%R%R[u(fun_get_vote_comments,%0,%1)];think set(%0,votedetails-%1:[time()] - Auto - Comments cleared due to overflow.|)};@switch [and(u(fun_has_enough_votes,%0,%1),not(xget(%0,award_notified_[trim(%1)])))]=1,{[staff_notice(Award Eligible - [name(%0)],[name(%0)] now has enough votes for a [u(fun_next_award_level,%0,%1)] award!)];think set(%0,award_notified_[trim(%1)]:1)}}
&TRG_GIVE_AWARD Awards System=
&VERSION Awards System=1.0

@pemit/silent %#=[ansi(hr,Setting up attributes...)]%R

@trigger Awards System/startup

@wait 2=@fo me=+vote/setup

@wait 5=@pemit/silent %#=[ansi(hr,Moving objects to their appropriate places...)]%R

@wait 6=@tel Awards System=#2

@wait 9=@pemit/silent %#=%R%R[ansi(hr,Installation Complete!!  Please read the important setup information in the install text file you just uploaded to configure the system.)]%R

@wait 10=@set me=!quiet



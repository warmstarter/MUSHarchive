@create $communicator
@link $communicator=#25
@chzone $communicator=#57
@lock $communicator=#25
@lock/Zone $communicator=#25
@lock/Enter $communicator=#25
@set $communicator=VISUAL
@set $communicator=SAFE
@set $communicator=HALT
@set $communicator=!NO_COMMAND
&KEY $communicator=[v(active)]
&TAP $communicator=$tap *:@swi [match(ucstr(name(me)),ucstr(secure(%0))*)][v(active)]=10,{@pem %#=Your [name(me)] is now active.;&active me=1;&status me=[v(active)][v(pinging)]},11,{@pem %#=Your [name(me)] is now inactive.;&active me=0;&status me=[v(active)][v(pinging)]},1?,{@oemit loc(%#)/%#=%n taps %p [name(me)].}
&PARENT $communicator=#9171
&HELP_MSG $communicator=Usage is as follows:%r%rtou*ch/tog*ggle Compin%R[space(8)]This toggles your Compin on and off.%rope*n fre*quency <frequency (0.01 to 999.99)>=<title>%r[space(8)]This opens frequency <frequency> with title <title>.%rclo*se fre*quency <frequency>%r[space(8)]This closes frequency <frequency>.%ralter ide*ntity <frequency> <identity>%r[space(8)]This will change your identity to a specific frequency only.%rcle*ar ide*ntity <frequency>%r[space(8)]This will clear and restore to default the identity to the desired%r[space(8)]frequency.%renc*ode fre*quency <frequency> <string>%r[space(8)]Set the encryption string to the desired frequency%r[space(8)](Note: Please do not encrypt channel that are public and/or%r[space(16)]that don't really need to be encoded.)%rcle*ar enc*ryption <frequency>%r[space(8)]This will clear the encryption scheme used on a channel.%rsca*n fre*quency <frequency>%r[space(8)]This shows anyone in range and pinging on <frequency>.%rbro*adcast ide*ntity <identity>%r[space(8)]This changes your default broadcast ID to <identity>.%rlis*t fre*quencies%r[space(8)]This will list all frequencies that you have open.%rlis*t Enc*ryption%r[space(8)]This will list all encryption scheme for the currently openchannel.%rpin*g mod*e%r[space(8)]This toggles pinging, or a homing beacon. You show on frequencyscans.%r+frequency <message>%r[space(8)]This allows you to speak or pose <message> on <frequency>.%Rtit*le <frequency> <title>%r[space(8)]This changes the title of <frequency> to <title>.%r%rThis Compin has a range of 1000 parsecs.
&RANGE $communicator=1000
&OPEN $communicator=$ope* fre* *=*:@swi [setq(0,fabs(round(secure(%2),2)))][true(v(active))][lt(words(v(frequencies)),10)][and(gt(%q0,0),lt(%q0,1000))][not(match(v(frequencies),%q0))][true(match(lattr(v(space)),%q0))]=10???,{@pem %#=You may only have 10 frequencies open at once.},110??,{@pem %#=%q0 is not valid a valid frequency. Use frequencies 0.01 to 999.99.},1110?,{@pem %#=Frequency %q0 is already open.},11110,{&%q0 v(space)=%!},11111,{&%q0 v(space)=setunion(iter(get(v(space)/%q0),switch(comp(parent(##),v(parent)),0,##)),%!)},1111?,{&frequencies me=squish(cat(v(frequencies),%q0));&titles me=trim([v(titles)]|[secure(%3)],|);@pem %#=You have opened frequency %q0 %[[secure(%3)]%].},1????,{@oemit loc(%#)/%#=%n tunes %p [name(me)].}
&CLOSE $communicator=$clo* fre* *:@swi [setq(0,switch(isnum(secure(%2)),0,element(v(titles),secure(%2)*,|),1,match(v(frequencies),secure(%2)*)))][v(active)][true(%q0)]=10,{@pem %#=No frequency open with title "[secure(%2)]".},11,{@pem %#=You have closed frequency [extract(v(frequencies),%q0,1)] %[[index(v(titles),|,%q0,1)]%].;&extract(v(frequencies),%q0,1) v(space)=remove(xget(v(space),extract(v(frequencies),%q0,1)),%!);&titles me=ldelete(v(titles),%q0,|);&frequencies me=ldelete(v(frequencies),%q0);&fre_%2 me=},1?,{@oemit loc(%#)/%#=%n tunes %p [name(me)].}
&SEND $communicator=$+* *:@swi [setq(0,switch(isnum(secure(%0)),0,element(v(titles),secure(%0)*,|),1,match(v(frequencies),secure(%0)*)))][setq(1,extract(v(frequencies),%q0,1))][setq(2,v(freq_%q1))][setq(3,switch(true(%q2),1,[extract(%q2,2,1,|)],#-1))][setq(4,switch(true(%q2),1,[extract(%q2,1,1,|)],[v(identity)]))][setq(4,switch(strlen(%q4),0,[v(identity)],%q4))][setq(5,switch(match(:,mid(%1,0,1)),1,%q4 [mid(%1,1,strlen(%1))],%q4 says "%1"))][setq(6,switch(gt(strlen(%q3),0),1,encrypt(%q5,%q3),%q5))][setq(7,v(space))][setq(8,[v(range)])][v(active)][true(%q0)][true(%q3)]=10?,{@pem %#=No frequency open with title "[secure(%0)]".},110,{@dolist [iter(xget(%q7,%q1),ifelse(and(xget(##,active)),ifelse(lte(parsecs(%#,##),v(range)),##,),))]=@pemit loc(##)=<%q1> %[[index(get(##/titles),|,match(get(##/frequencies),%q1),1)]%] %q5},111,{@dolist [iter(xget(%q7,%q1),ifelse(xget(##,active),ifelse(lte(parsecs(%#,##),v(range)),##,),))]=@pem loc(##)=<%q1> %[[index(get(##/titles),|,match(get(##/frequencies),%q1),1)]%] [setq(9,xget(##,freq_%q1))][ifelse(true(%q9),[ifelse([setq(9,extract(%q9,2,1,|))][true(%q9)],[ifelse(not(comp(%q9,%q3)),%q5,decrypt(%q6,%q9))],%q6)],%q6)]},11?,{@oemit loc(%#)/%#=%n speaks into %p [name(me)].}
&ID $communicator=$bro* ide* *:@swi v(active)=1,{&identity me=%2;@pem %#=Your broadcast identity is now "%2".;@oemit loc(%#)/%#=%n adjusts %p [name(me)].}
&ACTIVE $communicator=0
&LIST $communicator=$lis* fre*:@swi [v(active)]=1,{@pem %#=%r[center(Frequencies open on your [name(me)],78)]%r[ansi(b,repeat(-,78))]%r[ljust(Frequency,10)][ljust(Channel Name,20)][ljust(Identity,40)]%r[ansi(b,repeat(-,78))][iter(v(frequencies),%r[ljust(##,10)][ljust(%[[index(v(titles),|,match(v(frequencies),##),1)]%],20)]%[[setq(7,[switch([true(v(freq_##))],1,[extract(v(freq_##),1,1,|)],[v(identity)])])][ifelse(true(%q7),%q7,[v(identity)])]%])]%r[ansi(b,repeat(-,78))]%rDefault Channel title: [v(identity)];@oemit loc(%#)/%#=%n checks %p [name(me)].}
&SCAN $communicator=$sca* fre* *:@swi [setq(0,switch(isnum(secure(%2)),0,element(v(titles),secure(%2)*,|),1,match(v(frequencies),secure(%2)*)))][v(active)][true(%q0)]=10,{@pem %#=No frequency open with title "[secure(%2)]".},11,{@pem %#=%r[center(Reading on frequency [extract(v(frequencies),%q0,1)] %[[index(v(titles),|,%q0,1)]%],78)]%r[ansi(b,repeat(-,78))][squish(iter(xget(v(space),extract(v(frequencies),%q0,1)),ifelse(eq(xget(##,status),11),[setq(9,parsecs(%!,##))]ifelse(lte(%q9,v(range)),%r[setq(8,xget(##,freq_%q0))][switch(true(%q8),1,[extract(%q8,1,|)],[xget(##,identity)])] at [%q9] parsecs,),)))]%r[ansi(b,repeat(-,78))]
@DESCRIBE $communicator=This is a standard [name(org(%!))] [name(me)].[ifthen(not(comp(loc(%!),%#)),%r%bIt is currently switched [ifelse(v(active),on,off)].%r%bIt [ifelse(v(pinging),is,is not)] pinging.%r%bBroadcast identity is "[v(identity)]".%r%bPrefix code is "[v(code)]".%r%bTransmit range is [v(range)] parsecs.%rSee: `$help [name(me)]')]
&PINGING $communicator=0
&TOGGLE $communicator=$tog* *:@swi [match(ucstr(name(me)),ucstr(secure(%1))*)][v(active)]=10,{@pem %#=Your [name(me)] is now active.;&active me=1;&status me=[v(active)][v(pinging)]},11,{@pem %#=Your [name(me)] is now inactive.;&active me=0;&status me=[v(active)][v(pinging)]},1?,{@oemit loc(%#)/%#=%n toggles %p [name(me)].}
&SPACE $communicator=#102
&IDENTITY $communicator=(Unidentified)
&TOUCH $communicator=$tou* *:@swi [match(ucstr(name(me)),ucstr(secure(%1))*)][v(active)]=10,{@pem %#=Your [name(me)] is now active.;&active me=1;&status me=[v(active)][v(pinging)]},11,{@pem %#=Your [name(me)] is now inactive.;&active me=0;&status me=[v(active)][v(pinging)]},1?,{@oemit loc(%#)/%#=%n touches %p [name(me)].}
&TITLE $communicator=$tit* * *:@swi [setq(0,switch(isnum(secure(%1)),0,element(v(titles),secure(%1)*,|),1,match(v(frequencies),secure(%1)*)))][v(active)][true(%q0)]=10,{@pem %#=No frequency open with title "[secure(%1)]".},11,{&titles me=replace(v(titles),%q0,secure(%2),|);@pem %#=Frequency [extract(v(frequencies),%q0,1)] is now %[[index(v(titles),|,%q0,1)]%].},1?,{@oemit loc(%#)/%#=%n adjusts %p [name(me)].}
&CODE $communicator=0
&PREFIXCODE $communicator=$pre* cod* *:@swi [v(active)][isnum(%2)]=10,{@pem "%2" is not a valid number.},11,{&code %!=abs(%2);@pem %#=Your [name(%!)] prefix code is now "%2".;@oemit loc(%#)/%#=%n adjusts %p [name(%!)].}
&ID_CLEAR $communicator=$CLE* ide* *:@swi [setq(0,switch(isnum(secure(%2)),0,element(v(titles),secure(%2)*,|),1,match(v(frequencies),secure(%2)*)))][setq(1,extract(v(frequencies),%q0,1))][v(active)][true(%q0)]=10,{@pem %#=No frequency open with title "[secure(%2)]".},11,{&freq_%q1 me=[ifelse(true(v(freq_%q1)),|[extract(v(freq_%q1),2,1,|)],|)];@pem %#=You have cleared you alternate identity for frequency %q1},1?,{@oemit loc(%#)/%#=%n tunes %p [name(me)].}
&ID_FREQ $communicator=$alter* ide* * *:@swi [setq(0,switch(isnum(secure(%2)),0,element(v(titles),secure(%2)*,|),1,match(v(frequencies),secure(%2)*)))][setq(1,extract(v(frequencies),%q0,1))][v(active)][true(%q0)]=10,{@pem %#=No frequency open with title "[secure(%2)]".},11,{&freq_%q1 me=[ifelse(true(v(freq_%q1)),%3|[extract(v(freq_%q1),2,1,|)],%3|)];@pem %#=You have set your identity for frequency %q1},1?,{@oemit loc(%#)/%#=%n tunes %p [name(me)].}
&CLEAR_ENC $communicator=$CLE* ENC* *:@swi [setq(0,switch(isnum(secure(%2)),0,element(v(titles),secure(%2)*,|),1,match(v(frequencies),secure(%2)*)))][setq(1,extract(v(frequencies),%q0,1))][v(active)][true(%q0)]=10,{@pem %#=No frequency open with title "[secure(%2)]".},11,{&freq_%q1 me=[ifelse(true(v(freq_%q1)),[extract(v(freq_%q1),1,1,|)]|,|)];@pem %#=You have cleared the encryption string for frequency %q1},1?,{@oemit loc(%#)/%#=%n tunes %p [name(me)].}
&STATUS $communicator=00
&SET_ENC $communicator=$ENC* FRE* * *:@swi [setq(0,switch(isnum(secure(%2)),0,element(v(titles),secure(%2)*,|),1,match(v(frequencies),secure(%2)*)))][setq(1,extract(v(frequencies),%q0,1))][v(active)][true(%q0)]=10,{@pem %#=No frequency open with title "[secure(%2)]".},11,{&freq_%q1 me=[ifelse(true(v(freq_%q1)),[extract(v(freq_%q1),1,1,|)]|%3,|%3)];@pem %#=You have set the encryption string for frequency %q1},1?,{@oemit loc(%#)/%#=%n tunes %p [name(me)].}
&LIST_ENC $communicator=$lis* Enc*:@swi [v(active)]=1,{@pem %#=%r[center(Encryptions Schemes on your [name(me)],78)]%r[ansi(b,repeat(-,78))]%r[ljust(Frequency,10)][ljust(Channel Name,20)][ljust(Encryption String,40)]%r[ansi(b,repeat(-,78))][iter(v(frequencies),%r[ljust(##,10)][ljust(%[[index(v(titles),|,match(v(frequencies),##),1)]%],20)][switch([true(v(freq_##))],1,[extract(v(freq_##),2,1,|)],)])]%r[ansi(b,repeat(-,78))]%r;@oemit loc(%#)/%#=%n checks %p [name(me)].}
&PING2 $communicator=$pin* mod*:@swi [v(active)][v(pinging)]=10,{@pem %#=Your [name(me)] is now on pinging mode.;&pinging me=1;&status me=[v(active)][v(pinging)]},11,{@pem %#=Your [name(me)] is no longer on pinging mode.;&pinging me=0;&status me=[v(active)][v(pinging)]},1?,{@oemit loc(%#)/%#=%n adjusts %p [name(me)].}

@set me=quiet
@pemit me=Com: Main installation initiated...
@pemit me=Com: Designing Objects...
@create FunctionDB
@create ComSystem
@create HelpDB
@create OptionDB
@create ChannelDB
@create AliasDB
@create OrigonalDB
@create AlternateDB
@create MonitorDB
@set functiondb=!halt
@set comsystem=!halt
@set helpdb=!halt
@set optiondb=!halt
@set channeldb=!halt
@set aliasdb=!halt
@set origonaldb=!halt
@set alternatedb=!halt
@set monitordb=!halt
@set functiondb=inherit
@set comsystem=inherit
@set helpdb=inherit
@set optiondb=halt
@set channeldb=halt
@set aliasdb=halt
@set origonaldb=halt
@set alternatedb=halt
@set monitordb=inherit
@set functiondb=safe
@set comsystem=safe
@set helpdb=safe
@set optiondb=safe
@set channeldb=safe
@set aliasdb=safe
@set origonaldb=safe
@set alternatedb=safe
@set monitordb=safe
@prefix monitordb=\[*MONITOR*\]
@set monitordb=audible
@link functiondb=comsystem
@link helpdb=comsystem
@link optiondb=comsystem
@link channeldb=comsystem
@link aliasdb=comsystem
@link origonaldb=comsystem
@link alternatedb=comsystem
@link monitordb=comsystem
@pemit me=Com: Object designation complete... Function Initialization... please wait...
&WPURGEF FunctionDB=[u(wizard,%0)][match(player,type(*%1))]
&WPURGEM00 FunctionDB=[u(ERRORDEF)]
&WPURGEM01 FunctionDB=[u(ERRORDEF)]
&WPURGEM10 FunctionDB=WIZCom: ERROR - '[secure(v(0))]' not a valid player
&WPURGEM11 FunctionDB=WIZCom: All channels purged of player '[name(*%0)]'.
&WPURGEDO11 FunctionDB=[lattr([v(CH-DB)])]
&WPURGEDO00 FunctionDB=[v(9)]
&WPURGEDO01 FunctionDB=[v(9)]
&WPURGEDO10 FunctionDB=[v(9)]
&DODEFAULT1 FunctionDB=[v(0)]
&WUSRLOCKF FunctionDB=[u(wizard,%0)][match(player,type(*%1))][match(STATUS,v(2))]
&ERRORDEF FunctionDB=Huh? %b\(Type "help" for help.\)
&ERRORSETF FunctionDB=[u(wizard,%0)][or(match(RESET,%1),eq(words(%1),0))]
&ERRORSETM00 FunctionDB=[u(ERRORDEF)]
&ERRORSETM01 FunctionDB=[u(ERRORDEF)]
&ERRORSETM10 FunctionDB=WIZCom: Error message Set to '[edit(v(0),$,)]'.
&WUSRLOCKM000 FunctionDB=u(ERRORDEF)]
&WUSRLOCKM010 FunctionDB=u(ERRORDEF)]
&WUSRLOCKM001 FunctionDB=u(ERRORDEF)]
&WUSRLOCKM011 FunctionDB=u(ERRORDEF)]
&WUSRLOCKM100 FunctionDB=WIZCom: ERROR - '[secure(v(0))]' not a player.
&WUSRLOCKM110 FunctionDB=WIZCom: [u(WUSRFLAG[match(+ -,v(1))],%0,%1)]
&WUSRLOCKM101 FunctionDB=WIZCom: Status report of currently locked people:%r[v(lines)]%r[iter(v(wusrlist),[name(##)]\(##[flags(##)]\))]%r[v(lines)]
&WUSRLOCKM111 FunctionDB=WIZCom: Status report of currently locked people:%r[v(lines)]%r[iter(v(wusrlist),[name(##)]\(##[flags(##)]\))]%r[v(lines)]%r*NOTE* A player exists by the name 'STATUS'. If you wish to add/remove%r[space(7)]this user, use his dbrief# '[num(*%0)]'.
&ERRORSETM11 FunctionDB=WIZCom: Error message reset to default of 'Huh? %%b\\\(Type "help" for help.\\\)'.
&WUSRLOCK110 FunctionDB=[v(F-DB)]
&WUSRFLAG0 FunctionDB=ERROR - Invalid switch '[v(1)]' specified.
&WUSRFLAG1 FunctionDB='[name(*%0)]' locked from using the ComSystem.
&WUSRFLAG2 FunctionDB='[name(*%0)]' allowed to use the ComSystem.
&WUSRLOCK0 FunctionDB=[v(wusrlist)]
&WUSRLOCK1 FunctionDB=[setunion(v(wusrlist),num(*%0))]
&WCLOAKF FunctionDB=[u(wizard,%0)][match(/STATUS,%1)][gt(words(get([v(CH-DB)]/[v(1)])),0)]
&WCLOAKM100 FunctionDB=WIZCom: ERROR - '[secure(v(1))]' not a valid channel.
&WCLOAKM101 FunctionDB=WIZCom: You have just [switch(gt(match(get([v(O-DB)]/C-[s(v(1))]),v(0)),0),0,CLOAKED,DE-CLOAKED)] on channel '[capstr(lcstr(v(1)))][switch(match(get([v(CH-DB)]/[v(1)]),*L*),0,',+')].
&WCLOAKM000 FunctionDB=[u(ERRORDEF)]
&WCLOAKM010 FunctionDB=[u(ERRORDEF)]
&WCLOAKM001 FunctionDB=[u(ERRORDEF)]
&WCLOAKM011 FunctionDB=[u(ERRORDEF)]
&WCLOAKM110 FunctionDB=WIZCom: Listing all channels currently cloaked:%r[v(lines)]%r[s(edit(iter(lattr([v(O-DB)]),switch(match(##,C-*),1,##)),C-,))]%r[v(lines)]
&WCLOAKM111 FunctionDB=WIZCom: *WARNING* Channel name exists with '/STATUS'. Destroy it.%r[u(WCLOAKM110,%0,%1)]
&WUSRLOCK2 FunctionDB=[setdiff(v(wusrlist),num(*%0))]
&WCLOAKS101 FunctionDB=[v(O-DB)]
&WCLOAKDO0 FunctionDB=[setunion(get([v(O-DB)]/C-[s(v(0))]),v(1))]
&WCLOAKDO1 FunctionDB=[setdiff(get([v(O-DB)]/C-[s(v(0))]),v(1))]
&SETWIZM0 FunctionDB=[u(ERRORDEF)]
&SETWIZM1 FunctionDB=WIZCom: Wizards are now recognized by string '[v(wizard)]'.
&SETWIZFUNC FunctionDB=[or(u(wizard,%0),match(owner(me),%0))]
&SETWIZ1 FunctionDB=[v(F-DB)]
&CPFUNC FunctionDB=[gt(match(get([v(CH-DB)]/[extract(v(1),1,1)]),L),0)][gt(match(get([v(CH-DB)]/[extract(v(1),1,1)]),v(0)),0)]
&CLFUNC FunctionDB=[and(match(before(get([v(CH-DB)]/[v(0)]),L),v(1)),match(get([v(CH-DB)]/[v(0)]),L))][gt(words(setdiff(iter(v(2),num(*##)),#-1 [v(3)])),0)]
&CLFUNC2 FunctionDB=[switch(gt(words(setdiff(iter(v(1),num(*##)),#-1 [v(3)])),1),1,the following:%b,user%b)][setdiff(iter(v(1),num(*##)),#-1 [v(3)])]
&CULFUNC FunctionDB=[gt(words(setinter(iter(v(1),num(*##)),v(3))),0)][and(match(before(get([v(CH-DB)]/[v(0)]),L),v(2)),match(get([v(CH-DB)]/[v(0)]),L))]
&CULFUNC2 FunctionDB=[switch(gt(words(setinter(iter(v(0),num(*##)),v(3))),1),1,the following:%b,user%b)][setinter(iter(v(0),num(*##)),v(3))]
&COLFUNC FunctionDB=[gt(words(setdiff(setinter(iter(v(1),num(*##)),v(3)),get([v(O-DB)]/C-[v(0)]))),0)][and(match(before(get([v(CH-DB)]/[v(0)]),L),v(2)),match(get([v(CH-DB)]/[v(0)]),L))]
&COLFUNC2 FunctionDB=[switch(gt(words(setdiff(setinter(iter(v(1),num(*##)),v(3)),get([v(O-DB)]/C-[v(0)]))),1),1,list:%b)][setdiff(setinter(iter(v(1),num(*##)),v(3)),get([v(O-DB)]/C-[v(0)]))]
&COFUNC FunctionDB=[and(match(before(get([v(CH-DB)]/[v(0)]),L),v(1)),match(get([v(CH-DB)]/[v(0)]),L))][gt(words(setdiff(iter(v(2),num(*##)),#-1 [v(3)] [get([v(O-DB)]/C-[v(0)])])),0)]
&COFUNC2 FunctionDB=[switch(gt(words(setdiff(iter(v(1),num(*##)),#-1 [v(3)] [get([v(O-DB)]/C-[v(0)])])),1),1,list:%b)][setdiff(iter(v(1),num(*##)),#-1 [v(3)] [get([v(O-DB)]/C-[v(0)])])]
&CHOWNFUNC FunctionDB=[u(wizard,%0)][gt(match(get([v(CH-DB)]/[first(v(1))]),L),0)][gt(words(setdiff(iter(v(2),num(*##)),#-1)),0)]
&MAKEFUNC FunctionDB=[u(wizard,%0)][gt(match(get([v(CH-DB)]/[first(v(1))]),L),0)][gt(words(get([v(CH-DB)]/[first(v(1))])),0)]
&AUTHOR FunctionDB=Ashen-Shugar%rFor information about the author, he can be reached at the following addresses: %rphoenix@delphi.glendon.yorku.ca%rphoenix@mdbs.com
&LISTUSER FunctionDB=[iter(after(get([v(CH-DB)]/[v(0)]),L),switch(match(PLAYER,type(##)),1,name(##)))]
&LISTOWNER FunctionDB=[iter(setdiff(before(get([v(CH-DB)]/[v(0)]),L),get([v(O-DB)]/C-[v(0)])),switch(match(PLAYER,type(##)),1,name(##)))]
&LISTOWNER2 FunctionDB=[iter(before(get([v(CH-DB)]/[v(0)]),L),switch(match(PLAYER,type(##)),1,name(##)))]
&NOTAUSER FunctionDB=[u(NOTAUSER1,[iter(setdiff(get([v(CH-DB)]/[v(0)]),L),switch(match(PLAYER,type(##)),0,[name(##)]\(##\)))])]
&COPYRIGHT FunctionDB=(c) Ashen-Shugar, all rights reserved. This code was done with a lot of hard work be a single individual and input from several others. The author retains all rights to this code and any piece of code contained herein. This code may be copied freely, but may not be altered without concent of the origonal author. Any who use this code are asked to notify the author so that he may keep in touch with you for future upgrades and/or modifications.
&COMFUNC FunctionDB=[gt(match(get([v(CH-DB)]/[extract(before(v(0),=),1,1)]),v(1)),0)][gt(match(who,extract(after(v(0),=),1,2)),0)]
&COMFORMAT FunctionDB=\[[capstr(lcstr(extract(before(v(0),=),1,1)))][switch(gt(member(get([v(CH-DB)]/[extract(before(v(0),=),1,1)]),L),0),1,+)]\]
&LINES FunctionDB=------------------------------------------------------------------------------
&WORDIT FunctionDB=[iter(v(0),switch(pos(#,##),#-1,##,[name(##)]))]
&DELFUNC FunctionDB=[gt(words(get([v(CH-DB)]/[first(v(0))])),0)][gt(match(get([v(CH-DB)]/[first(v(0))]),L),0)][gt(match(before(get([v(CH-DB)]/[first(v(0))]),L),v(1)),0)]
&WDELFUNC FunctionDB=[gt(words(get([v(CH-DB)]/[first(v(0))])),0)][u(wizard,%1)][match(/QUIET,%2)]
&WREMOVE1 FunctionDB=[setinter(lwho(),get([v(CH-DB)]/[v(0)]))]
&WREMOVE0 FunctionDB=[v(9)]
&SREMOVE111 FunctionDB=[v(0)]
&SREMOVE110 FunctionDB=[v(0)]
&ERRREMOVE000 FunctionDB=[u(ERRORDEF)]
&ERRREMOVE010 FunctionDB=WIZCom: ERROR - Unrecognized channel '[capstr(first(v(1)))]'
&ERRREMOVE001 FunctionDB=[u(ERRORDEF)]
&ERRREMOVE100 FunctionDB=[u(ERRORDEF)]
&ERRREMOVE110 FunctionDB=WIZCom: Channel '[capstr(first(v(1)))]' is toast.
&ERRREMOVE011 FunctionDB=WIZCom: ERROR - Unrecognized channel '[capstr(first(v(1)))]'
&ERRREMOVE101 FunctionDB=[u(ERRORDEF)]
&ERRREMOVE111 FunctionDB=WIZCom: Channel '[capstr(first(v(1)))]' is STEALTH-toast
&MONADDF FunctionDB=[gt(match(get([v(M-DB)]/forwardlist),%0),0)][u(wizard,%0)]
&MONSETM00 FunctionDB=[u(ERRORDEF)]
&MONSETM10 FunctionDB=[u(ERRORDEF)]
&MONSETM01 FunctionDB=WIZCom: You have been added to the built-in monitoring channel.
&MONSETM11 FunctionDB=WIZCom: You have been removed from the built-in monitoring channel.
&COMCK1 FunctionDB=[setdiff(setinter(lwho(),get([v(CH-DB)]/[extract(before(v(0),=),1,1)])),get([v(O-DB)]/[extract(before(v(0),=),1,1)]))]
&COMCK0 FunctionDB=[v(9)]
&COMCKM FunctionDB=[member(v(COM-L),mid(extract(after(v(0),=),1,1),0,1))]
&COM-L FunctionDB=; : " ~ ! ' ^ _
&COM-SPK0 FunctionDB=[switch(match(v(COM-L),get([v(1)]/CDEF)),0,u(COM-SPK00,%0,%1,%2),u(COM-SPK[match(v(COM-L),get([v(1)]/CDEF))],[edit(%0,=,=[extract(v(COM-L),match(v(COM-L),get([v(1)]/CDEF)),1)])],%1,%2))]
&COM-SPK00 FunctionDB=[u(comformat,%0)] [name(%1)]: [after(v(0),=)]
&COM-ANS0 FunctionDB=[v(9)]
&COM-ANS1 FunctionDB=Com: The following are on channel: '[capstr(lcstr(before(v(0),=)))]'%r[v(lines)][u(COM-WHO[u(wizard,%1)],%0,%1)]%r[v(lines)]%rListing of channel '[capstr(lcstr(before(v(0),=)))]' concluded
&COM-WHO0 FunctionDB=[iter(u(comckz,%0),switch(and(or(hasflag(##,dark),match(get([v(O-DB)]/C-[before(v(0),=)]),##)),u(wizard,##)),0,%r[name(##)][space(sub(40,strlen(name(##))))][switch(gt(match(get([v(O-DB)]/[extract(before(v(0),=),1,1)]),##),0), 1,QUIET)]))]
&COM-WHO1 FunctionDB=[iter(u(comckz,%0),%r[name(##)]\(##[flags(##)]\)[space(sub(40,strlen([name(##)]##[flags(##)])))][U(OPT[gt(match(get([v(O-DB)]/U##),NOSPOOF),0)][gt(match(get([v(O-DB)]/[extract(before(v(0),=),1,1)]),##),0)])])]
&COM-SPK1 FunctionDB=[u(comformat,%0)] [name(%1)][after(after(v(0),=),;)]
&COM-SPK2 FunctionDB=[u(comformat,%0)] [name(%1)] [after(after(v(0),=),:)]
&COM-SPK3 FunctionDB=[u(comformat,%0)] [name(%1)] says "[after(after(v(0),=),")]"
&COM-SPK4 FunctionDB=[u(comformat,%0)] [switch(gt(match(get([v(O-DB)]/U[v(2)]),NOSPOOF),0),1,<[name(%1)]>%b)][after(after(v(0),=),~)]
&CONF-L FunctionDB=NOSPOOF LASTCHAN
&CONFMSG0 FunctionDB=Com: ERROR - Configure option '[secure(v(0))]' unrecognized.
&CONFMSG1 FunctionDB=Com: Configure option '[secure(v(0))]' [switch(match(v(1),on),1,-> Set,-> Unset)]
&CONFSET1 FunctionDB=[u(COM-S[match(on,v(1))],%0,%1,%2)]
&COM-S1 FunctionDB=[setunion(get([v(O-DB)]/U[v(2)]),ucstr(v(0)))]
&COM-S0 FunctionDB=[setdiff(get([v(O-DB)]/U[v(2)]),ucstr(v(0)))]
&COM-SPK5 FunctionDB=[u(comformat,%0)] [name(%1)] <[u(DOTITLE[gt(words(get(%1/ctitle)),0)],%1)]> [after(after(v(0),=),!)]
&DOTITLE0 FunctionDB=The Untitled
&DOTITLE1 FunctionDB=[mid(secure(get(%0/ctitle)),0,25)]
&COM-SPK6 FunctionDB=[u(DOALIAS[gt(match(get([v(O-DB)]/U[v(2)]),NOSPOOF),0)],%0,%1)]
&DOALIAS0 FunctionDB=[u(comformat,%0)] [switch(words(get(%1/calias)),0,Anonymous:,[mid(get(%1/calias),0,25)]:)] [after(after(v(0),=),')]
&DOALIAS1 FunctionDB=[u(comformat,%0)] <[name(%1)]> [switch(words(get(%1/calias)),0,Anonymous:,[mid(secure(get(%1/calias)),0,25)]:)] [after(after(v(0),=),')]
&COM-SPK7 FunctionDB=[u(DOOMIT[gt(match([iter(before(after(v(0),^),^),num(*##))],v(2)),0)],%0,%1,%2)]
&DOOMIT0 FunctionDB=[u(comformat,%0)] [name(%1)]: [after(after(v(0),^),^)]
&DOOMIT1 FunctionDB=[switch(u(wizard,%2),1,[u(comformat,%0)] [name(%1)]: <OMIT - EXCLUDED> [after(after(v(0),^),^)])]
&COM-SPK8 FunctionDB=[u(DOPRIV[gt(match([iter(before(after(v(0),_),_),num(*##))],v(2)),0)],%0,%1,%2)]
&DOPRIV1 FunctionDB=[u(comforat,%0)] [name(%1)]: [after(after(v(0),_),_)]
&DOPRIV0 FunctionDB=[switch(u(wizard,%2),1,[u(comformat,%0)] [name(%1)]: <OMIT - PRIVATE> [after(after(v(0),_),_)])]
&COM-ANS2 FunctionDB=Com: ERROR - You are not on channel '[capstr(lcstr(before(v(0),=)))]'
&COM-ANS3 FunctionDB=Com: ERROR - You are not on channel '[capstr(lcstr(before(v(0),=)))]'
&COM-ANS4 FunctionDB=[switch(gt(match(get([v(O-DB)]/[before(v(0),=)]),%1),0),1,Com: You are set 'QUIET' on channel '[capstr(lcstr(before(v(0),=)))]'. Use '+QUIET [ucstr(before(v(0),=))]' to reactivate.)]
&QFUNC FunctionDB=[u(QSET[gt(match(get([v(A-DB)]/A[v(1)]),first(v(0))),0)],%0,%1)]
&QSET0 FunctionDB=[u(QSETA[gt(words(get([v(A-DB)]/D[v(1)])),0)],%0,%1)]
&QSET1 FunctionDB=[extract(get([v(A-DB)]/C[v(1)]),match(get([v(A-DB)]/A[v(1)]),first(v(0))),1)]
&QSETA0 FunctionDB=PUBLIC
&QSETA1 FunctionDB=[get([v(A-DB)]/D[v(1)])]
&QFUNC2 FunctionDB=[u(QANS[gt(match(get([v(A-DB)]/A[v(1)]),first(v(0))),0)],%0,%1)]
&QANS0 FunctionDB=[v(0)]
&QANS1 FunctionDB=[rest(v(0))]
&QUIET00 FunctionDB=Com: ERROR - You are not on channel '[capstr(lcstr(secure(first(v(0)))))]'
&QUIET01 FunctionDB=Com: ERROR - Channel '[capstr(lcstr(secure(first(v(0)))))]' is not a locked channel.
&QUIET10 FunctionDB=Com: Channel '[capstr(lcstr(secure(first(v(0)))))]' is now quieted.
&QUIET11 FunctionDB=Com: Channel '[capstr(lcstr(secure(first(v(0)))))]' is now active.
&QUIETF FunctionDB=[gt(match(get([v(CH-DB)]/[v(0)]),L),0)][gt(match(get([v(O-DB)]/[v(0)]),v(1)),0)]
&QUIETS10 FunctionDB=[secure(first(v(0)))]
&QUIETS11 FunctionDB=[secure(first(v(0)))]
&QUIETSET11 FunctionDB=[setdiff(get([v(O-DB)]/[v(0)]),v(1))]
&QUIETSET10 FunctionDB=[setunion(get([v(O-DB)]/[v(0)]),v(1))]
&COMCKZ FunctionDB=[setinter(lwho(),get([v(CH-DB)]/[extract(before(v(0),=),1,1)]))]
&OPT00 FunctionDB=%b
&OPT01 FunctionDB=[space(8)]QUIET
&OPT10 FunctionDB=NOSPOOF
&OPT11 FunctionDB=NOSPOOF/QUIET
&MINUSCH01 FunctionDB=[v(CH-DB)]
&PLUSCH00 FunctionDB=[v(CH-DB)]
&WOWNERF FunctionDB=[gt(match(get([v(CH-DB)]/[first(v(1))]),L),0)][match(/QUIET,v(0))][u(wizard,%2)][gt(words(setdiff(iter(v(3),num(*##)),#-1 [v(4)])),0)]
&WOWNER0 FunctionDB=[u(ERRORDEF)]
&WOWNER1 FunctionDB=WIZCom: ERROR - Channel '[secure(v(0))]' not a locked channel.
&WOWNER2 FunctionDB=WIZCom: ERROR - Channel '[secure(v(0))]' not a locked channel.
&WOWNER3 FunctionDB=WIZCom: ERROR - Validation shows empty user list.
&WOWNER4 FunctionDB=WIZCom: ERROR - Channel '[secure(v(0))]' not a locked channel.
&WOWNER5 FunctionDB=WIZCom: ERROR - Validation shows empty user list.
&WOWNER6 FunctionDB=WIZCom: ERROR - Channel '[secure(v(0))]' not a locked channel.
&WOWNER7 FunctionDB=[v(9)]
&WOWNER8 FunctionDB=WIZCom: QUIETMODE - Following owner(s) added to channel '[capstr(lcstr(v(0)))]': [setdiff(u(wordit,[u(cofunc2,%0,%1,%2,%3)]),list:)]
&WOWNERDO0 FunctionDB=[v(9)]
&WOWNERDO1 FunctionDB=[setinter(lwho(),setunion(iter(v(0),num(*##)),[get([v(CH- DB)]/[v(2)])] [v(1)]))]
&WOWNERS1111 FunctionDB=[v(CH-DB)]
&WOWNERS1011 FunctionDB=[v(CH-DB)]
&WUSERF FunctionDB=[gt(match(get([v(CH-DB)]/[first(v(1))]),L),0)][match(/QUIET,v(0))][u(wizard,%2)][gt(words(setdiff(iter(v(3),num(*##)),#-1 [v(4)])),0)]
&WUSERM0 FunctionDB=[u(ERRORDEF)]
&WUSERM1 FunctionDB=WIZCom: ERROR - Channel '[secure(v(0))]' not a locked channel.
&WUSERM2 FunctionDB=WIZCom: ERROR - Channel '[secure(v(0))]' not a locked channel.
&WUSERM3 FunctionDB=WIZCom: ERROR - Validation shows empty user list.
&WUSERM4 FunctionDB=WIZCom: ERROR - Channel '[secure(v(0))]' not a locked channel.
&WUSERM5 FunctionDB=WIZCom: ERROR - Validation shows empty user list.
&WUSERM6 FunctionDB=WIZCom: ERROR - Channel '[secure(v(0))]' not a locked channel.
&WUSERM7 FunctionDB=[v(9)]
&WUSERM8 FunctionDB=WIZCom: QUIETMODE - Following user(s) added to channel '[capstr(lcstr(v(0)))]': [setdiff(rest(u(wordit,u(clfunc2,%0,%1,%2,%3))),following:)]
&WUSERDO1 FunctionDB=[setinter(lwho(),setunion(iter(v(0),num(*##)),[get([v(CH-DB)]/[v(2)])] [v(1)]))]
&WUSERDO0 FunctionDB=[v(9)]
&WUSERS1111 FunctionDB=[v(0)]
&WUSERS1011 FunctionDB=[v(0)]
&WUNUSERF FunctionDB=[gt(match(get([v(CH-DB)]/[first(v(1))]),L),0)][match(/QUIET,v(0))][u(wizard,%2)][gt(words(setinter([v(4)],iter(v(3),num(*##)))),0)]
&WUNUSERM0 FunctionDB=[u(ERRORDEF)]
&WUNUSERM1 FunctionDB=WIZCom: ERROR - Channel '[secure(v(1))]' not a locked channel.
&WUNUSERM2 FunctionDB=WIZCom: ERROR - Channel '[secure(v(1))]' not a locked channel.
&WUNUSERM3 FunctionDB=WIZCom: ERROR - Validation shows empty user list.
&WUNUSERM4 FunctionDB=WIZCom: ERROR - Channel '[secure(v(1))]' not a locked channel.
&WUNUSERM5 FunctionDB=WIZCom: ERROR - Validation shows empty user list.
&WUNUSERM6 FunctionDB=WIZCom: ERROR - Channel '[secure(v(1))]' not a locked channel.
&WUNUSERDO0 FunctionDB=[v(9)]
&WUNUSERDO1 FunctionDB=[setinter(lwho(),[get([v(CH-DB)]/[v(0)])] [v(2)])]
&WUNUSERS1111 FunctionDB=[v(0)]
&WUNUSERS1011 FunctionDB=[v(0)]
&WREMF FunctionDB=[u(wizard,%2)][gt(words(setinter(get([v(CH-DB)]/[v(0)]),v(1))),0)]
&WREMM00 FunctionDB=[u(ERRORDEF)]
&WREMM01 FunctionDB=[u(ERRORDEF)]
&WREMM10 FunctionDB=WIZCom: ERROR - Validation shows empty user list.
&WREMM11 FunctionDB=WIZCom: The following user(s) were removed from '[capstr(lcstr(v(0)))]': [iter(setinter(%1,get([v(CH-DB)]/[v(0)])),name(##))]
&WREMS11 FunctionDB=[v(CH-DB)]
&WREMDO1 FunctionDB=[setdiff(before(get([v(CH-DB)]/[v(0)]),L),%1)] L [setdiff(after(get([v(CH-DB)]/[v(0)]),L),%1)]
&WREMDO0 FunctionDB=[setdiff(get([v(CH-DB)]/[v(0)]),%1)]
&LISTPUB0 FunctionDB=[iter(lattr([v(CH-DB)]),switch(match(get([v(CH-DB)]/##),L),0,%r[extract(##,1,1)][space(sub(20,strlen(##)))] - Public Access \([words(get([v(CH-DB)]/##))] Total Players\)))]
&WIPEF FunctionDB=[u(wizard,%1)][and(match(before(get([v(CH-DB)]/[v(0)]),L),%1),match(get([v(CH-DB)]/[v(0)]),L))][gt(words(get([v(CH-DB)]/[first(v(0))])),0)]
&WIPEM001 FunctionDB=Com: ERROR - You have no authority over channel '[capstr(lcstr(first(secure(v(0)))))]'
&WIPEM000 FunctionDB=Com: ERROR - Channel '[capstr(lcstr(first(secure(v(0)))))]' non-existant.
&WIPEM100 FunctionDB=Com: ERROR - Channel '[capstr(lcstr(first(secure(v(0)))))]' non-existant.
&WIPEM010 FunctionDB=Com: ERROR - Channel '[capstr(lcstr(first(secure(v(0)))))]' non-existant.
&WIPEM110 FunctionDB=Com: ERROR - Channel '[capstr(lcstr(first(secure(v(0)))))]' non-existant.
&WIPEM101 FunctionDB=Com: Wiping all non-identifiable players from channel '[capstr(lcstr(first(v(0))))]'.
&WIPEM111 FunctionDB=Com: Wiping all non-identifiable players from channel '[capstr(lcstr(first(v(0))))]'.
&WIPEM011 FunctionDB=Com: Wiping all non-identifiable players from channel '[capstr(lcstr(first(v(0))))]'.
&WIPES1 FunctionDB=[v(CH-DB)]
&WIPEDO0 FunctionDB=[setdiff(iter(get([v(CH-DB)]/[v(0)]),num(*[name(##)])),#-1)]
&WIPEDO1 FunctionDB=[setdiff(iter(before(get([v(CH-DB)]/[v(0)]),L),num(*[name(##)])),#-1)] L [setdiff(iter(after(get([v(CH-DB)]/[v(0)]),L),num(*[name(##)])),#-1)]
&WJOINF FunctionDB=[u(wizard,%1)][gt(match(get([v(CH-DB)]/[v(0)]),L),0)]
&WJOINM11 FunctionDB=WIZCom: STEALTH [switch(gt(match(get([v(CH-DB)]/[v(0)]),v(#)),0),0,joined,left)] locked channel '[capstr(lcstr(secure(first(v(0)))))]+'.
&WJOINM00 FunctionDB=[u(ERRORDEF)]
&WJOINM01 FunctionDB=[u(ERRORDEF)]
&WJOINM10 FunctionDB=WIZCom: ERROR - '[capstr(lcstr(secure(first(v(0)))))]' not a locked channel. Use '+chan' to join.
&WUNOWNERDO1 FunctionDB=[setinter(lwho(),[get([v(CH-DB)]/[v(0)])] [v(2)])]
&WUNOWNERS1111 FunctionDB=[v(CH-DB)]
&WUNOWNERS1011 FunctionDB=[v(CH-DB)]
&WUNOWNERF FunctionDB=[gt(match(get([v(CH-DB)]/[first(v(1))]),L),0)][match(/QUIET,v(0))][u(wizard,%2)][gt(words(setdiff(v(3),#-1 [v(4)])),0)]
&WLISTF FunctionDB=[u(wizard,%1)][gt(words(get([v(CH-DB)]/[v(0)])),0)]
&WLISTM00 FunctionDB=[u(ERRORDEF)]
&WLISTM01 FunctionDB=[u(ERRORDEF)]
&WLISTM10 FunctionDB=WIZCom: ERROR - Non-existant channel '[capstr(lcstr(first(secure(v(0)))))]'
&WLISTM11 FunctionDB=WIZCom: Listing specifics on channel '[capstr(lcstr(v(0)))]'%r[u(WLISTM[gt(match(get([v(CH-DB)]/[v(0)]),L),0)],%0,%1)]%rWIZCom: Listing completed.
&WLISTM1 FunctionDB=Owners: [iter(before(v(1),L),[name(##)]\(##\))]%rUsers : [iter(after(v(1),L),[name(##)]\(##\))]%rInvalid Users: [iter(setdiff(get([v(CH-DB)]/[v(0)]),[v(1)] L),[name(##)]\(##\))]
&WLISTM0 FunctionDB=Users: [iter(v(1),[name(##)]\(##\))]%rInvalid Users: [iter(setdiff(get([v(CH-DB)]/[v(0)]),[v(1)] L),[name(##)]\(##\))]
&LISTPUB1 FunctionDB=[iter(lattr([v(CH-DB)]),switch(match(get([v(CH-DB)]/##),L),0,%r[extract(##,1,1)][space(sub(20,strlen(##)))] - Public Access \([words(get([v(CH-DB)]/##))] Total Players\) [u(badlistusr,##)]))]
&CHANOPTS FunctionDB=+CHAN +USER +OWNER +WUSER +WOWNER +CHOWN +WLOCK +WUNLOCK +LISTCHAN +WLIST +CREATE +DESTROY +WDESTROY +MONUNCON +MONCON +MONSET +COM = +QUIET +DEFAULT +LISTPUB +LISTPRIV +SETWIZARD +WREMOVE +WIPE +WADDLOCK +CHANJOIN +WCHANJOIN +ALIAS +CONFIG +COMINDEX +COMSTATUS +CONFIG +ADDLOCK +WINSTSETQ +WUNINSTSETQ +WUSRLOCK +WCLOAK +WERRORSET +WPURGE 
&USROPTS FunctionDB=+CHAN +USER +OWNER +LISTCHAN +CREATE +DESTROY +COM = +QUIET +DEFAULT +LISTPUB +WIPE +CHANJOIN +ALIAS +CONFIG +COMINDEX +HELP +COMSTATUS +ADDLOCK
&WIZOPTS FunctionDB=+WUSER +WOWNER +CHOWN +WLOCK +WUNLOCK +WLIST +LISTCHAN +WDESTROY +MONUNCON +MONCON +MONSET +LISTPRIV +SETWIZARD +WREMOVE +WCHANJOIN +WADDLOCK +WIPE +WENABLE +WDISABLE +WINSTSETQ +WUNINSTSETQ +WCLOAK +WERRORSET +WUSRLOCK +WPURGE
&ABLEF FunctionDB=[u(wizard,%1)][gt(match(v(chanopts),v(0)),0)]
&WDISABLEM00 FunctionDB=[u(ERRORDEF)]
&WDISABLEM01 FunctionDB=[u(ERRORDEF)]
&WDISABLEM10 FunctionDB=WIZCom: ERROR - Unavailable option '[secure(first(ucstr(v(0))))]'.
&WDISABLEM11 FunctionDB=WIZCom: Option '[ucstr(v(0))]' disabled from use.
&WENABLEM00 FunctionDB=[u(ERRORDEF)]
&WENABLEM01 FunctionDB=[u(ERRORDEF)]
&WENABLEM10 FunctionDB=WIZCom: ERROR - Unavailable option '[secure(first(ucstr(v(0))))]'
&WENABLEM11 FunctionDB=WIZCom: Option '[ucstr(v(0))]' enabled to use.
&WDISABLEDO11 FunctionDB=[v(D-[v(0)])]
&WABLES11 FunctionDB=[v(F-DB)]
&COMSTATUSF FunctionDB=Total Locked Channels Currently in Use: %0%rTotal Public Channels Currently in Use: [sub(words(lattr(v(CH-DB))),v(0))]
&VERSION FunctionDB=Version 5.27
&COMTITLE FunctionDB=Com System [v(version)][space(5)](c) Ashen-Shugar, All rights reserved.
&THANKS FunctionDB=This com system was done with the hard work of one individual with enormous %rinput by several others.%r%rSpecial thanks to:%rTrey@Etc...Etc... - who helped debug and spellcheck my work 8b%rBlackthorne@Etc..Etc...- Who gave ideas and opinions for many upgrades.%rSeth@Etc..Etc... - Who kicked my butt when I was lazy and who helped debug.%rMorpheus@Rhostshyl - Who sat over many a margarita on future upgrades.%rZeus@Cajun - Who offered valuable ideas and opinions.%rRatCatcher@Etc..Etc.. - Who convinced me that gee, I can use switch() at%r[space(10)]times w/o reductions.%rTheseus@Etc..Etc.. - Who gave inspiration and opinions with the new help%r[space(10)]orginization.%rMordred@Etc...Etc... - Who helped give faster functioning algorithms.%rRath@Etc...Etc... - Who helped my RL workload by joining the company and%r[space(10)]helped with options.%rEnkil@Etc...Etc... - Who allowed me to beta test on his machine.%rdaemon@Discordia - who allowed a site for debugging.%r%rAnd special thanks to my pony I never had... else I'd not be a programmer%rtoday. 8b. Thanks go out to all those who also helped that are not %rmentioned. To name you all would take up more than can be sufficiently%rdisplayed. Can we say spam? :)
&COPYRIGHT2 FunctionDB=[v(lines)]%rCopyright: Ashen-Shugar (c), All rights reserved%rCom System Revised Edition [v(version)]%r%r[Space(8)]This code was done with hours of extensive work and debugging. It is%rfreely given out, but any copying of code either partial or total is not %rallowed. If any major modifications are done, it is asked to mail the author %rso future upgrades/options could be added. I like to be kept up on things. %rLikewise, anyone who uses this code is asked to mail the author so that %rupgrades and/or fixes can be sent.%r%rAny questions or additions required should be forwarded to:%r[Center(phoenix@delphi.glendon.yorku.ca // ash@rhostshyl.cit.cornell.edu,78)]%r[v(lines)]
&D-+WPURGE FunctionDB=WPURGE
&D-+WCLOAK FunctionDB=WCLOAK
&D-+WUSRLOCK FunctionDB=WUSRLOCK
&D-+COMINDEX FunctionDB=COMINDEX
&D-+COMSTATUS FunctionDB=COMSTATUS
&D-+CHAN FunctionDB=CHAN UNCHAN
&D-+CONFIG FunctionDB=CONFIG
&D-+USER FunctionDB=USER UNUSER
&D-+OWNER FunctionDB=OWNER UNOWNER
&D-+WUSER FunctionDB=WUSER WUNUSER
&D-+WOWNER FunctionDB=WOWNER WUNOWNER
&D-+CHOWN FunctionDB=CHOWN
&D-+WLOCK FunctionDB=WLOCK
&D-+WUNLOCK FunctionDB=WUNLOCK
&D-+LISTCHAN FunctionDB=LISTCHAN
&D-+WLIST FunctionDB=WLIST
&D-+CREATE FunctionDB=CREATE
&D-+DESTROY FunctionDB=DESTROY
&D-+WDESTROY FunctionDB=WDESTROY
&D-+MONUNCON FunctionDB=MONUNCON
&D-+MONCON FunctionDB=MONCON
&D-+MONSET FunctionDB=MONSET
&D-+COM FunctionDB=COMSPEAK
&D-\= FunctionDB=COMQUICK
&D-+QUIET FunctionDB=QUIET
&D-+DEFAULT FunctionDB=DEFAULT
&D-+LISTPUB FunctionDB=LISTPUB
&D-+LISTPRIV FunctionDB=LISTPRIV
&D-+SETWIZARD FunctionDB=SETWIZARD
&D-+WREMOVE FunctionDB=WREMOVE
&D-+WIPE FunctionDB=WIPE
&D-+WADDLOCK FunctionDB=WADDLOCK
&D-+ADDLOCK FunctionDB=ADDLOCK
&D-+CHANJOIN FunctionDB=CHANJOIN
&D-+WCHANJOIN FunctionDB=WCHANJOIN
&LISTCHM00 FunctionDB=Your channel list is as follows:%rChannels[space(7)]Channel Status%r[v(lines)][iter(lattr([v(CH-DB)]),switch([gt(match(before(get([v(CH-DB)]/##),L),%1),0)][gt(match(after(get([v(CH-DB)]/##),L),%1),0)][gt(match(get([v(CH-DB)]/##),L),0)],101,%r[capstr(lcstr(##))]+[space(sub(14,strlen(##)))]:Owned and Locked%r[space(21)]Users: [u(listuser,##)]%r[space(21)]Owners: [switch(u(wizard,%1),1,u(listowner2,##),u(listowner,##))]%r[u(NOTAUSER,##)],011,%r[capstr(lcstr(##))]+[space(sub(14,strlen(##)))]:Locked, 100,%r[capstr(lcstr(##))][space(sub(15,strlen(##)))]:Member))]%r[v(lines)][u(LISTCHL,edit(iter(lattr(v(O-DB)),switch(and(match(##,F-*),u([v(O-DB)]/##,%1)),1,##)),F-,),%1)]%rChannel Listing -> Completed
&LISTCHM11 FunctionDB=WIZCom: [name(*%0)]'s channel list is as follows:%rChannels:[space(7)]Channel Status%r[v(lines)][iter(lattr([v(CH-DB)]),switch([gt(match(before(get([v(CH-DB)]/##),L),[num(*%0)]),0)][gt(match(after(get([v(CH-DB)]/##),L),[num(*%0)]),0)][gt(match(get([v(CH-DB)]/##),L),0)],101,%r[capstr(lcstr(##))]+[space(sub(14,strlen(##)))] Owned and Locked%r[space(21)]Users: [u(listuser,##)]%r[space(21)]Owners: [u(listowner2,##)]%r[u(NOTAUSER,##)],011,%r[capstr(lcstr(##))]+[space(sub(14,strlen(##)))]:Locked,100,%r[capstr(lcstr(##))][space(sub(15,strlen(##)))]:Member))]%r[v(lines)][u(LISTCHL,edit(iter(lattr(v(O-DB)),switch(and(match(##,F-*),u([v(O-DB)]/##,*%0)),1,##)),F-,),%0)]%rWIZCom: Channel Listing Completed.
&LISTCHL FunctionDB=[switch(gt(words(v(0)),0),1,%rDisplaying all locked channels currently accessable by +CHANJOIN:%r[v(lines)]%r[iter(v(0),## [mid(v(dots),0,sub(30,strlen(##)))] Status: [u(LISTCHLA[gt(match(get([v(CH-DB)]/##),v(1)),0)])] Privalages: [u(LISTCHL[or(match(before(get([v(CH-DB)]/##),L),v(1)),match(get([v(O-DB)]/O-##),v(1)))])]%r[v(lines)])])]
&LISTCHLA0 FunctionDB=OFFLINE ....
&LISTCHLA1 FunctionDB=ONLINE .....
&LISTCHANF FunctionDB=[u(wizard,%1)][match(PLAYER,type(*%0))]
&LISTCHM01 FunctionDB=[u(listchm00,%0,%1)]
&LISTCHM10 FunctionDB=[switch(words(v(0)),0,u(listchm00,%0,%1),WIZCom: ERROR - '[secure(v(0))]' not a player.)]
&LISTCHL0 FunctionDB=User
&LISTCHL1 FunctionDB=Owner
&D-+ALIAS FunctionDB=ALIASA ALIASD ALIASH ALIASC
&DOINDEX FunctionDB=[u(center,Index Listing)]%r[u(center,-------------)]%r%b[iter(v(usropts),switch(mod(member(v(usropts),##),5),0,##%r,##[space(sub(14,strlen(##)))]))]%r[switch(u(wizard,%#),1,%r[u(center,Wizard Index Listing)]%r[u(center,--------------------)]%r%b[iter(v(wizopts),switch(mod(member(v(wizopts),##),5),0,##%r,##[space(sub(14,strlen(##)))]))])]%r%rIndividual help is available by typing: +HELP <option>%r[v(lines)]
&CENTER FunctionDB=[space(sub(40,div(strlen(%0),2)))][v(0)]
&JOINF FunctionDB=[gt(match(get([v(CH-DB)]/[v(0)]),L),0)][and(u([v(O-DB)]/F-[v(0)],%1),1)][gt(match(before(get([v(CH-DB)]/[v(0)]),L),v(1)),0)]
&JOINM000 FunctionDB=Com: ERROR - Unable to apply '+CHANJOIN' for public channels. Use '+CHAN +[ucstr(first(v(0)))]'.
&JOINM010 FunctionDB=Com: ERROR - LOCK existing for public channel '[capstr(lcstr(v(0)))]'. Notify an administrator.
&JOINM100 FunctionDB=Com: ERROR - you were manually added as you don't match the lock. Unable to '+CHANJOIN'.
&JOINM110 FunctionDB=[v(9)]
&JOINM001 FunctionDB=Com: ERROR - Unable to apply '+CHANJOIN' for public channels. Use '+CHAN +[ucstr(first(v(0)))]'.
&JOINM101 FunctionDB=Com: ERROR - you were manually added as you don't match the lock. Unable to '+CHANJOIN'.
&JOINM011 FunctionDB=Com: ERROR - LOCK exisiting for public channel '[capstr(lcstr(v(0)))]'. Notify an administrator.
&JOINM111 FunctionDB=[v(9)]
&JOINDO1 FunctionDB=[setinter(lwho(),[v(1)] [get([v(CH-DB)]/[first(v(0))])])]
&JOINDO0 FunctionDB=[v(9)]
&JOINSET000 FunctionDB=[before(get([v(CH-DB)]/[v(0)]),L)] L [setunion(after(get([v(CH-DB)]/[v(0)]),L),%1)]
&JOINSET100 FunctionDB=[before(get([v(CH-DB)]/[v(0)]),L)] L [setdiff(after(get([v(CH-DB)]/[v(0)]),L),%1)]
&JOINSET010 FunctionDB=[setdiff(before(get([v(CH-DB)]/[v(0)]),L),v(1))] L [after(get([v(CH-DB)]/[v(0)]),L)]
&JOINS110 FunctionDB=[v(CH-DB)]
&JOIN111 FunctionDB=[v(O-DB)]
&ADDLOCKF FunctionDB=[or(and(u(wizard,%2),match(get([v(CH-DB)]/[v(0)]),L)),and(match(get([v(CH-DB)]/[v(0)]),L),match(before(get([v(CH-DB)]/[v(0)]),L),v(2))))][gt(match(v(1),*:*),0)]
&ADDLOCKM00 FunctionDB=Com: ERROR - You are not an owner of channel '[capstr(lcstr(secure(v(0))))]'.
&ADDLOCKM10 FunctionDB=Com: ERROR - Empty lock list. Restoring previous lock.
&ADDLOCKM11 FunctionDB=Com: Lock(s) established on channel '[capstr(lcstr(v(0)))]'.
&ADDLOCKM01 FunctionDB=Com: ERROR - You are not an owner of channel '[capstr(lcstr(secure(v(0))))]'.
&ADDLOCKS11 FunctionDB=[v(O-DB)]
&ADDLOCKDO FunctionDB=\[and\([iter(v(1),u(parselock,before(##,:),after(##,:)))]1\)\]
&PARSELOCK FunctionDB=match\(%1,get\(%%0/%0\)\)\,
&SETQLIST FunctionDB=CHAN UNCHAN UNUSER OWNER UNOWNER CHOWN USER WUSER WOWNER WUNUSER WUNOWNER WLOCK WUNLOCK CREATE DESTROY WDESTROY MONUNCON MONSET COMSPEAK QUICKSPEAK QUIET WREMOVE WIPE WADDLOCK CHANJOIN WCHANJOIN WDISABLE WENABLE ALIASA ALIASD ADDLOCK WPURGE
&HUSROPTS FunctionDB=+CHAN +USER +OWNER +LISTCHAN +CREATE +DESTROY +COM = +QUIET +DEFAULT +LISTPUB +WIPE +CHANJOIN +ALIAS +ALIAS2 +CONFIG +COMINDEX +HELP +COMSTATUS INDEX USING USING2 LOCKING LOCKING2 LOCKING3 ALIAS COM CHANNEL CHANGES THANKS COPYRIGHT +ADDLOCK +COM2 +COM3
&HWIZOPTS FunctionDB=+WUSER +WUSER2 +WOWNER +CHOWN +WLOCK +WUNLOCK +WLIST +LISTCHAN +WDESTROY +MONUNCON +MONCON +MONSET +LISTPRIV +SETWIZARD +SETWIZARD2 +WREMOVE +WCHANJOIN +WADDLOCK +WIPE +WENABLE +WDISABLE +WINSTSETQ +WUNINSTSETQ WIZARD WIZARD2 WIZARD3 WIZARD4 +ADDLOCK +COM4 +WUSRLOCK +WCLOAK +WERRORSET +WPURGE
&HELPF FunctionDB=[or(and(u(wizard,%1),match(v(hwizopts),v(0))),match(v(husropts),v(0)))]
&DOHELP0 FunctionDB=[v(9)]
&DOHELP1 FunctionDB=[u([v(H-DB)]/H[v(0)],%1,[v(F-DB)])]
&WIZARD FunctionDB=[hasflag(%0,wizard)]
@set comsystem=!halt
@set comsystem=inherit
@fo Comsystem=&O-DB FunctionDB=[num(optiondb)]
@fo Comsystem=&CH-DB FunctionDB=[num(channeldb)]
@fo Comsystem=&A-DB FunctionDB=[num(aliasdb)]
@fo Comsystem=&M-DB FunctionDB=[num(monitordb)]
@fo Comsystem=&ALT-DB FunctionDB=[num(alternatedb)]
@fo Comsystem=&ORIG-DB FunctionDB=[num(origonaldb)]
@fo Comsystem=&F-DB FunctionDB=[num(functiondb)]
@fo Comsystem=&H-DB FunctionDB=[num(helpdb)]
&AFD FunctionDB=[gt(match(get([v(A-DB)]/A[v(0)]),v(1)),0)]
&AFA FunctionDB=[gt(match(get([v(A-DB)]/A[v(0)]),v(1)),0)][gt(match(get([v(A-DB)]/C[v(0)]),v(2)),0)]
&ALA11 FunctionDB=Alias: ERROR - Alias '[capstr(lcstr(secure(v(0))))]' exists.
&ALA10 FunctionDB=Alias: ERROR - Alias '[capstr(lcstr(secure(v(0))))]' exists.
&ALA00 FunctionDB=Alias: Alias '[capstr(lcstr(secure(v(0))))]' set for channel '[capstr(lcstr(secure(v(1))))]'
&ALA01 FunctionDB=Alias: Channel '[capstr(lcstr(secure(first(v(1)))))]' modified with alias '[capstr(lcstr(secure(v(0))))]'
&ASA11 FunctionDB=[get([v(A-DB)]/A[v(1)])]
&ASA10 FunctionDB=[get([v(A-DB)]/A[v(1)])]
&ASA00 FunctionDB=[cat(get([v(A-DB)]/A[v(1)]),secure(v(0)))]
&ASC11 FunctionDB=[get([v(A-DB)]/C[v(1)])]
&ASC10 FunctionDB=[get([v(A-DB)]/C[v(1)])]
&ASC01 FunctionDB=[get([v(A-DB)]/C[v(1)])]
&ASC00 FunctionDB=[cat(get([v(A-DB)]/C[v(1)]),secure(first(v(0))))]
&ASA-S0 FunctionDB=[replace(get([v(A-DB)]/A[v(1)]),match(get([v(A-DB)]/C[v(1)]),v(2)),secure(v(0)))]
&ASA-S1 FunctionDB=[secure(v(0))]
&ASA01 FunctionDB=[extract(get([v(A-DB)]/A[v(1)]),1,sub(match(get([v(A-DB)]/C[v(1)]),v(2)),1))] [secure(v(0))] [extract(get([v(A-DB)]/A[v(1)]),add(match(get([v(A-DB)]/C[v(1)]),v(2)),1),4000)]
&ALD0 FunctionDB=Alias: ERROR - Alias '[capstr(lcstr(secure(v(0))))]' doesn't exist.
&ALD1 FunctionDB=Alias: Alias '[capstr(lcstr(secure(v(0))))]' deleted
&ADC0 FunctionDB=[get([v(A-DB)]/C[v(1)])]
&ADC1 FunctionDB=[extract(get([v(A-DB)]/C[v(1)]),1,sub(member(get([v(A-DB)]/A[v(1)]),v(0)),1))] [extract(get([v(A-DB)]/C[v(1)]),add(member(get([v(A-DB)]/A[v(1)]),v(0)),1),4000)]
&ADA0 FunctionDB=[get([v(A-DB)]/A[v(1)])]
&ADA1 FunctionDB=[extract(get([v(A-DB)]/A[v(1)]),1,sub(match(get([v(A-DB)]/A[v(1)]),v(0)),1))] [extract(get([v(A-DB)]/A[v(1)]),add(match(get([v(A-DB)]/A[v(1)]),v(0)),1),4000)]
&ALSH0 FunctionDB=%r[extract(get([v(A-DB)]/A[v(1)]),v(0),1)] [repeat(-,sub(7,strlen(extract(get([v(A-DB)]/A[v(1)]),v(0),1))))][extract(get([v(A-DB)]/C[v(1)]),v(0),1)] [space(sub(15,strlen(extract(get([v(A-DB)]/C[v(1)]),v(0),1))))]
&ALSH1 FunctionDB=[extract(get([v(A-DB)]/A[v(1)]),v(0),1)] [repeat(-,sub(7,strlen(extract(get([v(A-DB)]/A[v(1)]),v(0),1))))][extract(get([v(A-DB)]/C[v(1)]),v(0),1)] [space(sub(15,strlen(extract(get([v(A-DB)]/C[v(1)]),v(0),1))))]
&JOIN110 FunctionDB=[v(O-DB)]
&JOINSET001 FunctionDB=[setunion(before(get([v(CH-DB)]/[v(0)]),L),v(1))] L [after(get([v(CH-DB)]/[v(0)]),L)]
&JOINS111 FunctionDB=[v(CH-DB)]
&JOINSETO000 FunctionDB=[get([v(O-DB)]/O-[v(0)])]
&JOINSETO100 FunctionDB=[get([v(O-DB)]/O-[v(0)])]
&JOINSETO010 FunctionDB=[setunion(get([v(O-DB)]/O-[v(0)]),v(1))]
&JOINSETO001 FunctionDB=[setdiff(get([v(O-DB)]/O-[v(0)]),v(1))]
&NOTAUSER1 FunctionDB=[switch(gt(words(v(0)),0),1,[space(21)]Invalid Users: [v(0)])]
&BADLISTUSR FunctionDB=[u(BADLISTUSR1,iter(setdiff(get([v(CH-DB)]/[v(0)]),L),switch(match(player,type(##)),0,##)))]
&BADLISTUSR1 FunctionDB=[switch(words(v(0)),0,,Invalid Users \([words(v(0))] Total\))]
&MONSET00 FunctionDB=[get([v(M-DB)]/forwardlist)]
&MONSET10 FunctionDB=[get([v(M-DB)]/forwardlist)]
&MONSET01 FunctionDB=[setunion(get([v(M-DB)]/forwardlist),v(0))]
&MONSET11 FunctionDB=[setdiff(get([v(M-DB)]/forwardlist),v(0))]
&WJOINS11 FunctionDB=[v(CH-DB)]
&WJOINDO0 FunctionDB=[setunion(before(get([v(CH-DB)]/[v(0)]),L),v(1))] L [setdiff(after(get([v(CH-DB)]/[v(0)]),L),v(1))]
&WJOINDO1 FunctionDB=[setdiff(before(get([v(CH-DB)]/[v(0)]),L),v(1))] L [setdiff(after(get([v(CH-DB)]/[v(0)]),L),v(1))]
&WUNUSERM7 FunctionDB=[v(9)]
&WUNUSERM8 FunctionDB=WIZCom: QUIETMODE - Following user(s) removed from channel '[capstr(lcstr(v(1)))]': [setdiff(rest(u(wordit,u(culfunc2,%4,%1,%2,%3))),following:)]
&WUNOWNER8 FunctionDB=WIZCom: QUIETMODE - Following user(s) removed from channel '[capstr(lcstr(v(0)))]': [setdiff(u(wordit,[u(colfunc2,%0,%1,%2,%3)]),list:)]
&WADDLOCKF FunctionDB=[u(wizard,%1)][or(eq(words(get([v(CH-DB)]/[first(v(0))])),0),match(get([v(CH-DB)]/[first(v(0))]),L))]
&WADDLOCKM00 FunctionDB=[u(ERRORDEF)]
&WADDLOCKM01 FunctionDB=[u(ERRORDEF)]
&WADDLOCKM10 FunctionDB=WIZCom: ERROR - Channel '[capstr(lcstr(first(v(0))))]' exists as a public channel. Unable to lock.
&WADDLOCKM11 FunctionDB=WIZCom: Lock established for locked channel '[capstr(lcstr(first(v(0))))]'.
&WADDLOCKS1 FunctionDB=[v(CH-DB)]
&WADDLOCKS11 FunctionDB=[v(O-DB)]
&WUNOWNERDO0 FunctionDB=[v(9)]
&WUNOWNERM0 FunctionDB=[u(ERRORDEF)]
&WUNOWNERM1 FunctionDB=WIZCom: ERROR - Channel '[secure(v(0))]' not a locked channel.
&WUNOWNERM2 FunctionDB=WIZCom: ERROR - Channel '[secure(v(0))]' not a locked channel.
&WUNOWNERM3 FunctionDB=WIZCom: ERROR - Validation shows empty user list.
&WUNOWNERM4 FunctionDB=WIZCom: ERROR - Channel '[secure(v(0))]' not a locked channel.
&WUNOWNERM5 FunctionDB=WIZCom: ERROR - Validation shows empty user list.
&WUNOWNERM6 FunctionDB=WIZCom: ERROR - Channel '[secure(v(0))]' not a locked channel.
&WUNOWNERM7 FunctionDB=[v(9)]
&WUNOWNERM8 FunctionDB=WIZCom: QUIETMODE - Following user(s) removed from channel '[capstr(lcstr(v(0)))]': [setdiff(u(wordit,[u(colfunc2,%0,%1,%2,%3)]),list:)]
@pemit me=Com: Functionality completed... Help Initialization... please wait...
&HINDEX HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Command Index)]%r[u(%1/center,-------------)]%r[u(%1/doindex)]
&LINES HelpDB=------------------------------------------------------------------------------
&HUSING HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,SubMenu - Using the ComSystem page 1 of 2)]%r[u(%1/center,-----------------------------------------)]%r+COM[space(11)]- Used to 'talk' on channels.%r[space(15)]Syntax: +COM <channel>=<message>%r=[space(14)]- Shorthand for '+COM'%r[space(15)]Syntax: =\[alias\] <message>%r+QUIET[space(9)]-Toggle output on specified channel%r[space(15)]Syntax: +QUIET <Channel>%r+DEFAULT[space(7)]- Set default channel for '=' command.%r[space(15)]Syntax: +DEFAULT <channel>%r+LISTPUB[space(7)]- List all public channels.%r[space(15)]Syntax: +LISTPUB%r%rType '+HELP USING2' for more help.%rFor more information, extended help and examples are available: +HELP <Option>%r%rSee Also: LOCKING ALIAS COM CHANNEL +CONFIG +COMSTATUS +COM +CHAN =%r[v(lines)]
&HUSING2 HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,SubMenu - Using the ComSystem page 2 of 2)]%r[u(%1/center,-----------------------------------------)]%r+CHAN[space(10)]- Used to join/unjoin public channels.%r[space(15)]Syntax: +CHAN <+/-><channel>%r+LISTCHAN[space(6)]-Lists all channels you belong to.%r[space(15)]Syntax: +LISTCHAN%r+COMINDEX[space(6)]- List all available commands.%r[space(15)]Syntax: +COMINDEX%r+CREATE[space(8)]- Creates a locked (private) channel.%r[space(15)]Syntax: +CREATE <Channel>%r+CHANJOIN[space(6)]- Join/Unjoin locked (private) channel%r[space(15)]Syntax: +CHANJOIN <Channel>%r+ALIAS[space(9)]- Show/add/delete aliases for channels.%r[space(15)]Syntax: +ALIAS (shows all aliases)%r[space(23)]+ALIAS +<alias> <channel> (add/modify alias)%r[space(23)]+ALIAS -<alias> (delete/remove alias)%r[space(23)]+ALIAS CLEAR (remove all aliases)%r%rFor more information, extended help and examples are available: +HELP <Option>%r%rSee Also: LOCKING ALIAS COM CHANNEL +CONFIG +COMSTATUS +COM +CHAN =%r[v(lines)]
&HLOCKING HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,SubMenu - Locking Channels page 1 of 3)]%r[u(%1/center,--------------------------------------)]%r+USER[space(10)]- Used to add/remove users to locked channel you own.%r[space(15)]Syntax: +USER <Channel> +<User1 ... UserX>%r[space(23)]+USER <Channel> -<User1 ... UserX>%r+OWNER[space(9)]- Used to add/remove owners to locked channels you own.%r[space(15)]Syntax: +OWNER <Channel> +<User1 ... UserX>%r[space(23)]+OWNER <Channel> -<User1 ... UserX>%r+LISTCHAN[space(6)]- Used to list channels you own and users/owners on it.%r[space(15)]Syntax: +LISTCHAN%r+CREATE[space(8)]- Used to create a locked (private) channel.%r[space(15)]Syntax: +CREATE <Channel>%r+DESTROY[space(7)]- Used to remove a locked (private) channel you control.%r[space(15)]Syntax: +DESTROY <Channel>%r%rType '+HELP LOCKING2' for more help.%rFor more information, extended help and examples are available: +HELP <Option>%r%rSee Also: ALIAS COM CHANNEL USING +CONFIG +COMSTATUS CHANGES INDEX%r[v(lines)]
&HLOCKING2 HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,SubMenu - Locking Channels page 2 of 3)]%r[u(%1/center,--------------------------------------)]%r+COM[space(11)]- Used to talk on a locked channel%r[space(15)]Syntax: +COM <Channel>=<Message>%r=[space(14)]- Shorthand for '+COM' and used with the alias system.%r[space(15)]Syntax: = <Message> (For default channel)%r[space(23)]=<alias> <Message> (for channel with 'alias')%r+QUIET[space(9)]- Used to toggle output on given locked channel.%r[space(15)]Syntax: +QUIET <Channel>%r+CHANJOIN[space(6)]- Used to toggle joining locked (private) channel that%r[space(15)]you match the function-lock on previously set.%r[space(15)]Syntax: +CHANJOIN <Channel>%r%rType '+HELP LOCKING3' for more help.%rFor more information,extended help and examples are available: +HELP <Option>%r%rSee Also: ALIAS COM CHANNEL USING +CONFIG COMSTATUS INDEX CHANGES%r[v(lines)]
&HLOCKING3 HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,SubMenu - Locking Channels page 3 of 3)]%r[u(%1/center,--------------------------------------)]%r+ALIAS[space(9)]- Used to add/remove/change aliases for channels.%r[space(15)]Syntax: +ALIAS (shows all aliases currently defined)%r[space(23)]+ALIAS +<alias> <Channel> (adds/modifies an alias)%r[space(23)]+ALIAS -<alias> (removes the alias for that channel)%r[space(23)]+ALIAS CLEAR (clears your alias listing)%r[space(23)]=<alias> <message> (talks on channel defined by alias)%r+WIPE[space(10)]- This removes all non-players (nuked) from the locked channel.%r[space(15)]Syntax: +WIPE <Channel>%r%rFor more information,extended help and examples are available: +HELP <Option>%r%rSee Also: ALIAS COM CHANNEL USING +CONFIG COMSTATUS INDEX CHANGES%r[v(lines)]
&HALIAS HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,SubMenu - Using the Alias System)]%r[u(%1/center,--------------------------------)]%r+ALIAS - Used to display current alias list, add/remove aliases, and clear%r[Space(9)]the alias list. This is used with the '=' command%r[space(9)]for easier channel control in using it.%r%rSyntax: +ALIAS[space(24)]- Shows aliases you currently have.%r[space(8)]+ALIAS +<alias> <channel>[space(5)]- Adds/modifies an aliases to the channel.%r[space(8)]+ALIAS -<alias>[space(15)]- Removes an alias for that channel.%r[space(8)]+ALIAS CLEAR[space(18)]- Clears your alias list.%r[space(8)]=<alias> <message>[space(12)]- Speak on the channel your alias is for.%r%rFor more information, extended help and examples are available: +HELP <Option>%r%rSee Also: COM CHANNEL USING +CONFIG +COMSTATUS CHANGES LOCKING = +ALIAS%r[v(lines)]
&HCOM HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,MasterMenu - Com System)]%r[u(%1/center,-----------------------)]%r%r+HELP COM - shows this screen.%r+HELP CHANNEL - shows this screen.%r+HELP CHANGES - shows changes with the various versions.%r+HELP USING - shows how to use the com system.%r+HELP ALIAS - shows available commands involving the alias system.%r+HELP LOCKING - shows available commands involving the locking system.%r+HELP INDEX - shows all available commands involving the channel system.%r+HELP THANKS - Special thanks to all who helped make this possible.%r+HELP COPYRIGHT - shows copyright information.[switch(u(%1/wizard,%0),1,%r+HELP WIZARD - shows all commands available to a wizard/staff/admin)]%r%rFor more information, extended help and examples are available: +HELP <Option>%r%r[v(lines)]
&HCHANNEL HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,MasterMenu - Com System)]%r[u(%1/center,-----------------------)]%r%r+HELP COM - shows this screen.%r+HELP CHANNEL - shows this screen.%r+HELP CHANGES - shows changes with the various versions.%r+HELP USING - shows how to use the com system.%r+HELP ALIAS - shows available commands involving the alias system.%r+HELP LOCKING - shows available commands involving the locking system.%r+HELP INDEX - shows all available commands involving the channel system.%r+HELP THANKS - Special thanks to all who helped make this possible.%r[switch(u(%1/wizard,%0),1,+HELP WIZARD - shows all commands available to a wizard/staff/admin)]%r%rFor more information, extended help and examples are available: +HELP <Option>%r%r[v(lines)]
&HCHANGES HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,SubMenu - Changes Regarding ComSystem)]%r[u(%1/center,-------------------------------------)]%rVersion 1.0 to 2.0%r[space(5)]- Enabled multi channel system for infinite channels.%r[space(5)]- Gave various ways to list channels.%rVersion 3.0 to 3.5%r[space(5)]- Added locking functionality%r[space(5)]- Allowed user defined functionality.%r[space(5)]- Gave users/wizards greater database control%rVersion 4.0 to 4.5%r[space(5)]- Fixed bugs with locked channels.%r[space(5)]- Added ability of owners to add/remove owners.%r[space(5)]- Gave wizards stealth abilities for channels%rVersion 5.0 to 5.1%r[space(5)]- Redesigned functionality.%r[space(5)]- Made system object oriented for ease.%r[space(5)]- Redesigned main engine kernal.%r[space(5)]- Gave wizards/users better control%r[space(5)]- Enhanced help and examples.%rVersion 5.21 to current%r[space(5)]- Fixed minor format bugs%r[space(5)]- Redid global help for easier understanding.%r%rSee Also: +COMSTATUS INDEX THANKS%r[v(lines)]
&HTHANKS HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,SubMenu - Special Thanks)]%r[u(%1/center,------------------------)]%r%r[u(%1/thanks)]%r%r[v(lines)]
&HCOPYRIGHT HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,SubMenu - Copyright Information)]%r[u(%1/center,-------------------------------)]%r%r[u(%1/copyright2)]%r%r[v(lines)]
&HWIZARD HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,SubMenu - Wizard Commands Page 1 of 4)]%r[u(%1/center,-------------------------------------)]%r+WUSER[space(9)]- Add/Remove users from any locked channel.%r[space(15)]Syntax: +WUSER <Channel> <+/-><User1 ... UserX>%r+WOWNER[space(8)]- Add/Remove owners from any locked channel.%r[space(15)]Syntax: +WOWNER <Channel> <+/-><User1 ... UserX>%r+CHOWN[space(9)]- Chown the channel to the given user(s).%r[space(15)]Syntax: +CHOWN <Channel> +<User1 ... UserX>%r+WLOCK[space(9)]- Locks the given public channel with optional users.%r[space(15)]Syntax: +WLOCK <Channel> \[+User1 ... +UserX\]%r+WUNLOCK[space(7)]- Unlocks the given private (locked) channel.%r[space(15)]Syntax: +WUNLOCK <Channel>%r+WLIST[space(9)]- List all users on the given channel.%r[space(15)]Syntax: +WLIST <Channel>%r+LISTCHAN[space(7)]- Lists channels given user is on.%r[space(15)]Syntax: +LISTCHAN \[User\]%r%rType '+HELP WIZARD2' for more help.%rFor more information, extended help and examples are available: +HELP <Option>%r%rSee Also: USING LOCKING CHANGES INDEX%r[v(lines)]
&HWIZARD2 HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,SubMenu - Wizard Commands Page 2 of 4)]%r[u(%1/center,-------------------------------------)]%r+WDESTROY[space(6)]- Destroys the given channel (private or public)%r[space(15)]Syntax: +WDESTROY\[/QUIET\] <Channel>%r+MONCON[space(8)]- When on the master-room will show connections%r[space(15)]of users. The master-room must recognize connects/disconnects.%r+MONUNCON[space(6)]- When on master-room will show disconnections%r[space(15)]of users. The master-room must recognize connects/disconnects.%r+MONSET[space(8)]- Toggle to allow wizards to join/leave monitor system.%r[space(15)]Syntax: +MONSET%r+LISTPRIV[space(6)]- Lists all private (locked) channels.%r[space(15)]Syntax: +LISTPRIV%r+SETWIZARD[space(5)]- Sets function wizards are defined by.%r[space(15)]Syntax: +SETWIZARD <Function>%r+WREMOVE[space(7)]- Removes users from channel (private/public).%r[space(15)]Syntax: +WREMOVE <Channel> -<User1 ... UserX>%r%rType '+HELP WIZARD3' for more help.%rFor more information, extended help and examples are available: +HELP <Option>%r%rSee Also: USING LOCKING CHANGES INDEX%r[v(lines)]
&HWIZARD3 HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,SubMenu - Wizard Commands Page 3 of 4)]%r[u(%1/center,-------------------------------------)]%r+WCHANJOIN[space(5)]- Toggles wizard as owner of given locked channel.%r[space(15)]Syntax: +WCHANJOIN <Channel>%r+WADDLOCK[space(6)]- Adds functionality lock to locked channel.%r[space(15)]+WADDLOCK <Channel>=<Function>%r+WIPE[space(10)]- Removes all non-users (nuked) from any channel.%r[space(15)]Syntax: +WIPE <Channel>%r+WENABLE[space(7)]- Enables a disabled ComSystem command.%r[space(15)]Syntax: +WENABLE <Command>%r+WDISABLE[space(6)]- Disables an enabled ComSystem command.%r[space(15)]Syntax: +WDISABLE <Command>%r+WINSTSETQ[space(5)]- Installs setq() functionality into the%r[space(15)]ComSystem. This is the default setting.%r[space(15)]Syntax: +WINSTSETQ%r+WUNINSTSETQ[space(3)]-Uninstalls setq() functionality into the%r[space(15)]ComSystem removing all occurances of setq().%r[space(15)]Syntax: +WUNINSTSETQ%r%rype '+HELP WIZARD4' for more help.%rFor more information, extended help and examples are available: +HELP <Option>%r%rSee Also: USING LOCKING CHANGES INDEX%r[v(lines)]
&HWIZARD4 HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,SubMenu - Wizard Commands Page 4 of 4)]%r[u(%1/center,-------------------------------------)]%r+WCLOAK[space(8)]- Allows a wizard to cloak on a locked channel.%r[space(15)]Syntax: +WCLOAK\[/STATUS\] <Channel>%r+WERRORSET[space(5)]- Allows a wizard to set what the error message looks like.%r[space(15)]Syntax: +WERRORSET <String>%r+WUSRLOCK[space(6)]- Allows a wizard to add/remove user from using ComSystem.%r[space(15)]Syntax: +WUSRLOCK <+/-><User>%r%rSee Also: LOCKING USING INDEX +COMSTATUS%r[v(lines)]
&H+CHAN HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using +CHAN)]%r[u(%1/center,-----------)]%rSyntax: +CHAN <Option>%r%rOptions: +CHAN +<Channel> -- Adds you to a given public channel.%r[space(9)]+CHAN -<Channel> -- removes you from a given public channel.%r%rExamples: +CHAN +PUBLIC \(This adds you to the channel 'Public'.\)%r[space(10)]+CHAN -PUBLIC \(This removes you from the channel 'Public'.\)%r%rDescription: The +CHAN option is used to add or remove a public channel from%r[space(13)]your channel list. The options given to it are '+' and '-' to %r[space(13)]add or remove a given channel respectively.%r%rSee Also: +CREATE +CHANJOIN +USER +OWNER%r[v(lines)]
&H+WPURGE HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using Wizard-Command +WPURGE)]%r[u(%1/center,----------------------------)]%rSyntax: +WPURGE <Player>%r%rOptions: +WPURGE <player-name> -- purges all channels of player%r%rExamples: +WPURGE Amberyl \(removes Amberyl from all existing channels\)%r%rDescription: The +WPURGE function is used to remove an existing player from%r[space(13)]ALL existing channels, both public and private. This is%r[space(13)]useful before nuking players to avoid invalid player names.%r%rSee Also: +WREMOVE +WIPE%r[v(lines)]
&H+USER HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using +USER)]%r[u(%1/center,-----------)]%rSyntax: +USER <Option>%r%rOptions: +USER <Channel> +<User-List> -- adds one or more users to the channel.%r[space(9)]+USER <Channel> -<User-List> -- removes one or more users from the%r[space(9)]channel.%r%rExamples: +USER Wizard +Fred Bertha \(Adds users 'Fred' and 'Bertha' to locked%r[space(10)]channel 'Wizard'\)%r[space(10)]+USER Wizard -Fred \(Removes 'Fred' from locked channel 'Wizard'\)%r%rDescription: The +USER option is used to add or remove one or more users from a%r[space(13)]locked channel that you are an owner of. Use '+' or '-' to add or%r[space(13)]remove the list of users respectively as shown above.%r%rSee Also: +OWNER +CREATE +DESTROY +CHAN +CHANJOIN +ADDLOCK%r[v(lines)]
&H+OWNER HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using +OWNER)]%r[u(%1/center,------------)]%rSyntax: +OWNER <Option>%r%rOptions: +OWNER <Channel> +<User-List> -- adds one or more owners to the%r[space(9)]channel.%r[space(9)]+OWNER <Channel> -<User-List> -- removes one or more users from the%r[space(9)]channel.%r%rExamples: +OWNER Wizard +Bob Ed \(Adds owners 'Bob' and 'Ed' to locked channel%r[space(10)]'Wizard'\)%r[space(10)]+OWNER Wizard -Ed \(Removes owner 'Ed' from locked channel 'Wizard'\)%r%rDescription: The +OWNER option is used to add or remove one or more owners from%r[space(13)]a locked channel that you are an owner of. Use '+' or '-' to add%r[space(13)]or remove the list of owners respectively as shown above.%r%rSee Also: +USER +CREATE +DESTROY +CHAN +CHANJOIN +ADDLOCK%r[v(lines)]
&H+LISTCHAN HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using +LISTCHAN)]%r[u(%1/center,---------------)]%rSyntax: +LISTCHAN [switch(u(%1/wizard\,%0),1,<Option>)]%r%rOptions: [switch(u(%1/wizard\,%0),1,+LISTCHAN <Player> -- list channel listing of specified user,None)]%r%rExamples: +LISTCHAN \(This lists all public and locked channels you belong to.\)[switch(u(%1/wizard\,%0),1,%r[space(10)]+LISTCHAN Fred \(Lists all public and private channels of 'Fred'.\))]%r%rDescription: The +LISTCHAN option is used to list out all your channels.[switch(u(%1/wizard\,%0),1,%r[space(13)]If you are a wizard\, you may do it to any specified player.)]%r[space(13)]For channels that you control \(own\), you will be able to see the%r[space(13)]list of owners, users, and any invalid \(non-existant\) users that%r[space(13)]may exist on your channel.  You will also get a list%r[space(13)]of all channels available to you with the +CHANJOIN command.%r%rSee Also: +USER +OWNER +CREATE +CHAN +QUIET +DESTROY +CHANJOIN +LISTPUB%r[v(lines)]
&H+CREATE HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using +CREATE)]%r[u(%1/center,-------------)]%rSyntax: +CREATE <Option>%r%rOptions: +CREATE <Channel> -- creates the specified locked channel.%r%rExamples: +CREATE Frump \(This will create a locked channel named 'Frump' that%r[space(10)]you own.\)%r%rDescription: The +CREATE option is used to create a locked channel and specify %r[space(13)]you as the owner of that given channel. As the example above would%r[space(13)]indicate, you would, after typing '+CREATE Frump' own a locked %r[space(13)]channel named 'Frump'.%r%rSee Also: +USER +OWNER +CHAN +QUIET +DESTROY +WIPE +CHANJOIN +ADDLOCK%r[v(lines)]
&H+DESTROY HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using +DESTROY)]%r[u(%1/center,-------------)]%rSyntax: +DESTROY <Option>%r%rOptions: +DESTROY <Channel> -- deletes the specified locked channel.%r%rExamples: +DESTROY Frump \(Deletes a locked channel named 'Frump' that you own.\)%r%rDescription: The +DESTROY option is used to delete a locked channel that you own. %r[space(13)]Any users or owners on that channel are also summarilly removed %r[space(13)]along with the channel. As the example above shows, +DESTROY Frump%r[space(13)]will totally delete the channel 'Frump' if you are listed as an%r[space(13)]owner of it.%r%rSee Also: +USER +OWNER +CREATE +CHAN +QUIET +WIPE +CHANJOIN +ADDLOCK%r[v(lines)]
&H+COM HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using +COM: Page 1 of 3)]%r[u(%1/center,-----------------------)]%rSyntax: +COM <Option>=<Option>%r%rOptions: +COM <Channel> = <Message> -- standard com message%r[space(9)]+COM <Channel> = :<Message> -- posing com message%r[space(9)]+COM <Channel> = ;<Message> -- possessive posing com message%r[space(9)]+COM <Channel> = !<Message> -- auto-title insertion with com message%r[space(9)]+COM <Channel> = "<Message> -- saying com messages (as in 'say')%r[space(9)]+COM <Channel> = ~<Message> -- spoofing com messages%r[space(9)]+COM <Channel> = '<Message> -- auto-alias insertion with com message%r[space(9)]+COM <Channel> = ^<User-List>^<Message> -- omit list of users%r[space(9)]+COM <Channel> = _<User-List>_<Message> -- just to list of users%r[space(9)]+COM <Channel> = WHO -- list all active users on given channel%r%rAs the '+COM' option is complex, examples are available by typing: +HELP +COM2%r%rSee Also: = +QUIET +ALIAS +CHAN +CHANJOIN +LISTCHAN +CONFIG +COM2 +COM3%r[v(lines)]
&H+COM2 HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using +COM: Page 2 of 3)]%r[u(%1/center,-----------------------)]%rExamples: +COM Public = WHO \(This lists who are active on channel 'Public'\)%r[space(10)]+COM Public = ~I'm Spoofing! \(Displays '\[Public\] I'm Spoofing!'\)%r[space(20)]To see SPOOFING, review help on +CONFIG%r[space(10)]+COM Public = Hi \(Displays '\[Public\] [name(%0)]: Hi'\)%r[space(10)]+COM Public = :waves \(Displays '\[Public\] [name(%0)] waves'\)%r[space(10)]+COM Public = ;waves \(Displays '\[Public\] [name(%0)]waves'\)%r[space(10)]+COM Public = !Hi \(Displays '\[Public\] [name(%0)] <Title> Hi'\)%r[space(20)]To set your title, review help on +CONFIG%r[space(10)]+COM Public = 'Hi \(Displays '\[Public\] Your-Alias: Hi'\)%r[space(20)]To set your alias, review help on +CONFIG%r[space(10)]+COM Public = ^Bob^heh \(Displays '\[Public\] [name(%0)]: heh'\)%r[space(20)]This would display it to everyone but 'Bob'%r[space(10)]+COM Public=_Ed_heh \(Displays '\[Public\] [name(%0)]: heh'\)%r[space(20)]This displays to just 'Ed' \(if he's on the channel\)%rAs the '+COM' option is complex, detail is available by typing: +HELP +COM3%r%rSee Also: = +QUIET +ALIAS +CHAN +CHANJOIN +COM +COM3 +LIST%r[v(lines)]
&H+WERRORSET HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using Wizard-Command +WERRORSET)]%r[u(%1/center,-------------------------------)]%rSyntax: +WERRORSET <Option>%r%rOptions: +WERRORSET RESET -- resets the error message.%r[space(9)]+WERRORSET <Message> -- sets the error message to the desired message.%r%rExamples: +WERRORSET RESET \(Resets error message to 'Huh? %b\(Type ... \)'\)%r[space(10)]+WERRORSET *BLEEP* \(Sets error message to '*BLEEP*'.\)%r%rDescription: The +WERRORSET command is used to pre-define what%r[space(13)]you wish to have as the default error message%r[space(13)]when you use the com.  MUSH comes standard with%r[space(13)]Huh? %b\(Type "help" for help.\) as the error%r[space(13)]message, but some places have redefined them or even%r[space(13)]randomized them.  The message is called in a ufun\(\)/u\(\)%r[space(13)]function so that pretty much anything can be generated.%r%rSee Also: +COMSTATUS +COMINDEX +WINSTSETQ +WUNINSTSETQ%r[v(lines)]
&H+WCLOAK HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using Wizard-Command +WCLOAK)]%r[u(%1/center,----------------------------)]%rSyntax: +WCLOAK <Options>%r%rOptions: +WCLOAK/STATUS -- Displays currently 'cloaked' channels.%r[space(9)]+WCLOAK <Channel> -- toggles cloak on and off on existing channels.%r%rExamples: +WCLOAK/STATUS \(Displays all channels currently cloaked on\)%r[space(10)]+WCLOAK Public \(Will 'cloak' you on the channel 'public'\)%r[space(13)]this effectively hides you from +LISTCHAN, +USER, +OWNER, etc.%r[space(13)]but only on locked channels you *OWN*.%r%rDescription: The +WCLOAK function is used to hide your presence%r[space(13)]so that mortals can not locate you on a channel they%r[space(13)]own and/or belong to. When cloaked, mortals%r[space(13)]are also unable to remove you or add you to that given%r[space(13)]channel. Do note however, that you are *NOT* cloaked if%r[space(13)]you belong to the locked channel as a user!%r[space(13)]This also stops users from locating you with a 'who' %r%rSee Also: +LISTCHAN +WLIST +WREMOVE +USER +OWNER +WOWNER +WUSER%r[v(lines)]
&H+WUSRLOCK HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using Wizard-Command +WUSRLOCK)]%r[u(%1/center,------------------------------)]%rSyntax: +WUSRLOCK <Options>%r%rOptions: +WUSRLOCK +User -- Disables specified user from using system.%r[space(9)]+WUSRLOCK -User -- Enables specified user to use system.%r[space(9)]+WUSRLOCK STATUS -- displays status of who currently is disabled.%r%rExamples: +WUSRLOCK +Bob \(Locks 'Bob' from using the com system\)%r[space(10)]+WUSRLOCK -Bob \(Enables 'Bob' to use the com system\)%r[space(10)]+WUSRLOCK STATUS \(shows status of who currently is disallowed.\)%r%rDescription: +WUSRLOCK is used to allow wizards the ability%r[space(13)]to disallow anyone from using the com system.  When%r[space(13)]set, the only ways to re-allow them is to use this%r[space(13)]command or manually re-add them to the @uselock on the%r[space(13)]comsystem.  Yes, all it is is a @uselock, but not everyone who's%r[space(13)]seen as 'wizard' by the com will be a wizard.%r%rSee Also: +WLIST +WENABLE +WDISABLE +COMINDEX +COMSTATUS%r[v(lines)]
&H+WLOCK HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using Wizard-Command +WLOCK)]%r[u(%1/center,---------------------------)]%rSyntax: +WLOCK <Options>%r%rOptions: +WLOCK Channel -- locks the specified public channel w/o owners.%r[space(9)]+WLOCK Channel +User1 ... UserX -- makes the specified public channel %r[space(9)]locked with the specified users as owners.%r%rExamples: +WLOCK Public \(Locks channel 'Public' w/o owners.\)%r[space(10)]+WLOCK Public +BlackThorne \(Locks 'Public' with owner 'Blackthorne'.\)%r%rDescription: +WLOCK is used to allow wizards to lock a given public channel %r[space(13)]with an optional user-list. This is a handy thing for channels %r[space(13)]that get out of hand.%r%rSee Also: +WUNLOCK +WLIST +WUSER +WOWNER +CHOWN +WDESTROY +WADDLOCK%r[v(lines)]
&H+WUNLOCK HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using Wizard-Command +WUNLOCK)]%r[u(%1/center,-----------------------------)]%rSyntax: +WUNLOCK <Option>%r%rOptions: +WUNLOCK Channel -- makes the specified locked channel public.%r%rExamples: +WUNLOCK Admin \(Sets locked channel 'Admin' public access.\)%r%rDescription: +WUNLOCK is used to allow wizards the ability to unlock any locked%r[space(13)]channel. To see full channel status, use the command '+WLIST'.%r%rSee Also: +WUSER +WOWNER +WLOCK +CHOWN +WADDLOCK +WDESTROY +LISTPRIV%r[v(lines)]
&H+WLIST HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using Wizard-Command +WLIST)]%r[u(%1/center,---------------------------)]%rSyntax: +WLIST <Channel>%r%rOptions: +WLIST Channel -- lists all users, owners, and invalid users.%r%rExamples: +WLIST Public \(Lists all users, owners, and non-players on 'Public'\)%r%rDescription: +WLIST is used to list everyone \(owners, users, and non-players\)%r[space(13)]on the specified channel and works on any channel (public/private)%r%rSee Also: +LISTCHAN +WDESTROY +LISTPRIV +LISTPUB%r[v(lines)]
&H+WDESTROY HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using Wizard-Command +WDESTROY)]%r[u(%1/center,-----------------------------)]%rSyntax: +WDESTROY <Channel>%r%rOptions: +WDESTROY Channel -- destroys the given channel \(public or private\)%r[space(9)]+WDESTROY/QUIET Admin -- quietly destroys the given channel.%r%rExamples: +WDESTROY Admin \(Destroys channel 'Admin'. You need not be an owner\)%r[space(10)]+WDESTROY/QUIET Admin \(Quietly destroys channel 'Admin'.\)%r%rDescription: +WDESTROY is used to totally obliterate a channel. It wipes the%r[space(13)]existance of the given channel and all owners/users/etc of it.%r[space(13)]You need not have control of the channel before +WDESTROYing it.%r%rSee Also: +CHOWN +LISTPRIV +LISTCHAN +LISTPUB +WUSER +WOWNER +WLIST%r[v(lines)]
&H+MONUNCON HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using Wizard-Command +MONUNCON)]%r[u(%1/center,------------------------------)]%rSyntax: +MONUNCON%r%rOptions: None%r%rExamples: +MONUNCON \(used to monitor disconnections\)%r%rDescription: +MONUNCON when installed in the master room%r[space(13)]for those systems that have working aconnects/adisconnects, it %r[space(13)]will monitor anyone's disconnection(s) and the total time %r[space(13)]connected displaying this to all players \(generally wizards\) who %r[space(13)]are on that given option. If your system does not have the %r[space(13)]'monitoring' ability, you may add this to every player's %r[space(13)]adisconnect \(Not a fun thing to do\) or find the patch to apply.%r%rSee Also: +MONCON +MONSET +WENABLE +WDISABLE%r[v(lines)]
&H+MONCON HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using Wizard-Command +MONCON)]%r[u(%1/center,----------------------------)]%rSyntax: +MONCON%r%rOptions: None%r%rExamples: +MONCON \(used to monitor connections and lastsites\)%r%rDescription: +MONCON when installed in the master room for those%r[space(13)]systems that have working aconnects/adisconnects, it will monitor%r[space(13)]anyone's connection(s) and the site the user logged in from and %r[space(13)]display that information to all players \(generally wizards\) who %r[space(13)]are on that given option. If your system does not have the %r[space(13)]'monitoring' ability, you may add this to every player's aconnect%r[space(13)]\(Not a fun thing to do\) or find the patch to apply.%r%rSee Also: +MONUNCON +MONSET +WENABLE +WDISABLE%r[v(lines)]
&H+MONSET HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using Wizard-Command +MONSET)]%r[u(%1/center,----------------------------)]%rSyntax: +MONSET%r%rOptions: None \(Auto-toggles\)%r%rExample: +MONSET \(Will, depending if you're already added or not, add/remove %r[space(9)]you from the monitoring system\)%r%rDescription: +MONSET is a toggle that when added to the monitoring system will%r[space(13)]remove you from the system and when not added will add you to it. %r[space(13)]If your system does not recognize connects/disconnects in the %r[space(13)]master room, you will have to add the '+MONCON' and '+MONUNCON' to%r[space(13)]users by hand \(not a pretty sight\), modify your hard code with the %r[space(13)]patch, or ignore this option(s) entirelly.%r%rSee Also: +MONCON +MONUNCON +WENABLE +WDISABLE%r[v(lines)]
&H+LISTPRIV HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using Wizard-Command +LISTPRIV)]%r[u(%1/center,------------------------------)]%rSyntax: +LISTPRIV%r%rOptions: None%r%rExample: +LISTPRIV \(lists all locked channels, owners, users, and non-players\)%r%rDescription: +LISTPRIV is used to list all currently recognized locked channels.%r[space(13)]With the channel, it lists out total number of owners, users, and %r[space(13)]invalid players. This comes helpful with the +WIPE command. The %r[space(13)]'public' dirivitive is of course, +LISTPUB which also shows %r[space(13)]invalid players for +WIPE.%r%rSee Also: +LISTPUB +WLIST +WIPE +LISTCHAN%r[v(lines)]
&H+SETWIZARD HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using Wizard-Command +SETWIZARD)]%r[u(%1/center,-------------------------------)]%rSyntax: +SETWIZARD <Option>%r%rOptions: +SETWIZARD <Function> -- establishes how a wizard is defined.%r[space(34)]The default is: \[hasflag(%%0,wizard)]%r%rExamples: +SETWIZARD %%%[hasflag%%%(%%%%0,wizard%%%)%%%] \(Sets wizards as flag 'wizard'.\)%r[space(10)]+SETWIZARD %%%[match%%%(#1 #2 #3,%%%%0%%%)%%%] \(Sets wizards as users #1-#3.\)%r%r*NOTE* As displayed, you *MUST* delimiter all ()'s and %[%]'s so that the %r[space(7)]function is stored and not it's result. The player being checked is %r[space(7)]always referenced as %%0.%r%rTo see enhanced descriptions of the +SETWIZARD command, type: +HELP +SETWIZARD2%r[v(lines)]
&H+WREMOVE HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using Wizard-Command +WREMOVE)]%r[u(%1/center,-----------------------------)]%rSyntax: +WREMOVE <Channel> <Options>%r%rOptions: +WREMOVE Channel -User1 ... UserX -- removes one or more players.%r%rExamples: +WREMOVE Admin -Bob Ed \(Removes 'Ed' and 'Bob' from channel 'Admin'\)%r[space(10)]+WREMOVE Admin -Ed \(Removes just 'Ed' from channel 'Admin'\)%r%rDescription: +WREMOVE is used to remove one or more users from a given channel. %r[space(13)]The channel may be locked or public and the user may be an owner %r[space(13)]or user. It quite frankly makes no difference.%r%rSee Also: +WIPE +WUSER +WOWNER +CHOWN +WDESTROY%r[v(lines)]
&H+WCHANJOIN HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using Wizard-Command +WCHANJOIN)]%r[u(%1/center,-------------------------------)]%rSyntax: +WCHANJOIN <Channel>%r%rOptions: +WCHANJOIN <Channel> -- toggles you as an owner to the locked channel%r%rExample: +WCHANJOIN Admin \(Adds/removes you quietly as an owner to 'Admin'.\)%r%rDescription: +WCHANJOIN is used to quietly join and unjoin any locked channel%r[space(13)]as an owner. You need not previously be an owner of a channel nor%r[space(13)]is there any need of control. It just is.%r%rSee Also: +WIPE +WUSER +WOWNER +CHOWN +WDESTROY +LISTCHAN%r[v(lines)]
&H+WENABLE HelpDB=v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using Wizard-Command +WENABLE)]%r[u(%1/center,-----------------------------)]%rSyntax: +WENABLE <Option>%r%rOptions: The following options can be enabled%r%r[u(%1/chanopts)]%r%rExamples: +WENABLE +CHAN \(This would let +CHAN to be used if it was disabled\)%r%rDescription: +WENABLE is used to enable previously disabled options on the com%r[space(13)]system. Nearly every command can be disabled from working in order%r[space(13)]to allow fully compatable systems for various roll playing needs. %r[space(13)]If any options are needed/wanted, email the author and it will try%r[space(13)]to be done next revision.%r%rSee Also: +WDISABLE +WINSTSETQ +WUNINSTSETQ +COMSTATUS +COMINDEX%r[v(lines)]
&H+WADDLOCK HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using Wizard-Command +WADDLOCK)]%r[u(%1/center,------------------------------)]%rSyntax: +WADDLOCK <Channel>=<Options>%r%rOptions: +WADDLOCK <Channel>=<Function(s)> -- establishes lock for channel.%r%rExamples: +WADDLOCK Admin=%%%[hasflag%%%(%%%0,wizard%%%)%%%] \(Sets lock to wizards.\)%r%r*NOTE* You must escape out all ()'s and %[%]'s like shown above for example. %%0 %r[space(7)]is parsed as the user that's being checked and all functionality must %r[space(7)]return a 0 (for failure) or a 1 (for success). If you find a better way %r[space(7)]to set this VIA $-command, notify the author for future revisions.%r%rDescription: +WADDLOCK is used to set a user-defined lock to a given channel. %r[space(13)]All brackets and parenthesis must be escaped out with %% or \\. Any %r[space(13)]lock may be used but must return a 0 or a 1. Error handling can %r[space(13)]handle cases where it does not but the lock may not work the way %r[space(13)]you intended.%r%rSee Also: +WOWNER +WUSER +WCHANJOIN +WDESTROY +WIPE +LISTPRIV%r[v(lines)]
&H+WDISABLE HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using Wizard-Command +WDISABLE)]%r[u(%1/center,------------------------------)]%rSyntax: +WDISABLE <Option>%r%rOptions: The following options can be disabled%r%r[u(%1/chanopts)]%r%rExamples: +WDISABLE +CHAN \(This would disable +CHAN from being used.\)%r%rDescription: +WDISABLE is used to disable options from being used by the public.%r[space(13)]In the above example, +CHAN would be disabled thus removing the%r[space(13)]ability to join/leave public channels using '+CHAN'. This is done %r[space(13)]in the hopes to better generalize the com system for use on %r[space(13)]various platforms. If any further options are desired feel free to %r[space(13)]email the author and he will try to install the desired options %r[space(13)]next revision.%r%rSee Also: +WENABLE +WINSTSETQ +WUNINSTSETQ +COMSTATUS +COMINDEX%r[v(lines)]
&H+WUNINSTSETQ HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using Wizard-Command +WUNINSTSETQ)]%r[u(%1/center,--------------------------------)]%rSyntax: +WUNINSTSETQ%r%rOptions: None%r%rExamples: +WUNINSTSETQ \(Install NON-setq() functionality into commands\)%r%rDescription: This is used to unset setq() functionality in case your system %r[space(13)]does not support setq() functions or if setq() on your system %r[space(13)]happens to be buggy. It ws the authors intent to make this %r[space(13)]compatable with as many MU*'s as possible.%r%rSee Also: +WINSTSETQ +WENABLE +WDISABLE +COMINDEX +COMSTATUS%r[v(lines)]
&H+WINSTSETQ HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using Wizard-Command +WINSTSETQ)]%r[u(%1/center,-------------------------------)]%rSyntax: +WINSTSETQ%r%rOptions: None%r%rExamples: +WINSTSETQ \(Install setq() functionality into com system\)%r%rDescription: +WINSTSETQ is used to install setq() functionality into the com %r[space(13)]system. This is the default as most systems today use setq(), but %r[space(13)]if any desire is done not to use setq() then later revisions of %r[space(13)]MU* make you wish to have setq(), this allows you to install the %r[space(13)]functionality. This options takes up some extra database space %r[space(13)](Say approximately 20K for backups in setq() and non-setq() %r[space(13)]functionality, but it was my intention to make this fully %r[space(13)]standardized.)%r%rSee Also: +WUNINSTSETQ +WENABLE +WDISABLE +COMINDEX +COMSTATUS%r[v(lines)]
&H+ALIAS2 HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using +ALIAS)]%r[u(%1/center,------------)]%r%rDescription: The +ALIAS function is used to define, display, and delete your%r[space(13)]established aliases for your channels. You can have anything as%r[space(13)]an alias from one character to however many you want, though%r[space(13)]having a 50 character alias is a bit silly. You may have the com%r[space(13)]system's pre-defined keys \(like ':'\) as an alias, but to pose you%r[space(13)]will have to type TWO ':''s. One for the alias, one for the %r[space(13)]special pose-feature. You may also put a space between the '=' %r[space(13)]and the ':' to pose.%r%rSee Also: = +COM +QUIET +CONFIG +CHAN +CREATE +CHANJOIN%r[v(lines)]
&H+WUSER2 HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using Wizard-Command +WUSER)]%r[u(%1/center,---------------------------)]%rDescription: +WUSER is used to allow wizards to add and/or remove users from%r[space(13)]any locked channel weither they're owners of it or not. To see %r[space(13)]who is on a given channel, use '+WLIST <Channel>'. To add and/or %r[space(13)]remove users quietly use the /QUIET switch.%r%rSee Also: +WUSER +WLIST +WOWNER +CHOWN +WUNLOCK +LISTCHAN +WCHANJOIN%r[v(lines)]
&H+SETWIZARD2 HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using Wizard-Command +SETWIZARD)]%r[u(%1/center,-------------------------------)]%r%rDescription: +SETWIZARD allows \(the owner of the com system or whoever is %r[space(13)]currently recognized as a wizard\) the ability to specify who a %r[space(13)]wizard is. Ie: The players who get the special commands and %r[space(13)]abilities with the Com System. If this way is%r[space(13)]too confusing or annoying, and you know of a better way, notify %r[space(13)]the author and it shall be installed with the next revision.%r%rSee Also: +SETWIZARD +WENABLE +WDISABLE +WADDLOCK +WINSTSETQ +WUNINSTSETQ%r[v(lines)]
&H HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using +HELP)]%r[u(%1/center,------------)]%rSyntax: +HELP <Option>%r%r+Options: +HELP <Command> -- this is used in the com system to display help. As other%r[space(28)]commands also use '+HELP', it ignores any non-recognized entry.%r%rDescription: The +HELP is used to display help for various functions.%r%rSee Also: HELP +COMINDEX +COMSTATUS%r[v(lines)]
&H+ADDLOCK HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using +ADDLOCK)]%r[u(%1/center,--------------)]%rSyntax: +ADDLOCK <Channel>=<Options>%r%rOptions: +ADDLOCK <Channel>=Attribute1:String1 Attribute2:String2 ... %r[space(9)]AttributeX:StringX%r[space(9)](This will set from one to any number of locks on an owned channel.)%r%rExamples: +ADDLOCK Admin=Sex:female race:human rank:wizard%r[space(10)]\(This will lock the channel 'Admin' to all who are female, have a%r[space(10)]race of human, and who has a rank of wizard. Anyone who can pass %r[space(10)]this lock are able to join and unjoin at will with '+CHANJOIN'\).%r%r[switch(u(wizard,%0),1,*NOTE* Wizards can set locks on *any* locked channel wiether an owner or not.%r%r)]Description: +ADDLOCK is used to give channel owners the ability to set%r[space(13)]locks on channels with total ease. The syntax and working is%r[space(13)]shown above. All locks are based on attributes, and no flag%r[space(13)]locking or other type of lock is available to non-wizards.[switch(u(wizard,%0),1, Wizards can use +WADDLOCK.)]%r%rSee Also: +CREATE +DESTROY +USER +OWNER +WIPE +LISTCHAN +CHANJOIN%r[v(lines)]
&H+ALIAS HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using +ALIAS)]%r[u(%1/center,------------)]%rSyntax: +ALIAS <Options>%r%rOptions: +ALIAS -- used to display which aliases you have for which channels.%r[space(9)]+ALIAS +<Alias> <Channel> -- used to set or modify \(if already %r[space(10)]existing\) an alias for the desired channel.%r[space(9)]+ALIAS -<Alias> -- Used to remove the desired alias.%r[space(9)]+ALIAS CLEAR -- totally removes all aliases you have defined.%r%rExamples: +ALIAS +p Public \(Establishes alias 'p' for channel 'Public'\)%r[space(10)]+ALIAS -p \(Removes alias 'p' from your list\)%r[space(10)]+ALIAS \(Displays all your aliases with corresponding channel\)%r[space(10)]+ALIAS CLEAR \(Totally removes all your stored aliases... *POOF*.\)%r%rTo see enhanced descriptions of the +ALIAS command, type: +HELP +ALIAS2%r[v(lines)]
&H+CHANJOIN HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using +CHANJOIN)]%r[u(%1/center,---------------)]%rSyntax: +CHANJOIN <Option>%r%rOptions: +CHANJOIN <Channel> -- used to join/unjoin the locked channel%r%r*NOTE* You must pass the lock on the channel before being able to use this %r[space(7)]command. You will be notified of failure to pass the lock. Also, if you%r[space(7)]were a prior owner of the channel you leave by '+CHANJOIN', it retains%r[space(7)]this and resets you as an owner when you 'join' it again with%r[space(7)]+CHANJOIN%r%rExamples: +CHANJOIN Admin \(This joins you to channel 'Admin'\)%r%rDescription: +CHANJOIN is used to allow users the freedom of joining and %r[space(13)]leaving locked channels at their leasure if a pre-defined lock %r[space(13)]was set up. The lock is established by a channel owner or by a%r[space(13)]wizard, or administrator.%r%rSee Also: +ADDLOCK +CREATE +USER +OWNER +LISTCHAN +DESTROY +WIPE +QUIET%r[v(lines)]
&H+COM3 HelpDB=v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using +COM: Page 3 of 3)]%r[u(%1/center,-----------------------)]%r%rDescription: The +COM is used for the sending of messages to and from the %r[space(13)]channel system. The various options and examples of them are %r[space(13)]available on pages 1 and 2 by typing +HELP +COM1 and +HELP +COM2. %r[space(13)]All configurations and setup can be seen by typing +HELP +CONFIG. %r[space(13)]Such configurations include setting up your alias \(You can do this%r[space(13)]by hand by typing: &CALIAS me=<Alias> which it will explain in %r[space(13)]detail in +HELP +CONFIG\). LIkewise, setting up your title (done by%r[space(13)]typing &CTITLE me=<Title>\) is also explained well in +HELP %r[space(13)]+CONFIG. As page 1 and 2 explains, the options to +COM is a %r[space(13)]channel, an equals, and a message with some delimiter \(again, %r[space(13)]explained in pages 1 and 2\). If any further help is required, %r[space(13)]notify the author of this system and he will explain it in debth%r[space(13)]along with a future modification to the help for better %r[space(13)]understanding.%r%r[switch(u(%1/wizard,%0),1,For wizard information involving +COM\, type: +HELP +COM4)]%r%rSee Also: = +QUIET +CONFIG +ALIAS +CHAN +CHANJOIN +LISTCHAN +COM +COM2%r[v(lines)]
&H+CHOWN HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using Wizard-Command +CHOWN)]%r[u(%1/center,---------------------------)]%rSyntax: +CHOWN <Channel> <Option>%r%rOptions: +CHOWN Channel +User1 ... UserX -- chowns the locked channel %r[space(9)]establishing one or more users as owners.%r%rExamples: +CHOWN Admin +Seth \(Chowns locked channel 'Admin' to player 'Seth'\)%r%rDescription: +CHOWN allows wizards to chown any locked channel to a list of %r[space(13)]one or more users. This will only work for locked channel and will%r[space(13)]keep the current users on the channel and move old owners to the %r[space(13)]user status. To lock public channels or unlock locked ones, use %r[space(13)]'+WLOCK' and '+WUNLOCK' respectively.%r%rSee Also: +WLOCK +WUNLOCK +WLIST +WUSER +WOWNER +WCHANJOIN%r[v(lines)]
&H+COM4 HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using +COM: Wizard Information)]%r[u(%1/center,------------------------------)]%r%rDescription: Special consideration was implimented for the ^ and _%r[space(13)]options of the +COM command.  If you are OMITED either%r[space(13)]by being excluded or because of a private message,%r[space(13)]you will see on your screen the following:%r[space(20)]\[Channel\] User: <OMIT - EXCLUDED> Message \(If OMITED\)%r[space(20)]\[Channel\] User: <OMIT - PRIVATE> Message \(If PRIVATE\)%r[space(13)]You, as a wizard, will always get all messages on any%r[space(13)]channel you belong to.  I feel no wizard should%r[space(13)]be talked to behind his/her back.  Do make note%r[space(13)]however, that the user doing it is not aware that you%r[space(13)]can see this.  Reveal it on your own decision.%r%rSee Also: = +QUIET +CONFIG +ALIAS +CHAN +CHANJOIN +LISTCHAN +COM +COM2 +COM3%r[v(lines)]
&H+COMINDEX HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using +COMINDEX)]%r[u(%1/center,---------------)]%r[u(%1/doindex)]%r[v(lines)]
&H+CONFIG HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using +CONFIG)]%r[u(%1/center,-------------)]%rSyntax: +CONFIG <Option>%r%rOptions: +CONFIG NOSPOOF=ON/OFF -- Turns nospoof ON or OFF on all channels.%r[space(9)]+CONFIG LASTCHAN=ON/OFF -- Enables '=' to be used for last%r[space(36)]channel spoken on.%r%rExample: +CONFIG NOSPOOF=ON -- turns on nospoof so you will be notified%r[space(33)]of who the spoofer is.%r[space(9)]+CONFIG NOSPOOF=OFF -- turns off nospoof.%r[space(9)]+CONFIG LASTCHAN=ON -- enables lastchannel use of '='%r[space(9)]+CONFIG LASTCHAN=OFF -- disables lastchannel use of '='%r%r*OFFTE* Other configurations are done by hand.%r[space(7)]TITLE -- &CTITLE me=<Title you Want>%r[space(7)]ALIAS -- &CALIAS me=<Alias you want>%r[space(7)]DEFAULT -- &CDEF me=X where X is one of [get(%1/COM-L)] or nothing.%r%rDescription: +CONFIG is used to set the various configurations available for %r[space(13)]the com system. As of now, only two exist. In the future, with%r[space(13)]more revisions, more will be available for the given users. I try%r[space(13)]to design future portability for new options. But then, shouldn't %r[space(13)]everyone? 8\)%r%rSee Also: +COMSTATUS +COMINDEX +ALIAS +COM = +LISTCHAN%r[v(lines)]
&H+DEFAULT HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using +DEFAULT)]%r[u(%1/center,--------------)]%rSyntax: +DEFAULT <Option>%r%rOptions: +DEFAULT <Channel> -- This sets your default channel name.%r%rExample: +DEFAULT Public \(This sets 'Public' to be your default channel.\)%r%r*NOTE* Unless otherwise specified, 'Public' will be your default channel.%r[space(7)]&CDEF me=<arg> -- this establishes your default format for%r[space(7)]speaking on channels.  The default for this is in the form:%r[space(12)][channel] [name(%0)]: Blah-Blah-Blah%r[space(7)]The default can be restored by clearing off your CDEF attribute if%r[space(7)]it exists by typing: &CDEF me%r%rDescription: The +DEFAULT function is used to establish your default channel %r[space(13)]in use with the '=' command and alias system. Help is available %r[space(13)]on both of the options with examples for both.%r%rSee Also: = +ALIAS +COM +CONFIG%r[v(lines)]
&H+COMSTATUS HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using +COMSTATUS)]%r[u(%1/center,----------------)]%rSyntax: +COMSTATUS%r%rOptions: None%r%rExamples: +COMSTATUS \(Gives you valuable information on current configurations\)%r%rDescription: +COMSTATUS is used to see the current version, disabled functions,%r[space(13)]# of channels currently in use \(Locked and Public\) and general%r[space(13)]overall running.  You also see your current configurations%r[space(13)]that you have set.  Currently those are your channel alias,%r[space(13)]title, and default speaking format.%r%rSee Also: +CONFIG +COMINDEX THANKS CHANGES +HELP%r[v(lines)]
&H+HELP HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using +HELP)]%r[u(%1/center,------------)]%rSyntax: +HELP <Option>%r%r+Options: +HELP <Command> -- this is used in the com system to display help. %r[space(29)]As other commands also use '+HELP', it ignores%r[space(29)]any non-recognized entry.%r%rDescription: The +HELP is used to display help for various functions.%r%rSee Also: HELP +COMINDEX +COMSTATUS%r[v(lines)]
&H+LISTPUB HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using +LISTPUB)]%r[u(%1/center,--------------)]%rSyntax: +LISTPUB%r%rOptions: None%r%rExample: +LISTPUB \(Lists all public channels available for current joining\)%r%r*NOTE* These just are current channels and doesn't mean you can't make your own%r[space(7)]unless this option has been disabled. \(See '+COMSTATUS' for settings.\)%r%rDescription: The +LISTPUB is used to list out all currently defined public %r[space(13)]channels. It will also display the number of users currently on%r[space(13)]incase a desire is felt for joining heavilly populated channels.%r[switch(u(%1/wizard,%0),1,[space(13)]Wizards also are able to see non-valid users.%r)]%rSee Also: +COMSTATUS +LISTCHAN +COM +CONFIG +CHAN +CREATE%r[v(lines)]
&H+QUIET HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using +QUIET)]%r[u(%1/center,------------)]%rSyntax: +QUIET <Option>%r%rOptions: +QUIET <Channel> -- this sets/unsets quiet mode on the defined locked%r[space(9)]channel.%r%rExample: +QUIET Admin \(This stops all display and output from channel 'Admin'\)%r[space(9)]+QUIET Admin \(This allows display to once again be seen on 'Admin' %r[space(9)]\(if quieted before\)\)%r%r*NOTE* You will be unable to see what you type on a QUIETED channel, therefore, %r[space(7)]you will be notified of what channel you speak on you are quiet on.%r%rDescription: The +QUIET function is used to supress output on a locked channel %r[space(13)]without the need to leave the channel \(Handy for channels without%r[space(13)]function locks\). As it is a toggle, it will automatically add or%r[space(13)]remove your QUIET status depending if you were set QUIET on that%r[space(13)]given channel before.%r%rSee Also: +CREATE +OWNER +USER +COM = +CONFIG +ADDLOCK +CHANJOIN%r[v(lines)]
&H+WIPE HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using +WIPE)]%r[u(%1/center,-----------)]%rSyntax: +WIPE <Option>%r%rOptions: +WIPE <Channel> -- used to remove non-players from channel you own.[switch(u(%1/wizard,%0),1,%r[space(9)]\(The above is available for all channels by you Mr. Wizard... duh-huh\))]%r%rExamples: +WIPE Coding \(This removes all non-players from the channel 'Coding'\)%r%rDescription: +WIPE is used for the purpose of removing non-players from the%r[space(13)]named channel. How do non-players get on the channel you ask? Well, %r[space(13)]usually by the destruction of the character \(The dreaded @nuke\). %r[space(13)]Testing has been done to eliminate all other chances of non-players %r[space(13)]showing up on channels, but you can only do so much with MUSH code. %r[space(13)]Gimmie C++ anytime.%r%rSee Also: +CREATE +USER +OWNER +ADDLOCK +CHANJOIN +LISTCHAN%r[v(lines)]
&H+WOWNER HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using Wizard-Command +WOWNER)]%r[u(%1/center,----------------------------)]%rSyntax: +WOWNER<Option> <Channel> <Options>%r%rOptions: +WOWNER Channel +User1 ... UserX -- adds one or more owners.%r[space(9)]+WOWNER/QUIET Channel +User1 ... UserX -- adds owners quietly.%r[space(9)]+WOWNER Channel -User1 ... UserX -- removes one or more owners.%r[space(9)]+WOWNER/QUIET Channel -User1 ... UserX -- removes owners quietly.%r%rExamples: +WOWNER Admin +Biff \(Adds owner 'Biff' to 'Admin' for all to see.\)%r[space(10)]+WOWNER/QUIET Admin +Bob \(Adds 'Bob' to channel 'Admin' quietly\)%r[space(10)]+WOWNER Admin -Bob \(Removes 'Bob' from 'Admin' for all to see\)%r[space(10)]+WOWNER/QUIET Admin -Amberyl \(Removes 'Amberyl' quietly from 'Admin'\)%r%rDescription: The +WOWNER command is used to add and/or remove owners with or%r[space(13)]without notification to the members currently on that channel. %r[space(13)]Only wizards can do this command and they do not need to be %r[space(13)]owners of the channel to do so. To see who exists on a given %r[space(13)]channel, use '+WLIST'.%r%rSee Also: +WLIST +WUSER +CHOWN +WUNLOCK +LISTCHAN +WCHANJOIN%r[v(lines)]
&H+WUSER HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using Wizard-Command +WUSER)]%r[u(%1/center,---------------------------)]%rSyntax: +WUSER<Option> <Channel> <Options>%r%rOptions: +WUSER Channel +User1 User2 ... UserX -- add one or more users.%r[space(9)]+WUSER Channel -User1 User2 ... UserX -- remove one or more users.%r[space(9)]+WUSER/QUIET Channel +User1 ... UserX -- adds users w/o notification.%r[space(9)]+WUSER/QUIET Channel -User1 ... UserX -- removes w/o notification.%r%rExamples: +WUSER Admin +Fred Bob \(Adds 'Fred' and 'Bob' to Channel 'Admin' and %r[space(10)]notifies all users on 'Admin' of the adding\)%r[space(10)]+WUSER/QUIET Admin +Ed \(Adds 'Ed' to 'Admin' w/o notification\)%r[space(10)]+WUSER Admin -Fred \(Removes 'Fred' from channel 'Admin' notifying %r[space(10)]all on channel 'Admin'\)%r[space(10)]+WUSER/QUIET Admin -Amberyl \(Removes 'Amberyl' from 'Admin' w/o%r[space(10)]notification.\)%r%rTo see enhanced descriptions of the +WUSER command, type: +HELP +WUSER2%r[v(lines)]
&H\= HelpDB=[v(lines)]%r[u(%1/comtitle)]%r[v(lines)]%r[u(%1/center,Using =: The COM/ALIAS Quick-Macros)]%r[u(%1/center,-----------------------------------)]%rSyntax: =<Options>%r%rOptions: =<Message> -- This displays the message on the default channel.%r[space(20)]\(To establish a default channel, look at +DEFAULT\)%r[space(9)]=<Alias> <Message> -- This displays the message on the specified alias%r[space(20)]\(To establish aliases, look at +ALIAS\)%r%r*NOTE* The '=' will take all the arguments that +COM does for messages%r[space(10)]IE: ~ ' : ; " ^ ! etc... etc...%r[space(10)]Example: =:waves \(Displays on your default channel '\[Default-Channel\] %r[space(20)][name(%0)] waves'\)%r%rExamples: =p Hiya! \(If 'p' was the alias for 'public', the output would be:%r[space(21)]'\[Public\] [name(%0)]: Hiya!'\)%r%rDescription: The '=' is a quick macros for '+COM'. It is also used in junction%r[space(13)]with the alias system \(+HELP +ALIAS\). This gives a user a better %r[space(13)]control of using the channel system and I hope a more relaxed %r[space(13)]feeling for it as well.%r%rSee Also: +COM +CHAN +ALIAS +QUIET +LISTCHAN +CHANJOIN +CREATE%r[v(lines)]
@pemit me=Com: Help installation completed... Installing Alternate DB's....
&WCLOAK AlternateDB=$+wcloak*:@pemit %#=[u(WCLOAKM[setq(0,u(wcloakf,%#,[s(v(0))]))][r(0)],%#,[s(v(0))])];&C-[s(secure(first(v(0))))] [u(WCLOAKS[r(0)])]=[u(WCLOAKDO[gt(match(get([v(O-DB)]/C-[s(v(0))]),v(#)),0)],%0,%#)]
&WPURGE AlternateDB=$+wpurge *:@pemit %#=[u(WPURGEM[setq(0,u(wpurgef,%#,%0))][r(0)],%0)];@dolist [u(WPURGEDO[r(0)])]=&## [v(CH-DB)]=[remove(get([v(CH-DB)]/##),[num(*%0)])]
&WUSRLOCK AlternateDB=$+wusrlock *:&WUSRLIST [u(WUSRLOCK[setq(0,[u(wusrlockf,%#,[setq(1,mid(v(0),1,100))][r(1)],v(0))])][r(0)],r(1))]=[u(WUSRLOCK[match(+ -,[setq(2,mid(v(0),0,1))][r(2)])],r(1),r(2))];@pemit %#=[u(WUSRLOCKM[r(0)],r(1),r(2),v(0))];@lock/u me=last:?*[iter(v(wusrlist),&!##)]
&CHAN AlternateDB=$+cha* +*:@pemit %#=[setq(1,[switch(u(wizard,%#),0,%[[capstr(lcstr(first(v(1))))]%] %N has joined this channel.)])][switch([setq(0,u(cpfunc,%#,%1))][r(0)],00,[switch(u(wizard,%#),1,Com: Channel '[capstr(lcstr(first(v(1))))]' -> Added)],01,Com: ERROR - You are already on Channel '[capstr(lcstr(first(v(1))))]',1*,Com: ERROR - Channel '[capstr(lcstr(first(v(1))))]' is a locked channel)];@dolist [switch(r(0),00,[setinter(lwho(),[get([v(CH-DB)]/[first(v(1))])] [v(#)])])]=@pemit ##=[r(1)];&[secure(first(v(1)))] [u(PLUSCH[r(0)])]=[setunion(get([v(CH-DB)]/[first(v(1))]),v(#))]
&UNCHAN AlternateDB=$+cha* -*:@pemit %#=[switch([setq(0,u(cpfunc,%#,%1))][r(0)],01,[switch(u(wizard,%#),1,Com: Channel '[capstr(lcstr(first(v(1))))]' -> Deleted)],00,Com: ERROR - You are not on Channel '[capstr(lcstr(first(v(1))))]',1*,Com: ERROR - Channel '[capstr(lcstr(first(v(1))))]' is a locked channel)][setq(1,[switch(u(wizard,%#),0,%[[capstr(lcstr(first(v(1))))]%] %N has left this channel.)])];@dolist [switch(r(0),01,[setinter(lwho(),get([v(CH-DB)]/[first(v(1))]))])]=@pemit ##=[r(1)];&[secure(first(v(1)))] [u(MINUSCH[r(0)])]=[setdiff(get([v(CH-DB)]/[first(v(1))]),v(#))]
&USER AlternateDB=$+user * +*:@pemit %#=[setq(0,after(get([v(CH-DB)]/[v(0)]),L))][setq(1,%[[capstr(lcstr(v(0)))]+%] %n has added [u(wordit,[u(clfunc2,v(0),v(1),v(#),r(0))])])][switch([setq(3,u(clfunc,%0,%#,%1,r(0)))][r(3)],0?,Com: ERROR - You have no authority over [switch(match(get([v(CH-DB)]/[v(0)]),L),0,channel,locked channel)] '[capstr(lcstr(v(0)))]'.,?0,Com: ERROR - List validation shows empty name list.)];@dolist [switch(r(3),11,setinter(lwho(),setunion([setq(4,iter(v(1),num(*##)))][r(4)],get([v(CH-DB)]/[v(0)]))))]=@pemit ##=[r(1)];&[switch(r(3),11,secure(v(0)),#)] [v(CH-DB)]=[setdiff(before(get([v(CH-DB)]/[v(0)]),L),r(4))] L [setunion(r(0),setdiff(r(4),#-1))];&[switch(r(3),11,C-[v(0)],#)] [v(O-DB)]=[setdiff(get([v(O-DB)]/C-[v(0)]),r(4))]
&WUSER AlternateDB=$+wuser* * +*:@pemit %#=[setq(0,after(get([v(CH-DB)]/[v(1)]),L))][setq(1,%[[capstr(lcstr(v(1)))]+%] %N has added [u(wordit,[u(clfunc2,v(1),v(2),v(#),r(0))])])][u(WUSERM[match(0010 0011 1010 0110 1110 0111 1011 1111,[setq(2,u(wuserf,%0,%1,%#,%2,r(0)))][r(2)])],%1,%2,%#,r(0))];@dolist [u(WUSERDO[match(1011,r(2))],%2,%#,%1)]=@pemit ##=[r(1)];&[secure(first(v(1)))] [u(WUSERS[r(2)],[v(CH-DB)])]=[setdiff(before(get([v(CH-DB)]/[v(1)]),L),[setq(3,iter(v(2),num(*##)))][r(3)])] L [setunion(r(0),setdiff(r(3),#-1))];&C-[first(v(1))] [u(WUSERS[r(2)],[v(O-DB)])]=[setdiff(get([v(O-DB)]/C-[v(1)]),r(3))]
&WOWNER AlternateDB=$+wowner* * +*:@pemit %#=[setq(0,setunion(before(get([v(CH-DB)]/[v(1)]),L),get([v(O-DB)]/O-[v(1)])))][setq(1,%[[capstr(lcstr(v(1)))]+%] %N has added owner [u(wordit,[u(cofunc2,%1,%2,%#,r(0))])])][u(WOWNER[match(0010 0011 1010 0110 1110 0111 1011 1111,[setq(2,u(wownerf,%0,%1,%#,%2,r(0)))][r(2)])],%1,%2,%#,r(0))];@dolist [u(WUSERDO[match(1011,r(2))],%2,%#,%1)]=@pemit ##=[r(1)];&[secure(v(1))] [u(WOWNERS[r(2)])]=[setunion(r(0),setdiff([setq(3,iter(v(2),num(*##)))][r(3)],#-1))] L [setdiff(after(get([v(CH-DB)]/[v(1)]),L),r(3))]
&WUNUSER AlternateDB=$+wuser* * -*:@pemit %#=[setq(0,after(get([v(CH-DB)]/[v(1)]),L))][setq(1,u(wunuserf,%0,%1,%#,%2,r(0)))][setq(2,%[[capstr(lcstr(v(1)))]+%] %N has deleted [u(wordit,[u(culfunc2,%2,%1,%#,r(0))])])][u(WUNUSERM[match(0010 0011 1010 0110 1110 0111 1011 1111,r(1))],%0,%1,%#,r(0),%2)];@dolist [u(WUNUSERDO[match(1011,r(1))],%1,%2,%#)]=@pemit ##=[r(2)];&[secure(v(1))] [u(WUNUSERS[r(1)],[v(CH-DB)])]=[before(get([v(CH-DB)]/[v(1)]),L)] L [setdiff(r(0),[setq(3,iter(v(2),num(*##)))][r(3)])];&[secure(v(1))] [u(WUNUSERS[r(1)],[v(O-DB)])]=[setdiff(get([v(O-DB)]/[v(1)]),r(3))]
&WUNOWNER AlternateDB=$+wowner* * -*:@pemit %#=[setq(0,setunion(before(get([v(CH-DB)]/[v(1)]),L),get([v(O-DB)]/O-[v(1)])))][setq(1,%[[capstr(lcstr(v(1)))]+%] %N has deleted [u(wordit,[u(colfunc2,%1,%2,%#,r(0))])])][u(WUNOWNERM[match(0010 0011 1010 0110 1110 0111 1011 1111,[setq(3,u(wunuserf,%0,%1,%#,[setq(4,iter(v(2),num(*##)))][r(4)],r(0)))][r(3)])],%1,%2,%#,r(0))];@dolist [u(WUNOWNERDO[match(1011,r(3))],%1,%2,%#)]=@pemit ##=[r(1)];&[secure(v(1))] [u(WUNOWNERS[r(3)])]=[setdiff(r(0),r(4))] L [after(get([v(CH-DB)]/[v(1)]),L)];&O-[secure(v(1))] [switch(r(3),??1?,[v(O-DB)])]=[setdiff(get([v(O-DB)]/O-[v(1)]),r(4))];&[secure(v(1))] [switch(r(3),??1?,[v(O-DB)])]=[setdiff(get([v(O-DB)]/[v(1)]),r(4))];C-[secure(v(1))] [switch(r(3),??1?,[v(O-DB)])]=[setdiff(get([v(O-DB)]/C-[v(1)]),r(4))]
&UNUSER AlternateDB=$+user * -*:@pemit %#=[setq(0,after(get([v(CH-DB)]/[v(0)]),L))][setq(1,%[[capstr(lcstr(v(0)))]+%] %N has deleted [u(wordit,[u(culfunc2,%1,%0,%#,r(0))])])][switch([setq(2,u(culfunc,%0,%1,%#,r(0)))][r(2)],01,Com: ERROR - Validation shows empty user list.,?0,Com: ERROR - You have no authority over locked channel '[capstr(lcstr(v(0)))]'.)];@dolist [switch(r(2),11,setinter(lwho(),get([v(CH-DB)]/[v(0)])))]=@pemit ##=[r(1)];&[switch(r(2),11,secure(v(0)),#)] [v(CH-DB)]=[before(get([v(CH-DB)]/[v(0)]),L)] L [setdiff(r(0),[setq(3,iter(v(1),num(*##)))][r(3)])];&[switch(r(2),11,secure(v(0)),#)] [v(O-DB)]=[setdiff(get([v(O-DB)]/[v(0)]),r(3))]
&OWNER AlternateDB=$+owner * +*:@pemit %#=[setq(0,before(get([v(CH-DB)]/[v(0)]),L))][setq(1,%[[capstr(lcstr(v(0)))]+%] %n has added owner [u(wordit,[u(cofunc2,v(0),v(1),v(#),r(0))])])][switch([setq(2,u(cofunc,v(0),v(#),v(1),r(0)))][r(2)],0?,Com: ERROR - You have no authority over [switch(match(get([v(CH-DB)]/[v(0)]),L),0,channel,locked channel)] '[capstr(lcstr(v(0)))]'.,?0,Com: ERROR - List validation shows empty name list)];@dolist [switch(r(2),11,setinter(lwho(),setunion([setq(3,iter(v(1),num(*##)))][r(3)],get([v(CH-DB)]/[v(0)]))))]=@pemit ##=[r(1)];&[switch(r(2),11,secure(v(0)),#)] [v(CH-DB)]=[setunion(r(0),setdiff(r(3),#-1))] L [setdiff(after(get([v(CH-DB)]/[v(0)]),L),r(3))]
&UNOWNER AlternateDB=$+owner * -*:@pemit %#=[setq(0,before(get([v(CH-DB)]/[v(0)]),L))][setq(1,%[[capstr(lcstr(v(0)))]+%] %N has deleted owner [u(wordit,[u(colfunc2,%0,%1,%#,r(0))])])][switch([setq(2,u(colfunc,%0,%1,%#,r(0)))][r(2)],01,Com: ERROR - Validation shows empty user list,?0,Com: ERROR - You have no authority over locked channel '[capstr(lcstr(v(0)))]')];@dolist [switch(r(2),11,setinter(lwho(),get([v(CH-DB)]/[v(0)])))]=@pemit ##=[r(1)];&[switch(r(2),11,secure(v(0)),#)] [v(CH-DB)]=[setdiff(r(0),[setq(3,iter(v(1),num(*##)))][r(3)])] L [setdiff(after(get([v(CH-DB)]/[v(0)]),L),r(3))];&[switch(r(2),11,O-[v(0)],#)] [v(O-DB)]=[setdiff(get([v(O-DB)]/O-[v(0)]),r(3))];&[switch(r(2),11,secure(v(0)),#)] [v(O-DB)]=[setdiff(get([v(O-DB)]/[v(0)]),r(3))];&[switch(r(2),11,C-[v(0)],#)] [v(O-DB)]=[setdiff(get([v(O-DB)]/C-[v(0)]),r(3))]
&CHOWN AlternateDB=$+chown * +*:@pemit %#=[switch([setq(0,u(chownfunc,%#,%0,%1))][r(0)],111,WIZCom: Channel '[capstr(lcstr(first(v(0))))]' CHOWNED to [switch(gt(words([setq(1,setdiff(iter(v(1),num(*##)),#-1))][r(1)]),0),1,list:%b)][iter(r(1),name(##))],0??,u(ERRORDEF),10?,WIZCom: ERROR - Channel '[capstr(lcstr(first(v(0))))]' is not a locked channel.,110,WIZCom: ERROR - Validation shows empty list)];&[switch(r(0),111,first(v(0)),#)] [v(CH-DB)]=[r(1)] L [setdiff(get([v(CH-DB)]/[first(v(0))]),L [r(1)])];&[switch(r(0),111,O-[first(v(0))],#)] [v(O-DB)]=[setdiff(get([v(O-DB)]/O-[first(v(0))]),r(1))];&[switch(r(0),111,C-[first(v(0))],#)] [v(O-DB)]=[setdiff(get([v(O-DB)]/C-[first(v(0))]),r(1))]
&WLOCK AlternateDB=$+wlock *:@pemit %#=[setq(1,setdiff(iter(edit(rest(v(0)),+,),num(*##)),#-1))][switch([setq(0,u(makefunc,%#,first(%0)))][r(0)],101,WIZCom: Channel '[capstr(lcstr(first(v(0))))]' now a LOCKED channel.%rOwners: [switch(words(r(1)),0,NONE,iter(r(1),[name(##)]\(##\)))],0??,u(ERRORDEF),11?,WIZCom: ERROR - Channel '[capstr(lcstr(first(v(0))))]+' already a locked channel.,100,WIZCom: ERROR - Channel '[capstr(lcstr(first(v(0))))]' non-existant.)];&[switch(r(0),101,first(v(0)),#)] [v(CH-DB)]=[r(1)] L [setdiff(get([v(CH-DB)]/[first(v(0))]),L [r(1)])]
&WUNLOCK AlternateDB=$+wunlock *:@pemit %#=[switch([setq(0,u(makefunc,%#,%0))][r(0)],111,WIZCom: Channel '[capstr(lcstr(first(v(0))))]' now an UNLOCKED channel,0??,u(ERRORDEF),101,WIZCom: ERROR - Channel '[capstr(lcstr(first(v(0))))]' already an unlocked channel,100,WIZCom: ERROR - Channel '[capstr(lcstr(first(v(0))))]' non-existant -> Aborted)];&[switch(r(0),111,first(v(0)),#)] [v(CH-DB)]=[setdiff(get([v(CH-DB)]/[first(v(0))]),L)];&[switch(r(0),111,first(v(0)),#)] [v(O-DB)];&[switch(r(0),111,O-[first(v(0))],#)] [v(O-DB)];&[switch(r(0),111,F-[first(v(0))],#)] [v(O-DB)];&[switch(r(0),111,C-[first(v(0))],#)] [v(O-DB)]
&CREATE AlternateDB=$+create *:@pemit %#=[switch([setq(0,gt(words(get([v(CH-DB)]/[first(v(0))])),0))][r(0)],1,Com: ERROR - Already existing channel list as '[capstr(lcstr(first(v(0))))]',0,Com: Locked channel '[capstr(lcstr(first(v(0))))]' created)];&[switch(r(0),0,secure(first(v(0))),#)] [v(CH-DB)]=[v(#)] L
&DESTROY AlternateDB=$+destroy *:@pemit %#=[switch([setq(0,u(delfunc,%0,%#))][r(0)],0??,Com: ERROR - Non-Existant Channel '[capstr(lcstr(first(v(0))))]+',110,Com: ERROR - You are not an owner of the channel '[capstr(lcstr(first(v(0))))]+'.,10?,Com: ERROR - '[capstr(lcstr(first(v(0))))]' is not a locked channel.)][setq(1,%[[capstr(lcstr(first(v(0))))]+%] %N has *DESTROYED* this channel.)];@dolist [switch(r(0),111,setinter(lwho(),get([v(CH-DB)]/[first(v(0))])))]=@pemit ##=[r(1)];&[switch(r(0),111,first(v(0)),#)] [v(O-DB)];&[switch(r(0),111,first(v(0)),#)] [v(CH-DB)];&[switch(r(0),111,O-[first(v(0))],#)] [v(O-DB)];&[switch(r(0),111,F-[v(0)],#)] [v(O-DB)];&[switch(r(0),111,C-[v(0)],#)] [v(O-DB)]
&WDESTROY AlternateDB=$+wdestroy* *:@pemit %#=[u(ERRREMOVE[setq(0,u(wdelfunc,%1,%#,%0))][r(0)],%0,%1)][setq(1,%[[capstr(lcstr(first(v(1))))]+%] %N has *DESTROYED* this channel.)];@dolist [u(WREMOVE[match(110,r(0))],first(%1))]=@pemit ##=[r(1)];&[u(SREMOVE[r(0)],first(v(1)))] [v(CH-DB)];&[u(SREMOVE[r(0)],O-[first(v(1))])] [v(O-DB)];&[u(SREMOVE[r(0)],first(v(1)))] [v(O-DB)];&[u(SREMOVE[r(0)],F-[first(v(1))])] [v(O-DB)];&[u(SREMOVE[r(0)],C-[first(v(1))])] [v(O-DB)]
&MONUNCON AlternateDB=$+monuncon:@pemit [v(M-DB)]=%N\(%#\) has disconnected: %[[div([setq(0,sub(secs(),convtime(get(%#/last))))][r(0)],3600)]h [div(mod(r(0),3600),60)]m [mod(r(0),60)]s%]
&MONSET AlternateDB=$+monset:@pemit %#=[u(MONSETM[setq(0,u(monaddf,%#))][r(0)])];@forwardlist [v(M-DB)]=[u(MONSET[r(0)],%#)]
&COMSPEAK AlternateDB=$+com *:@pemit %#=[u(COM-ANS[match(11 01 00 10,[setq(0,u(comfunc,%0,%#))][r(0)])],%0,%#)][setq(1,u(comckm,%0))];@dolist [u(COMCK[match(10,r(0))],%0)]=@pemit ##=[u(COM-SPK[r(1)],%0,%#,##)];&D[v(#)] [u(DODEFAULT[gt(match(get([v(O-DB)]/U[v(#)]),LASTCHAN),0)],[v(A-DB)])]=[secure(first(before(v(0),=)))]
&QUICKSPEAK AlternateDB=$=*:@pemit %#=[setq(0,[u(qfunc,%0,%#)]\=[u(qfunc2,%0,%#)])][u(COM-ANS[match(11 01 00 10,[setq(1,u(comfunc,r(0),%#))][r(1)])],r(0),%#)][setq(2,u(comckm,r(0)))];@dolist [u(COMCK[match(10,r(1))],r(0))]=@pemit ##=[u(COM-SPK[r(2)],r(0),%#,##)];&D[v(#)] [u(DODEFAULT[gt(match(get([v(O-DB)]/U[v(#)]),LASTCHAN),0)],[v(A-DB)])]=[secure(first(before(r(0),=)))]
&QUIET AlternateDB=$+quiet *:@pemit %#=[u(QUIET[setq(0,u(quietf,%0,%#))][r(0)],%0,%#)];&[u(QUIETS[r(0)],%0)] [v(O-DB)]=[u(QUIETSET[r(0)],%0,%#)]
&WREMOVE AlternateDB=$+wremove * -*:@pemit %#=[u(WREMM[setq(0,u(wremf,%0,[setq(1,iter(%1,num(*##)))][r(1)],%#))][r(0)],%0,r(1))];&[secure(v(0))] [u(WREMS[r(0)])]=[u(WREMDO[gt(match(get([v(CH-DB)]/[v(0)]),L),0)],%0,r(1))];&[switch(r(0),1*,O-[v(0)],#)] [v(O-DB)]=[setdiff(get([v(O-DB)]/O-[v(0)]),r(1))];&[switch(r(0),1*,[secure(v(0))],#)] [v(O-DB)]=[setdiff(get([v(O-DB)]/[v(0)]),r(1))];[switch(r(0),1*,C-[v(0)],#)] [v(O-DB)]=[setdiff(get([v(O-DB)]/C-[v(0)]),r(1))]
&WIPE AlternateDB=$+wipe *:@pemit %#=[u(WIPEM[setq(0,u(wipef,%0,%#))][r(0)],%0)];&[secure(v(0))] [u(WIPES[gt(match(101 011 111,r(0)),0)])]=[u(WIPEDO[gt(match(get([v(CH-DB)]/[v(0)]),L),0)],%0)];&O-[secure(v(0))] [v(O-DB)]=[setdiff(iter(get([v(O-DB)]/O-[v(0)]),num(*[name(##)])),#-1)];&[secure(v(0))] [v(O-DB)]=[setdiff(iter(get([v(O-DB)]/[v(0)]),num(*[name(##)])),#-1)];&C-[secure(v(0))] [v(O-DB)]=[setdiff(iter(get([v(O-DB)]/C-[v(0)]),num(*[name(##)])),#-1)]
&WADDLOCK AlternateDB=$+waddlock *=*:@pemit %#=[u(WADDLOCKM[setq(0,u(waddlockf,%0,%#))][r(0)],%0)];&[secure(first(v(0)))] [u(WADDLOCKS[eq(words(get([v(CH-DB)]/[first(v(0))])),0)])]=L;&F-[secure(first(v(0)))] [u(WADDLOCKS[r(0)])]=[edit(v(1),$,)]
&ADDLOCK AlternateDB=$+addlock *=*:@pemit %#=[u(ADDLOCKM[setq(0,u(addlockf,%0,%1,%#))][r(0)],%0,%1)];&F-[secure(first(v(0)))] [u(ADDLOCKS[r(0)])]=[u(addlockdo,%0,%1)]
&CHANJOIN AlternateDB=$+chanjoin *:@pemit %#=[setq(0,%[[capstr(lcstr(first(v(0))))]+%] %n has been [switch([setq(1,[gt(match(after(get([v(CH-DB)]/[v(0)]),L),v(#)),0)][gt(match(before(get([v(CH-DB)]/[v(0)]),L),v(#)),0)][gt(match(get([v(O-DB)]/O-[v(0)]),v(#)),0)])][r(1)],000,added to,001,added as an owner to,1??,removed from,01?,removed as an owner from)] this channel.)][u(JOINM[setq(2,u(joinf,%0,%#))][r(2)],%0)];&O-[secure(first(v(0)))] [u(JOIN[r(2)])]=[u(JOINSETO[r(1)],%0,%#)];&[secure(first(v(0)))] [u(JOINS[r(2)])]=[u(JOINSET[r(1)],%0,%#)];@dolist [u(JOINDO[gt(match(110 111,r(2)),0)],%0,%#)]=@pemit ##=[r(0)]
&WCHANJOIN AlternateDB=$+wchanjoin *:@pemit %#=[u(WJOINM[setq(0,u(wjoinf,%0,%#))][r(0)],%0)];&[secure(first(v(0)))] [u(WJOINS[r(0)])]=[u(WJOINDO[gt(match(get([v(CH-DB)]/[v(0)]),v(#)),0)],%0,%#)]
&WDISABLE AlternateDB=$+wdisable *:@pemit %#=[u(WDISABLEM[setq(0,u(ablef,%0,%#))][r(0)],%0)];@dolist [u(WDISABLEDO[r(0)],%0)]=@set me/##=no_command;&DISABLELIST [u(WABLES[r(0)])]=[setunion(v(disablelist),ucstr(v(0)))]
&WENABLE AlternateDB=$+wenable *:@pemit %#=[u(WENABLEM[setq(0,u(ablef,%0,%#))][r(0)],%0)];@dolist [u(WDISABLEDO[r(0)],%0)]=@set me/##=!no_command;&DISABLELIST [u(WABLES[r(0)])]=[setdiff(v(disablelist),ucstr(v(0)))]
&ALIASA AlternateDB=$+alias +* *:@pemit %#=[u(ALA[setq(0,u(AFA,%#,%0,%1))][r(0)],%0,%1)];&A[v(#)] [v(A-DB)]=[u(ASA[r(0)],%0,%#,%1)];&C[v(#)] [v(A-DB)]=[u(ASC[r(0)],%1,%#,%0)]
&ALIASD AlternateDB=$+alias -*:@pemit %#=[u(ALD[setq(0,u(AFD,%#,%0))][r(0)],%0,%1)];&C[v(#)] [v(A-DB)]=[u(ADC[r(0)],%0,%#)];&A[v(#)] [v(A-DB)]=[u(ADA[r(0)],%0,%#,%1)]
&WCLOAK OrigonalDB=$+wcloak*:@pemit %#=[u(WCLOAKM[u(wcloakf,%#,[s(v(0))])],%#,s(v(0)))];&C-[s(secure(first(v(0))))] [u(WCLOAKS[u(wcloakf,%#,s(v(0)))])]=[u(WCLOAKDO[gt(match(get([v(O-DB)]/C-[s(v(0))]),v(#)),0)],%0,%#)]
&WPURGE OrigonalDB=$+wpurge *:@pemit %#=[u(WPURGEM[u(wpurgef,%#,%0)],%0)];@dolist [u(WPURGEDO[u(wpurgef,%#,%0)])]=&## [v(CH-DB)]=[remove(get([v(CH-DB)]/##),[num(*%0)])]
&WUSRLOCK OrigonalDB=$+wusrlock *:&WUSRLIST [u(WUSRLOCK[u(wusrlockf,%#,mid(v(0),1,100),v(0))],mid(v(0),1,100))]=[u(WUSRLOCK[match(+ -,mid(v(0),0,1))],mid(v(0),1,100),mid(v(0),0,1))];@pemit %#=[u(WUSRLOCKM[u(wusrlockf,%#,mid(v(0),1,100),v(0))],mid(v(0),1,100),mid(v(0),0,1),v(0))];@lock/u me=last:?*[iter(v(wusrlist),&!##)]
&CHAN OrigonalDB=$+cha* +*:@pemit *%N=[switch([u(cpfunc,%#,%1)],00,[switch(u(wizard,%#),1,Com: Channel '[capstr(lcstr(first(v(1))))]' -> Added)],01,Com: ERROR - You are already on Channel '[capstr(lcstr(first(v(1))))]',1*,Com: ERROR - Channel '[capstr(lcstr(first(v(1))))]' is a locked channel)];@dolist [switch([u(cpfunc,%#,%1)],00,[setinter(lwho(),[get([v(CH-DB)]/[first(v(1))])] [v(#)])])]=@pemit ##=[switch(u(wizard,%#),0,%[[capstr(lcstr(first(v(1))))]%] %N has joined this channel.)];&[secure(first(v(1)))] [u(PLUSCH[u(cpfunc,%#,%1)])]=[setunion(get([v(CH-DB)]/[first(v(1))]),v(#))]
&UNCHAN OrigonalDB=$+cha* -*:@dolist [switch([u(cpfunc,v(#),first(v(1)))],01,[setinter(lwho(),get([v(CH-DB)]/[first(v(1))]))])]=@pemit ##=[switch(u(wizard,%#),0,%[[capstr(lcstr(first(v(1))))]%] %N has left this channel.)];@pemit %#=[switch([gt(match(get([v(CH-DB)]/[first(v(1))]),L),0)][gt(match(get([v(CH-DB)]/[first(v(1))]),v(#)),0)],01,[switch(u(wizard,%#),1,Com: Channel '[capstr(lcstr(first(v(1))))]' -> Deleted)],00,Com: ERROR - You are not on Channel '[capstr(lcstr(first(v(1))))]'.,1*,Com: ERROR - Channel '[capstr(lcstr(first(v(1))))]' is a locked channel.)];&[secure(first(v(1)))] [u(MINUSCH[u(cpfunc,%#,%1)])]=[setdiff(get([v(CH-DB)]/[first(v(1))]),v(#))]
&USER OrigonalDB=$+user * +*:&T[v(#)] [v(F-DB)]=[after(get([v(CH-DB)]/[v(0)]),L)];@dolist [switch([u(clfunc,v(0),v(#),v(1),v(T[v(#)]))],11,[setinter(lwho(),setunion(iter(v(1),num(*##)) ,get([v(CH-DB)]/[v(0)])))])]=@pemit ##=\[[capstr(lcstr(v(0)))]+\] %N has added [u(wordit,[u(clfunc2,v(0),v(1),v(#),v(T[v(#)]))])];@pemit %#=[switch([u(clfunc,v(0),v(#),v(1),v(T[v(#)]))],0?,Com: ERROR - You have no authority over [switch(match(get([v(CH-DB)]/[v(0)]),L),0,channel,locked channel)] '[capstr(lcstr(v(0)))]'.,?0,Com: ERROR - List validation shows empty name list.)];&[switch([u(clfunc,v(0),v(#),v(1),v(T[v(#)]))],11,[secure(v(0))],#)] [v(CH-DB)]=[setdiff(before(get([v(CH-DB)]/[v(0)]),L),iter(v(1),num(*##)))] L [setunion(v(T[v(#)]),setdiff(iter(v(1),num(*##)),#-1))];&[switch(u(clfunc,%0,%#,%1,v(T[v(#)])),11,C-[v(0)],#)] [v(O-DB)]=[setdiff(get([v(O-DB)]/C-[v(0)]),iter(v(1),num(*##)))]
&WUSER OrigonalDB=$+wuser* * +*:&T[v(#)] [v(F-DB)]=[after(get([v(CH-DB)]/[v(1)]),L)];@pemit %#=[u(WUSERM[match(0010 0011 1010 0110 1110 0111 1011 1111,u(wuserf,%0,%1,%#,%2,v(T[v(#)])))],%1,%2,%#,[v(T[V(#)])])];@dolist [u(WUSERDO[match(1011,u(wuserf,%0,%1,%#,%2,v(T[v(#)])))],%2,%#,%1)]=@pemit ##=%[[capstr(lcstr(v(1)))]+%] %N has added [u(wordit,[u(clfunc2,v(1),v(2),v(#),v(T[v(#)]))])];&[secure(first(v(1)))] [u(WUSERS[u(wuserf,%0,%1,%#,%2,v(T[v(#)]))],[v(CH-DB)])]=[setdiff(before(get([v(CH-DB)]/[v(1)]),L),iter(v(2),num(*##)))] L [setunion(v(T[v(#)]),setdiff(iter(v(2),num(*##)),#-1))];&C-[first(v(1))] [u(WUSERS[u(wuserf,%0,%1,%#,%2,v(T[v(#)]))],[v(O-DB)])]=[setdiff(get([v(O-DB)]/C-[v(1)]),iter(v(2),num(*##)))]
&WOWNER OrigonalDB=$+wowner* * +*:&T[v(#)] [v(F-DB)]=[setunion(get([v(O-DB)]/O-[v(1)]),before(get([v(CH-DB)]/[v(1)]),L))];@pemit %#=[u(WOWNER[match(0010 0011 1010 0110 1110 0111 1011 1111,u(wownerf,%0,%1,%#,%2,v(T[v(#)])))],%1,%2,%#,v(T[v(#)]))];@dolist [u(WUSERDO[match(1011,u(wownerf,%0,%1,%#,%2,v(T[v(#)])))],%2,%#,%1)]=@pemit ##=%[[capstr(lcstr(v(1)))]+%] %N has added owner [u(wordit,[u(cofunc2,%1,%2,%#,v(T[v(#)]))])];&[secure(v(1))] [u(WOWNERS[u(wownerf,%0,%1,%#,%2,v(T[v(#)]))])]=[setunion(v(T[v(#)]),setdiff(iter(v(2),num(*##)),#-1))] L [setdiff(after(get([v(CH-DB)]/[v(1)]),L),iter(v(2),num(*##)))]
&WUNUSER OrigonalDB=$+wuser* * -*:&T[v(#)] [v(F-DB)]=[after(get([v(CH-DB)]/[v(1)]),L)];@pemit %#=[u(WUNUSERM[match(0010 0011 1010 0110 1110 0111 1011 1111,u(wunuserf,%0,%1,%#,%2,v(T[v(#)])))],%0,%1,%#,v(T[v(#)]),%2)];@dolist [u(WUNUSERDO[gt(match(1011,u(wunuserf,%0,%1,%#,%2,v(T[v(#)]))),0)],%1,%2,%#)]=@pemit ##=%[[capstr(lcstr(v(1)))]+%] %N has deleted [u(wordit,[u(culfunc2,%2,%1,%#,v(T[v(#)]))])];&[secure(v(1))] [u(WUNUSERS[u(wunuserf,%0,%1,%#,%2,v(T[v(#)]))],[v(CH-DB)])]=[before(get([v(CH-DB)]/[v(1)]),L)] L [setdiff(v(T[v(#)]),iter(v(2),num(*##)))];&[secure(v(1))] [u(WUNUSERS[u(wunuserf,%0,%1,%#,%2,v(T[v(#)]))],[v(O-DB)])]=[setdiff(get([v(O-DB)]/[v(1)]),iter(v(2),num(*##)))]
&WUNOWNER OrigonalDB=$+wowner* * -*:&T[v(#)] [v(F-DB)]=[setunion(before(get([v(CH-DB)]/[v(1)]),L),get([v(O-DB)]/O-[v(1)]))];@pemit %#=[u(WUNOWNERM[match(0010 0011 1010 0110 1110 0111 1011 1111,u(wunuserf,%0,%1,%#,iter(v(2),num(*##)),v(T[v(#)])))],%1,%2,%#,v(T[v(#)]))];@dolist [u(WUNOWNERDO[match(1011,u(wunuserf,%0,%1,%#,iter(v(2),num(*##)),v(T[v(#)])))],%1,%2,%#)]=@pemit ##=%[[capstr(lcstr(v(1)))]+%] %N has deleted [u(wordit,[u(colfunc2,%1,%2,%#,v(T[v(#)]))])];&[secure(v(1))] [u(WUNOWNERS[u(wunuserf,%0,%1,%#,iter(v(2),num(*##)),v(T[v(#)]))])]=[setdiff(v(T[v(#)]),iter(v(2),num(*##)))] L [after(get([v(CH-DB)]/[v(1)]),L)];&O-[secure(v(1))] [switch(u(wunuserf,%0,%1,%#,iter(v(2),num(*##)),v(T[v(#)])),??1?,[v(O-DB)])]=[setdiff(get([v(O-DB)]/O-[v(1)]),iter(v(2),num(*##)))];&[secure(v(1))] [switch(u(wunuserf,%0,%1,%#,iter(v(2),num(*##)),v(T[v(#)])),??1?,[v(O-DB)])]=[setdiff(get([v(O-DB)]/[v(1)]),iter(v(2),num(*##)))];&C-[secure(v(1))] [switch(u(wunuserf,%0,%1,%#,iter(v(2),num(*##)),v(T[v(#)])),??1?,[v(O-DB)])]=[setdiff(get([v(O-DB)]/C-[v(1)]),iter(v(2),num(*##)))]
&UNUSER OrigonalDB=$+user * -*:&T[v(#)] [v(F-DB)]=[after(get([v(CH-DB)]/[v(0)]),L)];@dolist [switch([u(culfunc,%0,%1,%#,v(T[V(#)]))],11,[setinter(lwho(),get([v(CH-DB)]/[v(0)]))])]=@pemit ##=\[[capstr(lcstr(v(0)))]+\] %N has deleted [u(wordit,[u(culfunc2,%1,%0,%#,v(T[v(#)]))])];@pemit %#=[switch([u(culfunc,%0,%1,%#,v(T[v(#)]))],01,Com: ERROR - Validation shows no user on channel.,?0,Com: ERROR - You have no authority over locked channel '[capstr(lcstr(v(0)))]'.)];&[switch([u(culfunc,%0,%1,%#,v(T[v(#)]))],11,[secure(v(0))],#)] [v(CH-DB)]=[before(get([v(CH-DB)]/[v(0)]),L)] L [setdiff(v(T[v(#)]),iter(v(1),num(*##)))];&[switch(u(culfunc,%0,%1,%#,v(T[v(#)])),11,secure(v(0)),#)] [v(O-DB)]=[setdiff(get([v(O-DB)]/[v(0)]),iter(v(1),num(*##)))]
&OWNER OrigonalDB=$+owner * +*:&T[v(#)] [v(F-DB)]=[before(get([v(CH-DB)]/[v(0)]),L)];@dolist [switch([u(cofunc,v(0),v(#),v(1),v(T[v(#)]))],11,[setinter(lwho(),setunion(iter(v(1),num(*##)),get([v(CH-DB)]/[v(0)])))])]=@pemit ##=\[[capstr(lcstr(v(0)))]+\] %N has added owner [u(wordit,[u(cofunc2,v(0),v(1),v(#),v(T[v(#)]))])];@pemit %#=[switch([u(cofunc,v(0),v(#),v(1),v(T[v(#)]))],0?,Com: ERROR - You have no authority over [switch(match(get([v(CH-DB)]/[v(0)]),L),0,channel,locked channel)] '[capstr(lcstr(v(0)))]'.,?0,Com: ERROR - List validation shows empty name list.)];&[switch([u(cofunc,%0,%#,%1,v(T[v(#)]))],11,[secure(v(0))],#)] [v(CH-DB)]=[setunion(v(T[v(#)]),setdiff(iter(v(1),num(*##)),#-1))] L [setdiff(after(get([v(CH-DB)]/[v(0)]),L),iter(v(1),num(*##)))]
&UNOWNER OrigonalDB=$+owner * -*:&T[v(#)] [v(F-DB)]=[before(get([v(CH-DB)]/[v(0)]),L)];@dolist [switch([u(colfunc,%0,%1,%#,v(T[v(#)]))],11,[setinter(lwho(),get([v(CH-DB)]/[v(0)]))])]=@pemit ##=\[[capstr(lcstr(v(0)))]+\] %N has deleted owner [u(wordit,[u(colfunc2,%0,%1,%#,v(T[v(#)]))])];@pemit %#=[switch([u(colfunc,%0,%1,%#,v(T[v(#)]))],01,Com: ERROR - Validation shows no user on channel.,?0,Com: ERROR - You have no authority over locked channel '[capstr(lcstr(v(0)))]'.)];&[switch([u(colfunc,%0,%1,%#,v(T[v(#)]))],11,[secure(v(0))],#)] [v(CH-DB)]=[setdiff(v(T[v(#)]),iter(v(1),num(*##)))] L [setdiff(after(get([v(CH-DB)]/[v(0)]),L),iter(v(1),num(*##)))];&[switch(u(colfunc,%0,%1,%#,v(T[v(#)])),11,O-[v(0)],#)] [v(O-DB)]=[setdiff(get([v(O-DB)]/O-[v(0)]),iter(v(1),num(*##)))];&[switch(u(colfunc,%0,%1,%#,v(T[v(#)])),11,[secure(v(0))],#)] [v(O-DB)]=[setdiff(get([v(O-DB)]/[v(0)]),iter(v(1),num(*##)))];&[switch(u(colfunc,%0,%1,%#,v(T[v(#)])),11,C-[secure(v(0))],#)] [v(O-DB)]=[setdiff(get([v(O-DB)]/C-[v(0)]),iter(v(1),num(*##)))]
&CHOWN OrigonalDB=$+chown * +*:@pemit %#=[switch(u(chownfunc,%#,%0,%1),111,WIZCom: Channel '[capstr(lcstr(first(v(0))))]' CHOWNED to [switch(gt(words(setdiff(iter(v(1),num(*##)),#-1)),0),1,list:%b)][iter(v(1),switch(num(*##),#-1,,name(*##)))],0??,u(ERRORDEF),10?,WIZCom: ERROR - Channel '[capstr(lcstr(first(v(0))))]' is not a locked channel.,110,WIZCom: ERROR - Validation shows empty list.)];&[switch(u(chownfunc,%#,%0,%1),111,[first(v(0))],#)] [v(CH-DB)]=[setdiff(iter(v(1),num(*##)),#-1)] L [setdiff(get([v(CH-DB)]/[first(v(0))]),L [iter(v(1),num(*##))])];&[switch(u(chownfunc,%#,%0,%1),111,O-[first(v(0))],#)] [v(O-DB)]=[setdiff(get([v(O-DB)]/O-[first(v(0))]),iter(v(1),num(*##)))];&[switch(u(chownfunc,%#,%0,%1),111,C-[first(v(0))],#)] [v(O-DB)]=[setdiff(get([v(O-DB)]/C-[first(v(0))]),iter(v(1),num(*##)))]
&WLOCK OrigonalDB=$+wlock *:&T[v(#)] [v(F-DB)]=[setdiff(iter(edit(rest(v(0)),+,),num(*##)),#-1)];@pemit %#=[switch(u(makefunc,%#,first(%0)),101,WIZCom: Channel '[capstr(lcstr(first(v(0))))]' now a LOCKED channel%rOwners: [switch(words(v(T[v(#)])),0,NONE,iter(v(T[v(#)]),[name(##)]\(##\)))],0??,u(ERRORDEF),11?,WIZCom: ERROR - Channel '[capstr(lcstr(first(v(0))))]+' already a locked channel.,100,WIZCom: ERROR - Channel '[capstr(lcstr(first(v(0))))]' non-existant.)];&[switch(u(makefunc,%#,first(%0)),101,[first(v(0))],#)] [v(CH-DB)]=[v(T[v(#)])] L [setdiff(get([v(CH-DB)]/[first(v(0))]),L [v(T[v(#)])])]
&WUNLOCK OrigonalDB=$+wunlock *:@pemit %#=[switch(u(makefunc,%#,%0),111,WIZCom: Channel '[capstr(lcstr(first(v(0))))]' now an UNLOCKED channel,0??,u(ERRORDEF),101,WIZCom: ERROR - Channel '[capstr(lcstr(first(v(0))))]' already an unlocked channel.,100,WIZCom: ERROR - Channel '[capstr(lcstr(first(v(0))))]' non-existant.)];&[switch(u(makefunc,%#,%0),111,[first(v(0))],#)] [v(CH-DB)]=[setdiff(get([v(CH-DB)]/[first(v(0))]),L)];&[switch(u(makefunc,%#,%0),111,O-[first(v(0))],#)] [v(O-DB)];&[switch(u(makefunc,%#,%0),111,first(v(0)),#)] [v(O-DB)];&[switch(u(makefunc,%#,%0),111,C-[first(v(0))],#)] [v(O-DB)];&[switch(u(makefunc,%#,%0),111,F-[first(v(0))],#)] [v(O-DB)];&[switch(u(makefunc,%#,%0),111,first(v(0)),#)] [v(CH-DB)]
&CREATE OrigonalDB=$+create *:@pemit %#=[switch([gt(words(get([v(CH-DB)]/[first(v(0))])),0)],1,Com: ERROR - Already existing channel listed as '[capstr(lcstr(first(v(0))))]'.,0,Com: Locked Channel '[capstr(lcstr(first(v(0))))]' Created)];&[switch(words(get([v(CH-DB)]/[first(v(0))])),0,[secure(first(v(0)))],#)] [v(CH-DB)]=[v(#)] L
&DESTROY OrigonalDB=$+destroy *:@dolist [switch(u(delfunc,%0,%#),111,[setinter(lwho(),get([v(CH-DB)]/[first(v(0))]))])]=@pemit ##=\[[capstr(lcstr(first(v(0))))]+\] %N has *DESTROYED* this channel.;@wait 1=&[switch(u(delfunc,%0,%#),111,[first(v(0))],#)] [v(O-DB)]=;@pemit %#=[switch(u(delfunc,%0,%#),0??,Com: ERROR - Non-Existant Channel '[capstr(lcstr(first(v(0))))]+',110,Com: ERROR - You are not an owner of the channel '[capstr(lcstr(first(v(0))))]+'.,10?,Com: ERROR - '[capstr(lcstr(first(v(0))))]' is not a locked channel.)];&[switch(u(delfunc,%0,%#),111,first(v(0)))] [v(CH-DB)];&[switch(u(delfunc,%0,%#),111,O-[first(v(0))],#)] [v(O-DB)];&[switch(u(delfunc,%0,%#),111,F-[first(v(0))])] [v(O-DB)];&[switch(u(delfunc,%0,%#),111,first(v(0)))] [v(O-DB)];&[switch(u(delfunc,%0,%#),111,C-[first(v(0))])] [v(O-DB)]
&WDESTROY OrigonalDB=$+wdestroy* *:@dolist [u(WREMOVE[match(110,u(wdelfunc,%1,%#,%0))],first(%1))]=@pemit ##=\[[capstr(lcstr(first(v(1))))]+\] %N has *DESTROYED* this channel.;@wait 1=&[u(SREMOVE[u(wdelfunc,%1,%#,%0)],[first(v(1))])] [v(O-DB)]=;@pemit %#=[u(ERRREMOVE[u(wdelfunc,%1,%#,%0)],%0,%1)];&[u(SREMOVE[u(wdelfunc,%1,%#,%0)],first(v(1)))] [v(CH-DB)];&[u(SREMOVE[u(wdelfunc,%1,%#,%0)],O-[first(v(1))])] [v(O-DB)];&[u(SREMOVE[u(wdelfunc,%1,%#,%0)],first(v(1)))] [v(O-DB)];&[u(SREMOVE[u(wdelfunc,%1,%#,%0)],F-[first(v(1))])] [v(O-DB)];&[u(SREMOVE[u(wdelfunc,%1,%#,%0)],C-[first(v(1))])] [v(O-DB)]
&MONUNCON OrigonalDB=$+monuncon:@pemit [v(M-DB)]=%N\(%#\) has disconnected: \[[div(sub(secs(),convtime(get(%#/last))),3600)]h [div(mod(sub(secs(),convtime(get(%#/last))),3600),60)]m [mod(sub(secs(),convtime(get(%#/last))),60)]s\]
&MONSET OrigonalDB=$+monset:@pemit %#=[u(MONSETM[u(monaddf,%#)])];@forwardlist [v(M-DB)]=[u(MONSET[u(monaddf,%#)],%#)]
&COMSPEAK OrigonalDB=$+com *:@dolist [u(COMCK[match(10,u(comfunc,%0,%#))],%0)]=@pemit ##=[u(COM-SPK[u(comckm,%0)],%0,%#,##)];@pemit %#=[u(COM-ANS[match(11 01 00 10,u(comfunc,%0,%#))],%0,%#)];&D[v(#)] [u(DODEFAULT[gt(match(get([v(O-DB)]/U[v(#)]),LASTCHAN),0)],[v(A-DB)])]=[secure(first(before(v(0),=)))]
&QUICKSPEAK OrigonalDB=$=*:&T[v(#)] me=[u(qfunc,%0,%#)]\=[u(qfunc2,%0,%#)];@dolist [u(COMCK[match(10,u(comfunc,[v(T[v(#)])],%#))],[v(T[v(#)])],%#)]=@pemit ##=[u(COM-SPK[u(comckm,[v(T[v(#)])])],[v(T[v(#)])],%#,##)];@pemit %#=[u(COM-ANS[match(11 01 00 10,u(comfunc,[v(T[v(#)])],%#))],[v(T[v(#)])],%#)];&D[v(#)] [u(DODEFAULT[gt(match(get([v(O-DB)]/U[v(#)]),LASTCHAN),0)],[v(A-DB)])]=[secure(first(before(v(T[v(#)]),=)))]
&QUIET OrigonalDB=$+quiet *:@pemit %#=Com: [u(QUIET[u(quietf,%0,%#)],%0,%#)];&[u(QUIETS[u(quietf,%0,%#)],%0)] [v(O-DB)]=[u(QUIETSET[u(quietf,%0,%#)],%0,%#)]
&WREMOVE OrigonalDB=$+wremove * -*:@pemit %#=[u(WREMM[u(wremf,%0,iter(%1,num(*##)),%#)],%0,iter(%1,num(*##)))];&[secure(v(0))] [u(WREMS[u(wremf,%0,iter(%1,num(*##)),%#)])]=[u(WREMDO[gt(match(get([v(CH-DB)]/[v(0)]),L),0)],%0,iter(%1,num(*##)))];&[switch(u(wremf,%0,iter(%1,num(*##)),%#),1*,O-[v(0)],#)] [v(O-DB)]=[setdiff(get([v(O-DB)]/O-[v(0)]),iter(%1,num(*##)))];&[switch(u(wremf,%0,iter(%1,num(*##)),%#),1*,[secure(v(0))],#)] [v(O-DB)]=[setdiff(get([v(O-DB)]/[v(0)]),iter(%1,num(*##)))];&[switch(u(wremf,%0,iter(%1,num(*##)),%#),1*,C-[v(0)],#)] [v(O-DB)]=[setdiff(get([v(O-DB)]/[v(0)]),iter(%1,num(*##)))]
&WIPE OrigonalDB=$+wipe *:@pemit %#=[u(WIPEM[u(wipef,%0,%#)],%0)];&[secure(v(0))] [u(WIPES[gt(match(101 011 111,u(wipef,%0,%#)),0)])]=[u(WIPEDO[gt(match(get([v(CH-DB)]/[v(0)]),L),0)],%0)];&O-[secure(v(0))] [v(O-DB)]=[setdiff(iter(get([v(O-DB)]/O-[v(0)]),num(*[name(##)])),#-1)];&[secure(v(0))] [v(O-DB)]=[setdiff(iter(get([v(O-DB)]/[v(0)]),num(*[name(##)])),#-1)];&C-[secure(v(0))] [v(O-DB)]=[setdiff(iter(get([v(O-DB)]/O-[v(0)]),num(*[name(##)])),#-1)]
&WADDLOCK OrigonalDB=$+waddlock *=*:@pemit %#=[u(WADDLOCKM[u(waddlockf,%0,%#)],%0)];&[secure(first(v(0)))] [u(WADDLOCKS[eq(words(get([v(CH-DB)]/[first(v(0))])),0)])]=L;&F-[secure(first(v(0)))] [u(WADDLOCKS[u(waddlockf,%0,%#)])]=[edit(v(1),$,)]
&ADDLOCK OrigonalDB=$+addlock *=*:@pemit %#=[u(ADDLOCKM[u(addlockf,%0,%1,%#)],%0,%1)];&F-[secure(first(v(0)))] [u(ADDLOCKS[u(addlockf,%0,%1,%#)])]=[u(addlockdo,%0,%1)]
&CHANJOIN OrigonalDB=$+chanjoin *:&T[v(#)] [v(F-DB)]=[gt(match(after(get([v(CH-DB)]/[v(0)]),L),v(#)),0)][gt(match(before(get([v(CH-DB)]/[v(0)]),L),v(#)),0)][gt(match(get([v(O-DB)]/O-[v(0)]),v(#)),0)];@pemit %#=[u(JOINM[u(joinf,%0,%#)],%0)];@dolist [u(JOINDO[gt(match(110 111,u(joinf,%0,%#)),0)],%0,%#)]=@pemit ##=%[[capstr(lcstr(first(v(0))))]+%] %N has been [switch(v(T[v(#)]),000,added to,001,added as an owner to,1??,removed from,01?,removed as an owner from)] this channel.;&O-[secure(first(v(0)))] [u(JOIN[u(joinf,%0,%#)])]=[u(JOINSETO[v(T[v(#)])],%0,%#)];&[secure(first(v(0)))] [u(JOINS[u(joinf,%0,%#)])]=[u(JOINSET[v(T[v(#)])],%0,%#)]
&WCHANJOIN OrigonalDB=$+wchanjoin *:@pemit %#=[u(WJOINM[u(wjoinf,%0,%#)],%0)];&[secure(first(v(0)))] [u(WJOINS[u(wjoinf,%0,%#)])]=[u(WJOINDO[gt(match(get([v(CH-DB)]/[v(0)]),v(#)),0)],%0,%#)]
&WDISABLE OrigonalDB=$+wdisable *:@pemit %#=[u(WDISABLEM[u(ablef,%0,%#)],%0)];@dolist [u(WDISABLEDO[u(ablef,%0,%#)],%0)]=@set me/##=no_command;&DISABLELIST [u(WABLES[u(ablef,%0,%#)])]=[setunion(v(disablelist),ucstr(v(0)))]
&WENABLE OrigonalDB=$+wenable *:@pemit %#=[u(WENABLEM[u(ablef,%0,%#)],%0)];@dolist [u(WDISABLEDO[u(ablef,%0,%#)],%0)]=@set me/##=!no_command;&DISABLELIST [u(WABLES[u(ablef,%0,%#)])]=[setdiff(v(enablelist),ucstr(v(0)))]
&ALIASA OrigonalDB=$+alias +* *:&T[V(#)] [v(F-DB)]=[u(AFA,%#,%0,%1)];@pemit %#=[u(ALA[v(T[v(#)])],%0,%1)];&A[v(#)] [v(A-DB)]=[u(ASA[v(T[v(#)])],%0,%#,%1)];&C[v(#)] [v(A-DB)]=[u(ASC[v(T[v(#)])],%1,%#,%0)];&T[v(#)] [v(F-DB)]
&ALIASD OrigonalDB=$+alias -*:&T[v(#)] [v(F-DB)]=[u(AFD,%#,%0)];@pemit %#=[u(ALD[v(T[v(#)])],%0,%1)];&C[v(#)] [v(A-DB)]=[u(ADC[v(T[v(#)])],%0,%#)];&A[v(#)] [v(A-DB)]=[u(ADA[v(T[v(#)])],%0,%#,%1)];@wait 0=&T[v(#)] [v(F-DB)]
@pemit me=Com: Alternate databases completed.... Installing MAIN...
&HELP ComSystem=$+help *:@pemit %#=[u(DOHELP[u(helpf,%0,%#)],%0,%#)]
&WPURGE ComSystem=$+wpurge *:@pemit %#=[u(WPURGEM[setq(0,u(wpurgef,%#,%0))][r(0)],%0)];@dolist [u(WPURGEDO[r(0)])]=&## [v(CH-DB)]=[remove(get([v(CH-DB)]/##),[num(*%0)])]
&WERRORSET ComSystem=$+werrorset*:@pemit %#=[u(ERRORSETM[u(errorsetf,%#,s(%0))],s(%0))];&ERRORDEF [v(F-DB)]=[switch(or(eq(words(v(0)),0),match(RESET,s(%0))),1,Huh? %%b\\\(Type "help" for help.\\\),edit(s(%0),$,))]
&WCLOAK ComSystem=$+wcloak*:@pemit %#=[u(WCLOAKM[setq(0,u(wcloakf,%#,[s(v(0))]))][r(0)],%#,[s(v(0))])];&C-[s(secure(first(v(0))))] [u(WCLOAKS[r(0)])]=[u(WCLOAKDO[gt(match(get([v(O-DB)]/C-[s(v(0))]),v(#)),0)],%0,%#)]
&WUSRLOCK ComSystem=$+wusrlock *:&WUSRLIST [u(WUSRLOCK[setq(0,[u(wusrlockf,%#,[setq(1,mid(v(0),1,100))][r(1)],v(0))])][r(0)],r(1))]=[u(WUSRLOCK[match(+ -,[setq(2,mid(v(0),0,1))][r(2)])],r(1),r(2))];@pemit %#=[u(WUSRLOCKM[r(0)],r(1),r(2),v(0))];@lock/u me=last:?*[iter(v(wusrlist),&!##)]
&CHAN ComSystem=$+cha* +*:@pemit %#=[setq(1,[switch(u(wizard,%#),0,%[[capstr(lcstr(first(v(1))))]%] %N has joined this channel.)])][switch([setq(0,u(cpfunc,%#,%1))][r(0)],00,[switch(u(wizard,%#),1,Com: Channel '[capstr(lcstr(first(v(1))))]' -> Added)],01,Com: ERROR - You are already on Channel '[capstr(lcstr(first(v(1))))]',1*,Com: ERROR - Channel '[capstr(lcstr(first(v(1))))]' is a locked channel)];@dolist [switch(r(0),00,[setinter(lwho(),[get([v(CH-DB)]/[first(v(1))])] [v(#)])])]=@pemit ##=[r(1)];&[secure(first(v(1)))] [u(PLUSCH[r(0)])]=[setunion(get([v(CH-DB)]/[first(v(1))]),v(#))]
&UNCHAN ComSystem=$+cha* -*:@pemit %#=[switch([setq(0,u(cpfunc,%#,%1))][r(0)],01,[switch(u(wizard,%#),1,Com: Channel '[capstr(lcstr(first(v(1))))]' -> Deleted)],00,Com: ERROR - You are not on Channel '[capstr(lcstr(first(v(1))))]',1*,Com: ERROR - Channel '[capstr(lcstr(first(v(1))))]' is a locked channel)][setq(1,[switch(u(wizard,%#),0,%[[capstr(lcstr(first(v(1))))]%] %N has left this channel.)])];@dolist [switch(r(0),01,[setinter(lwho(),get([v(CH-DB)]/[first(v(1))]))])]=@pemit ##=[r(1)];&[secure(first(v(1)))] [u(MINUSCH[r(0)])]=[setdiff(get([v(CH-DB)]/[first(v(1))]),v(#))]
&USER ComSystem=$+user * +*:@pemit %#=[setq(0,after(get([v(CH-DB)]/[v(0)]),L))][setq(1,%[[capstr(lcstr(v(0)))]+%] %n has added [u(wordit,[u(clfunc2,v(0),v(1),v(#),r(0))])])][switch([setq(3,u(clfunc,%0,%#,%1,r(0)))][r(3)],0?,Com: ERROR - You have no authority over [switch(match(get([v(CH-DB)]/[v(0)]),L),0,channel,locked channel)] '[capstr(lcstr(v(0)))]'.,?0,Com: ERROR - List validation shows empty name list.)];@dolist [switch(r(3),11,setinter(lwho(),setunion([setq(4,iter(v(1),num(*##)))][r(4)],get([v(CH-DB)]/[v(0)]))))]=@pemit ##=[r(1)];&[switch(r(3),11,secure(v(0)),#)] [v(CH-DB)]=[setdiff(before(get([v(CH-DB)]/[v(0)]),L),r(4))] L [setunion(r(0),setdiff(r(4),#-1))];&[switch(r(3),11,C-[v(0)],#)] [v(O-DB)]=[setdiff(get([v(O-DB)]/C-[v(0)]),r(4))]
&WUSER ComSystem=$+wuser* * +*:@pemit %#=[setq(0,after(get([v(CH-DB)]/[v(1)]),L))][setq(1,%[[capstr(lcstr(v(1)))]+%] %N has added [u(wordit,[u(clfunc2,v(1),v(2),v(#),r(0))])])][u(WUSERM[match(0010 0011 1010 0110 1110 0111 1011 1111,[setq(2,u(wuserf,%0,%1,%#,%2,r(0)))][r(2)])],%1,%2,%#,r(0))];@dolist [u(WUSERDO[match(1011,r(2))],%2,%#,%1)]=@pemit ##=[r(1)];&[secure(first(v(1)))] [u(WUSERS[r(2)],[v(CH-DB)])]=[setdiff(before(get([v(CH-DB)]/[v(1)]),L),[setq(3,iter(v(2),num(*##)))][r(3)])] L [setunion(r(0),setdiff(r(3),#-1))];&C-[first(v(1))] [u(WUSERS[r(2)],[v(O-DB)])]=[setdiff(get([v(O-DB)]/C-[v(1)]),r(3))]
&WOWNER ComSystem=$+wowner* * +*:@pemit %#=[setq(0,setunion(before(get([v(CH-DB)]/[v(1)]),L),get([v(O-DB)]/O-[v(1)])))][setq(1,%[[capstr(lcstr(v(1)))]+%] %N has added owner [u(wordit,[u(cofunc2,%1,%2,%#,r(0))])])][u(WOWNER[match(0010 0011 1010 0110 1110 0111 1011 1111,[setq(2,u(wownerf,%0,%1,%#,%2,r(0)))][r(2)])],%1,%2,%#,r(0))];@dolist [u(WUSERDO[match(1011,r(2))],%2,%#,%1)]=@pemit ##=[r(1)];&[secure(v(1))] [u(WOWNERS[r(2)])]=[setunion(r(0),setdiff([setq(3,iter(v(2),num(*##)))][r(3)],#-1))] L [setdiff(after(get([v(CH-DB)]/[v(1)]),L),r(3))]
&WUNUSER ComSystem=$+wuser* * -*:@pemit %#=[setq(0,after(get([v(CH-DB)]/[v(1)]),L))][setq(1,u(wunuserf,%0,%1,%#,%2,r(0)))][setq(2,%[[capstr(lcstr(v(1)))]+%] %N has deleted [u(wordit,[u(culfunc2,%2,%1,%#,r(0))])])][u(WUNUSERM[match(0010 0011 1010 0110 1110 0111 1011 1111,r(1))],%0,%1,%#,r(0),%2)];@dolist [u(WUNUSERDO[match(1011,r(1))],%1,%2,%#)]=@pemit ##=[r(2)];&[secure(v(1))] [u(WUNUSERS[r(1)],[v(CH-DB)])]=[before(get([v(CH-DB)]/[v(1)]),L)] L [setdiff(r(0),[setq(3,iter(v(2),num(*##)))][r(3)])];&[secure(v(1))] [u(WUNUSERS[r(1)],[v(O-DB)])]=[setdiff(get([v(O-DB)]/[v(1)]),r(3))]
&WUNOWNER ComSystem=$+wowner* * -*:@pemit %#=[setq(0,setunion(before(get([v(CH-DB)]/[v(1)]),L),get([v(O-DB)]/O-[v(1)])))][setq(1,%[[capstr(lcstr(v(1)))]+%] %N has deleted [u(wordit,[u(colfunc2,%1,%2,%#,r(0))])])][u(WUNOWNERM[match(0010 0011 1010 0110 1110 0111 1011 1111,[setq(3,u(wunuserf,%0,%1,%#,[setq(4,iter(v(2),num(*##)))][r(4)],r(0)))][r(3)])],%1,%2,%#,r(0))];@dolist [u(WUNOWNERDO[match(1011,r(3))],%1,%2,%#)]=@pemit ##=[r(1)];&[secure(v(1))] [u(WUNOWNERS[r(3)])]=[setdiff(r(0),r(4))] L [after(get([v(CH-DB)]/[v(1)]),L)];&O-[secure(v(1))] [switch(r(3),??1?,[v(O-DB)])]=[setdiff(get([v(O-DB)]/O-[v(1)]),r(4))];&[secure(v(1))] [switch(r(3),??1?,[v(O-DB)])]=[setdiff(get([v(O-DB)]/[v(1)]),r(4))];&C-[secure(v(1))] [switch(r(3),??1?,[v(O-DB)])]=[setdiff(get([v(O-DB)]/C-[v(1)]),r(4))]
&UNUSER ComSystem=$+user * -*:@pemit %#=[setq(0,after(get([v(CH-DB)]/[v(0)]),L))][setq(1,%[[capstr(lcstr(v(0)))]+%] %N has deleted [u(wordit,[u(culfunc2,%1,%0,%#,r(0))])])][switch([setq(2,u(culfunc,%0,%1,%#,r(0)))][r(2)],01,Com: ERROR - Validation shows empty user list.,?0,Com: ERROR - You have no authority over locked channel '[capstr(lcstr(v(0)))]'.)];@dolist [switch(r(2),11,setinter(lwho(),get([v(CH-DB)]/[v(0)])))]=@pemit ##=[r(1)];&[switch(r(2),11,secure(v(0)),#)] [v(CH-DB)]=[before(get([v(CH-DB)]/[v(0)]),L)] L [setdiff(r(0),[setq(3,iter(v(1),num(*##)))][r(3)])];&[switch(r(2),11,secure(v(0)),#)] [v(O-DB)]=[setdiff(get([v(O-DB)]/[v(0)]),r(3))]
&OWNER ComSystem=$+owner * +*:@pemit %#=[setq(0,before(get([v(CH-DB)]/[v(0)]),L))][setq(1,%[[capstr(lcstr(v(0)))]+%] %n has added owner [u(wordit,[u(cofunc2,v(0),v(1),v(#),r(0))])])][switch([setq(2,u(cofunc,v(0),v(#),v(1),r(0)))][r(2)],0?,Com: ERROR - You have no authority over [switch(match(get([v(CH-DB)]/[v(0)]),L),0,channel,locked channel)] '[capstr(lcstr(v(0)))]'.,?0,Com: ERROR - List validation shows empty name list)];@dolist [switch(r(2),11,setinter(lwho(),setunion([setq(3,iter(v(1),num(*##)))][r(3)],get([v(CH-DB)]/[v(0)]))))]=@pemit ##=[r(1)];&[switch(r(2),11,secure(v(0)),#)] [v(CH-DB)]=[setunion(r(0),setdiff(r(3),#-1))] L [setdiff(after(get([v(CH-DB)]/[v(0)]),L),r(3))]
&UNOWNER ComSystem=$+owner * -*:@pemit %#=[setq(0,before(get([v(CH-DB)]/[v(0)]),L))][setq(1,%[[capstr(lcstr(v(0)))]+%] %N has deleted owner [u(wordit,[u(colfunc2,%0,%1,%#,r(0))])])][switch([setq(2,u(colfunc,%0,%1,%#,r(0)))][r(2)],01,Com: ERROR - Validation shows empty user list,?0,Com: ERROR - You have no authority over locked channel '[capstr(lcstr(v(0)))]')];@dolist [switch(r(2),11,setinter(lwho(),get([v(CH-DB)]/[v(0)])))]=@pemit ##=[r(1)];&[switch(r(2),11,secure(v(0)),#)] [v(CH-DB)]=[setdiff(r(0),[setq(3,iter(v(1),num(*##)))][r(3)])] L [setdiff(after(get([v(CH-DB)]/[v(0)]),L),r(3))];&[switch(r(2),11,O-[v(0)],#)] [v(O-DB)]=[setdiff(get([v(O-DB)]/O-[v(0)]),r(3))];&[switch(r(2),11,secure(v(0)),#)] [v(O-DB)]=[setdiff(get([v(O-DB)]/[v(0)]),r(3))];&[switch(r(2),11,O-[v(0)],#)] [v(O-DB)]=[setdiff(get([v(O-DB)]/C-[v(0)]),r(3))]
&CHOWN ComSystem=$+chown * +*:@pemit %#=[switch([setq(0,u(chownfunc,%#,%0,%1))][r(0)],111,WIZCom: Channel '[capstr(lcstr(first(v(0))))]' CHOWNED to [switch(gt(words([setq(1,setdiff(iter(v(1),num(*##)),#-1))][r(1)]),0),1,list:%b)][iter(r(1),name(##))],0??,u(ERRORDEF),10?,WIZCom: ERROR - Channel '[capstr(lcstr(first(v(0))))]' is not a locked channel.,110,WIZCom: ERROR - Validation shows empty list)];&[switch(r(0),111,first(v(0)),#)] [v(CH-DB)]=[r(1)] L [setdiff(get([v(CH-DB)]/[first(v(0))]),L [r(1)])];&[switch(r(0),111,O-[first(v(0))],#)] [v(O-DB)]=[setdiff(get([v(O-DB)]/O-[first(v(0))]),r(1))];&[switch(r(0),111,C-[first(v(0))],#)] [v(O-DB)]=[setdiff(get([v(O-DB)]/C-[first(v(0))]),r(1))]
&WLOCK ComSystem=$+wlock *:@pemit %#=[setq(1,setdiff(iter(edit(rest(v(0)),+,),num(*##)),#-1))][switch([setq(0,u(makefunc,%#,first(%0)))][r(0)],101,WIZCom: Channel '[capstr(lcstr(first(v(0))))]' now a LOCKED channel.%rOwners: [switch(words(r(1)),0,NONE,iter(r(1),[name(##)]\(##\)))],0??,u(ERRORDEF),11?,WIZCom: ERROR - Channel '[capstr(lcstr(first(v(0))))]+' already a locked channel.,100,WIZCom: ERROR - Channel '[capstr(lcstr(first(v(0))))]' non-existant.)];&[switch(r(0),101,first(v(0)),#)] [v(CH-DB)]=[r(1)] L [setdiff(get([v(CH-DB)]/[first(v(0))]),L [r(1)])]
&WUNLOCK ComSystem=$+wunlock *:@pemit %#=[switch([setq(0,u(makefunc,%#,%0))][r(0)],111,WIZCom: Channel '[capstr(lcstr(first(v(0))))]' now an UNLOCKED channel,0??,u(ERRORDEF),101,WIZCom: ERROR - Channel '[capstr(lcstr(first(v(0))))]' already an unlocked channel,100,WIZCom: ERROR - Channel '[capstr(lcstr(first(v(0))))]' non-existant -> Aborted)];&[switch(r(0),111,first(v(0)),#)] [v(CH-DB)]=[setdiff(get([v(CH-DB)]/[first(v(0))]),L)];&[switch(r(0),111,first(v(0)),#)] [v(O-DB)];&[switch(r(0),111,O-[first(v(0))],#)] [v(O-DB)];&[switch(r(0),111,F-[first(v(0))],#)] [v(O-DB)];&[switch(r(0),111,C-[first(v(0))],#)] [v(O-DB)]
&LISTCHAN ComSystem=$+listch*:@pemit %#=[u(LISTCHM[u(listchanf,rest(%0),%#)],rest(%0),%#)]
&WLIST ComSystem=$+wlist *:@pemit %#=[u(WLISTM[u(wlistf,%0,%#)],%0,iter(get([v(CH-DB)]/[v(0)]),switch([match(PLAYER,type(##))][match(##,L)],?1,##,1?,##)))]
&CREATE ComSystem=$+create *:@pemit %#=[switch([setq(0,gt(words(get([v(CH-DB)]/[first(v(0))])),0))][r(0)],1,Com: ERROR - Already existing channel list as '[capstr(lcstr(first(v(0))))]',0,Com: Locked channel '[capstr(lcstr(first(v(0))))]' created)];&[switch(r(0),0,secure(first(v(0))),#)] [v(CH-DB)]=[v(#)] L
&DESTROY ComSystem=$+destroy *:@pemit %#=[switch([setq(0,u(delfunc,%0,%#))][r(0)],0??,Com: ERROR - Non-Existant Channel '[capstr(lcstr(first(v(0))))]+',110,Com: ERROR - You are not an owner of the channel '[capstr(lcstr(first(v(0))))]+'.,10?,Com: ERROR - '[capstr(lcstr(first(v(0))))]' is not a locked channel.)][setq(1,%[[capstr(lcstr(first(v(0))))]+%] %N has *DESTROYED* this channel.)];@dolist [switch(r(0),111,setinter(lwho(),get([v(CH-DB)]/[first(v(0))])))]=@pemit ##=[r(1)];&[switch(r(0),111,first(v(0)),#)] [v(O-DB)];&[switch(r(0),111,first(v(0)),#)] [v(CH-DB)];&[switch(r(0),111,O-[first(v(0))],#)] [v(O-DB)];&[switch(r(0),111,F-[v(0)],#)] [v(O-DB)];&[switch(r(0),111,C-[v(0)],#)] [v(O-DB)]
&WDESTROY ComSystem=$+wdestroy* *:@pemit %#=[u(ERRREMOVE[setq(0,u(wdelfunc,%1,%#,%0))][r(0)],%0,%1)][setq(1,%[[capstr(lcstr(first(v(1))))]+%] %N has *DESTROYED* this channel.)];@dolist [u(WREMOVE[match(110,r(0))],first(%1))]=@pemit ##=[r(1)];&[u(SREMOVE[r(0)],first(v(1)))] [v(CH-DB)];&[u(SREMOVE[r(0)],O-[first(v(1))])] [v(O-DB)];&[u(SREMOVE[r(0)],first(v(1)))] [v(O-DB)];&[u(SREMOVE[r(0)],F-[first(v(1))])] [v(O-DB)];&[u(SREMOVE[r(0)],C-[first(v(1))])] [v(O-DB)]
&MONUNCON ComSystem=$+monuncon:@pemit [v(M-DB)]=%N\(%#\) has disconnected: %[[div([setq(0,sub(secs(),convtime(get(%#/last))))][r(0)],3600)]h [div(mod(r(0),3600),60)]m [mod(r(0),60)]s%]
&MONCON ComSystem=$+moncon:@pemit [v(M-DB)]= %N\(%#\) has connected \[[ucstr(get(%#/lastsite))]\]
&MONSET ComSystem=$+monset:@pemit %#=[u(MONSETM[setq(0,u(monaddf,%#))][r(0)])];@forwardlist [v(M-DB)]=[u(MONSET[r(0)],%#)]
&COMSPEAK ComSystem=$+com *:@pemit %#=[u(COM-ANS[match(11 01 00 10,[setq(0,u(comfunc,%0,%#))][r(0)])],%0,%#)][setq(1,u(comckm,%0))];@dolist [u(COMCK[match(10,r(0))],%0)]=@pemit ##=[u(COM-SPK[r(1)],%0,%#,##)];&D[v(#)] [u(DODEFAULT[gt(match(get([v(O-DB)]/U[v(#)]),LASTCHAN),0)],[v(A-DB)])]=[secure(first(before(v(0),=)))]
&CONFIG ComSystem=$+config *=*:@pemit %#=[u(CONFMSG[gt(match(v(conf-l),v(0)),0)],%0,%1)];&U[v(#)] [v(O-DB)]=[u(CONFSET[gt(match(v(conf-l),v(0)),0)],%0,%1,%#)]
&QUICKSPEAK ComSystem=$=*:@pemit %#=[setq(0,[u(qfunc,%0,%#)]\=[u(qfunc2,%0,%#)])][u(COM-ANS[match(11 01 00 10,[setq(1,u(comfunc,r(0),%#))][r(1)])],r(0),%#)][setq(2,u(comckm,r(0)))];@dolist [u(COMCK[match(10,r(1))],r(0))]=@pemit ##=[u(COM-SPK[r(2)],r(0),%#,##)];&D[v(#)] [u(DODEFAULT[gt(match(get([v(O-DB)]/U[v(#)]),LASTCHAN),0)],[v(A-DB)])]=[secure(first(before(r(0),=)))]
&QUIET ComSystem=$+quiet *:@pemit %#=[u(QUIET[setq(0,u(quietf,%0,%#))][r(0)],%0,%#)];&[u(QUIETS[r(0)],%0)] [v(O-DB)]=[u(QUIETSET[r(0)],%0,%#)]
&DEFAULT ComSystem=$+DEFAULT *:@pemit %#=Com: Default set to '[capstr(lcstr(first(v(0))))]';&D[v(#)] [v(A-DB)]=[secure(first(ucstr(v(0))))]
&LISTPUB ComSystem=$+listpub:@pemit %#=The following public channels currently exist:[u(listpub[u(wizard,%#)])]%rListing -> Completed
&LISTPRIVATE ComSystem=$+listpriv:@pemit %#=[switch(u(wizard,%#),1,The following private channels exist:[iter(lattr([v(CH-DB)]),switch(gt(match(get([v(CH-DB)]/##),L),0),1,%r##[space(sub(20,strlen(##)))] - Private Access[space(3)]Users: [words(after(get([v(CH-DB)]/##),L))][space(sub(5,strlen(words(after(get([v(CH-DB)]/##),L)))))]Owners: [words(before(get([v(CH-DB)]/##),L))][space(3)][u(badlistusr,##)]))]%rListing -> Completed,u(ERRORDEF))]
&SETWIZARD ComSystem=$+setwizard *:&WIZARD [u(SETWIZ[u(SETWIZFUNC,%#)])]=[edit(v(0),$,)];@pemit %#=[u(SETWIZM[u(SETWIZFUNC,%#)])]
&WREMOVE ComSystem=$+wremove * -*:@pemit %#=[u(WREMM[setq(0,u(wremf,%0,[setq(1,iter(%1,num(*##)))][r(1)],%#))][r(0)],%0,r(1))];&[secure(v(0))] [u(WREMS[r(0)])]=[u(WREMDO[gt(match(get([v(CH-DB)]/[v(0)]),L),0)],%0,r(1))];&[switch(r(0),1*,O-[v(0)],#)] [v(O-DB)]=[setdiff(get([v(O-DB)]/O-[v(0)]),r(1))];&[switch(r(0),1*,[secure(v(0))],#)] [v(O-DB)]=[setdiff(get([v(O-DB)]/[v(0)]),r(1))];&[switch(r(0),1*,C-[v(0)],#)] [v(O-DB)]=[setdiff(get([v(O-DB)]/C-[v(0)]),r(1))]
&WIPE ComSystem=$+wipe *:@pemit %#=[u(WIPEM[setq(0,u(wipef,%0,%#))][r(0)],%0)];&[secure(v(0))] [u(WIPES[gt(match(101 011 111,r(0)),0)])]=[u(WIPEDO[gt(match(get([v(CH-DB)]/[v(0)]),L),0)],%0)];&O-[secure(v(0))] [v(O-DB)]=[setdiff(iter(get([v(O-DB)]/O-[v(0)]),num(*[name(##)])),#-1)];&[secure(v(0))] [v(O-DB)]=[setdiff(iter(get([v(O-DB)]/[v(0)]),num(*[name(##)])),#-1)];&C-[secure(v(0))] [v(O-DB)]=[setdiff(iter(get([v(O-DB)]/C-[v(0)]),num(*[name(##)])),#-1)]
&WADDLOCK ComSystem=$+waddlock *=*:@pemit %#=[u(WADDLOCKM[setq(0,u(waddlockf,%0,%#))][r(0)],%0)];&[secure(first(v(0)))] [u(WADDLOCKS[eq(words(get([v(CH-DB)]/[first(v(0))])),0)])]=L;&F-[secure(first(v(0)))] [u(WADDLOCKS[r(0)])]=[edit(v(1),$,)]
&ADDLOCK ComSystem=$+addlock *=*:@pemit %#=[u(ADDLOCKM[setq(0,u(addlockf,%0,%1,%#))][r(0)],%0,%1)];&F-[secure(first(v(0)))] [u(ADDLOCKS[r(0)])]=[u(addlockdo,%0,%1)]
&CHANJOIN ComSystem=$+chanjoin *:@pemit %#=[setq(0,%[[capstr(lcstr(first(v(0))))]+%] %n has been [switch([setq(1,[gt(match(after(get([v(CH-DB)]/[v(0)]),L),v(#)),0)][gt(match(before(get([v(CH-DB)]/[v(0)]),L),v(#)),0)][gt(match(get([v(O-DB)]/O-[v(0)]),v(#)),0)])][r(1)],000,added to,001,added as an owner to,1??,removed from,01?,removed as an owner from)] this channel.)][u(JOINM[setq(2,u(joinf,%0,%#))][r(2)],%0)];&O-[secure(first(v(0)))] [u(JOIN[r(2)])]=[u(JOINSETO[r(1)],%0,%#)];&[secure(first(v(0)))] [u(JOINS[r(2)])]=[u(JOINSET[r(1)],%0,%#)];@dolist [u(JOINDO[gt(match(110 111,r(2)),0)],%0,%#)]=@pemit ##=[r(0)]
&WCHANJOIN ComSystem=$+wchanjoin *:@pemit %#=[u(WJOINM[setq(0,u(wjoinf,%0,%#))][r(0)],%0)];&[secure(first(v(0)))] [u(WJOINS[r(0)])]=[u(WJOINDO[gt(match(get([v(CH-DB)]/[v(0)]),v(#)),0)],%0,%#)]
&COMINDEX ComSystem=$+comindex:@pemit %#=[v(lines)]%r[u(comtitle)]%r[v(lines)]%r[u(doindex)]
&WDISABLE ComSystem=$+wdisable *:@pemit %#=[u(WDISABLEM[setq(0,u(ablef,%0,%#))][r(0)],%0)];@dolist [u(WDISABLEDO[r(0)],%0)]=@set me/##=no_command;&DISABLELIST [u(WABLES[r(0)])]=[setunion(v(disablelist),ucstr(v(0)))]
&COMSTATUS ComSystem=$+comstatus:@pemit %#=[v(lines)]%r[u(comtitle)]%r[v(lines)]%r[v(lines)]%r[switch(gt(words(setdiff(v(disablelist),v(wizopts))),0),1,Disabled Options:%r[setdiff(v(disablelist),v(wizopts))])][switch(and(words(setinter(v(disablelist),v(wizopts))),u(wizard,%#)),1,%r[v(lines)]%rDisabled Wizard Options:%r[setinter(v(disablelist),v(wizopts))]%r[v(lines)]%rError message currently set to:%r%r[u(ERRORDEF)]%r[v(lines)])]%r%r[u(COMSTATUSF,words(iter(lattr(v(CH-DB)),switch(gt(match(get([v(CH-DB)]/##),L),0),1,##))))]%r[v(lines)]%rCom Options Set: [get([v(O-DB)]/U[v(#)])]%r[v(lines)]%rAlias: [switch(get(%#/CALIAS),,DEFAULT[space(13)],[get(%#/CALIAS)][space(sub(20,strlen(get(%#/CALIAS))))])]Title: [switch(get(%#/CTITLE),,DEFAULT[space(13)],[get(%#/CTITLE)][space(sub(20,strlen(get(%#/CTITLE))))])]Default Speak: [switch(get(%#/CDEF),,DEFAULT,get(%#/CDEF))]%r[v(lines)]
&WENABLE ComSystem=$+wenable *:@pemit %#=[u(WENABLEM[setq(0,u(ablef,%0,%#))][r(0)],%0)];@dolist [u(WDISABLEDO[r(0)],%0)]=@set me/##=!no_command;&DISABLELIST [u(WABLES[r(0)])]=[setdiff(v(disablelist),ucstr(v(0)))]
&WINSTSETQ ComSystem=$+winstsetq:@pemit %#=[switch(u(wizard,%#),1,WIZCom: Installing setq\(\) parameters... please wait...,u(ERRORDEF))];@dolist [switch(u(wizard,%#),1,[lattr([v(alt-db)])] #-1)]={@pemit %#=[switch(##,#-1,WIZCom: Installation complete)];&## me=[get([v(ALT-DB)]/##)]}
&WUNINSTSETQ ComSystem=$+wuninstsetq:@pemit %#=[switch(u(wizard,%#),1,WIZCom: Uninstalling setq\(\) parameters... please wait...,u(ERRORDEF))];@dolist [switch(u(wizard,%#),1,[lattr([v(orig-db)])] #-1)]={@pemit %#=[switch(##,#-1,WIZCom: De-Installation complete)];&## me=[get([v(ORIG-DB)]/##)]}
@fo Comsystem=&O-DB ComSystem=[num(optiondb)]
@fo Comsystem=&CH-DB ComSystem=[num(channeldb)]
@fo Comsystem=&A-DB ComSystem=[num(aliasdb)]
@fo Comsystem=&M-DB ComSystem=[num(monitordb)]
@fo Comsystem=&ALT-DB ComSystem=[num(alternatedb)]
@fo Comsystem=&ORIG-DB ComSystem=[num(origonaldb)]
@fo Comsystem=&F-DB ComSystem=[num(functiondb)]
@fo Comsystem=&H-DB ComSystem=[num(helpdb)]
&ALIASA ComSystem=$+alias +* *:@pemit %#=[u(ALA[setq(0,u(AFA,%#,%0,%1))][r(0)],%0,%1)];&A[v(#)] [v(A-DB)]=[u(ASA[r(0)],%0,%#,%1)];&C[v(#)] [v(A-DB)]=[u(ASC[r(0)],%1,%#,%0)]
&ALIASD ComSystem=$+alias -*:@pemit %#=[u(ALD[setq(0,u(AFD,%#,%0))][r(0)],%0,%1)];&C[v(#)] [v(A-DB)]=[u(ADC[r(0)],%0,%#)];&A[v(#)] [v(A-DB)]=[u(ADA[r(0)],%0,%#,%1)]
&ALIASH ComSystem=$+alias:@pemit %#=[v(lines)]%r[u(comtitle)]%r[v(lines)]%r[space(35)]Alias List:%r[v(lines)]%r[iter(lnum(words(get([v(A-DB)]/A[v(#)]))),u(ALSH[or(eq(0,##),gt(mod(##,3),0))],add(1,##),%#))]%r[v(lines)]
&ALIASC ComSystem=$+alias clear:@pemit %#=Alias: List cleared!;&A[v(#)] [v(A-DB)];&C[v(#)] [v(A-DB)]
@lock/UseLock ComSystem=Last:?*
@pemit me=Com: MAIN installation completed.  Finish work and cleanup...
@parent comsystem=functiondb
@tel monitordb=home
@tel helpdb=home
@tel optiondb=home
@tel origonaldb=home
@tel alternatedb=home
@tel functiondb=home
@tel aliasdb=home
@tel channeldb=home
@lock comsystem=#0
@pemit me=Com: Initiating PENN flag patch (if not PENN, ignore the errors)
@dolist setdiff(lcon(comsystem),[v(M-DB)] [v(F-DB)] [v(H-DB)])=@set ##=!no_command
@set comsystem=!no_command
&CONVERT_45 me=This is a help on how to convert the older com revision 4.5 to the current.  You need to check the following attributes on the com system: CH-DB, A-DB, and O-DB.  Transfer those numbers to the new ComSystem in the same attributes.  Then transfer the attributes to the functiondb inside the com system (You can find it by looking at attribute F-DB).  Afterwords, go ahead and move the objects inside the new com and feel free to rid of the pre-created OptionDB, ChannelDB, and AliasDB.  The rest of the com 4.5 you can just wipe off the mush.  After that, everything should be ready to go.  If this sounds too confusing, please mail the author: phoenix@delphi.glendon.yorku.ca
@pemit me=Com: Finish on Install.  Reviewing readme file: (CONVERT_45) on yourself.
@pemit me=v(convert_45)
@set me=!quiet


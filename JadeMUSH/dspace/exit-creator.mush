@force me = { &exit-NorthWest me = open(NorthWest,) }
-
@fo me = { [v(exit-NorthWest)] = [v(parent-exit)]}
-
@lock [v(exit-NorthWest)] = me&!me
-
&xnew [v(exit-NorthWest)] = sub(get(%0/XCOOR),1)
-
&ynew [v(exit-NorthWest)] = add(get(%0/YCOOR),1)
-
@set [v(exit-NorthWest)] = WIZARD
-
@set [v(exit-NorthWest)] = DARK
-
@name [v(exit-NorthWest)] = 
  NorthWest <NW>;
  NorthWest;WestNorth;
  NW;WN
-
&dir [v(exit-NorthWest)] = NW
-
@force me ={@succ [v(exit-NorthWest)] = You head [lcstr(NorthWest)].}
-
@force me ={@osucc [v(exit-NorthWest)] = heads [lcstr(NorthWest)].}
-
@force me ={@odrop [v(exit-NorthWest)] = comes in from the [lcstr(SouthEast)].}
-
@force me ={ &FAKE_FAIL [v(exit-NorthWest)] = You find you cannot travel further [lcstr(NorthWest)].}
-
@force me ={ &NO_DESC [v(exit-NorthWest)] = You cannot discern anything further to the [lcstr(NorthWest)].}
-
@force me ={ &FAIL_DESC [v(exit-NorthWest)]=Travel to the [lcstr(NorthWest)] appears blocked.}
-
__drop [v(exit-NorthWest)]
-
@set [v(exit-NorthWest)]=safe
-
@set [v(exit-NorthWest)]=immortal
-

@force me = { &exit-West me = open(West,) }
-
@fo me = { [v(exit-West)] = [v(parent-exit)]}
-
@lock [v(exit-West)] = me&!me
-
&xnew [v(exit-West)] = sub(get(%0/XCOOR),1)
-
&ynew [v(exit-West)] = 
-
@set [v(exit-West)] = WIZARD
-
@set [v(exit-West)] = DARK
-
@name [v(exit-West)] = 
  West <W>;
  West;West;
  W;W
-
&dir [v(exit-West)] = W
-
@force me ={@succ [v(exit-West)] = You head [lcstr(West)].}
-
@force me ={@osucc [v(exit-West)] = heads [lcstr(West)].}
-
@force me ={@odrop [v(exit-West)] = comes in from the [lcstr(East)].}
-
@force me ={ &FAKE_FAIL [v(exit-West)] = You find you cannot travel further [lcstr(West)].}
-
@force me ={ &NO_DESC [v(exit-West)] = You cannot discern anything further to the [lcstr(West)].}
-
@force me ={ &FAIL_DESC [v(exit-West)]=Travel to the [lcstr(West)] appears blocked.}
-
__drop [v(exit-West)]
-
@set [v(exit-West)]=safe
-
@set [v(exit-West)]=immortal
-

@force me = { &exit-SouthWest me = open(SouthWest,) }
-
@fo me = { [v(exit-SouthWest)] = [v(parent-exit)]}
-
@lock [v(exit-SouthWest)] = me&!me
-
&xnew [v(exit-SouthWest)] = sub(get(%0/XCOOR),1)
-
&ynew [v(exit-SouthWest)] = sub(get(%0/YCOOR),1)
-
@set [v(exit-SouthWest)] = WIZARD
-
@set [v(exit-SouthWest)] = DARK
-
@name [v(exit-SouthWest)] = 
  SouthWest <SW>;
  SouthWest;WestSouth;
  SW;WS
-
&dir [v(exit-SouthWest)] = SW
-
@force me ={@succ [v(exit-SouthWest)] = You head [lcstr(SouthWest)].}
-
@force me ={@osucc [v(exit-SouthWest)] = heads [lcstr(SouthWest)].}
-
@force me ={@odrop [v(exit-SouthWest)] = comes in from the [lcstr(NorthEast)].}
-
@force me ={ &FAKE_FAIL [v(exit-SouthWest)] = You find you cannot travel further [lcstr(SouthWest)].}
-
@force me ={ &NO_DESC [v(exit-SouthWest)] = You cannot discern anything further to the [lcstr(SouthWest)].}
-
@force me ={ &FAIL_DESC [v(exit-SouthWest)]=Travel to the [lcstr(SouthWest)] appears blocked.}
-
__drop [v(exit-SouthWest)]
-
@set [v(exit-SouthWest)]=safe
-
@set [v(exit-SouthWest)]=immortal
-

@force me = { &exit-North me = open(North,) }
-
@fo me = { [v(exit-North)] = [v(parent-exit)]}
-
@lock [v(exit-North)] = me&!me
-
&xnew [v(exit-North)] = 
-
&ynew [v(exit-North)] = add(get(%0/YCOOR),1)
-
@set [v(exit-North)] = WIZARD
-
@set [v(exit-North)] = DARK
-
@name [v(exit-North)] = 
  North <N>;
  North;North;
  N;N
-
&dir [v(exit-North)] = N
-
@force me ={@succ [v(exit-North)] = You head [lcstr(North)].}
-
@force me ={@osucc [v(exit-North)] = heads [lcstr(North)].}
-
@force me ={@odrop [v(exit-North)] = comes in from the [lcstr(South)].}
-
@force me ={ &FAKE_FAIL [v(exit-North)] = You find you cannot travel further [lcstr(North)].}
-
@force me ={ &NO_DESC [v(exit-North)] = You cannot discern anything further to the [lcstr(North)].}
-
@force me ={ &FAIL_DESC [v(exit-North)]=Travel to the [lcstr(North)] appears blocked.}
-
__drop [v(exit-North)]
-
@set [v(exit-North)]=safe
-
@set [v(exit-North)]=immortal
-


@force me = { &exit-South me = open(South,) }
-
@fo me = { [v(exit-South)] = [v(parent-exit)]}
-
@lock [v(exit-South)] = me&!me
-
&xnew [v(exit-South)] = 
-
&ynew [v(exit-South)] = sub(get(%0/YCOOR),1)
-
@set [v(exit-South)] = WIZARD
-
@set [v(exit-South)] = DARK
-
@name [v(exit-South)] = 
  South <S>;
  South;South;
  S;S
-
&dir [v(exit-South)] = S
-
@force me ={@succ [v(exit-South)] = You head [lcstr(South)].}
-
@force me ={@osucc [v(exit-South)] = heads [lcstr(South)].}
-
@force me ={@odrop [v(exit-South)] = comes in from the [lcstr(North)].}
-
@force me ={ &FAKE_FAIL [v(exit-South)] = You find you cannot travel further [lcstr(South)].}
-
@force me ={ &NO_DESC [v(exit-South)] = You cannot discern anything further to the [lcstr(South)].}
-
@force me ={ &FAIL_DESC [v(exit-South)]=Travel to the [lcstr(South)] appears blocked.}
-
__drop [v(exit-South)]
-
@set [v(exit-South)]=safe
-
@set [v(exit-South)]=immortal
-

@force me = { &exit-NorthEast me = open(NorthEast,) }
-
@fo me = { [v(exit-NorthEast)] = [v(parent-exit)]}
-
@lock [v(exit-NorthEast)] = me&!me
-
&xnew [v(exit-NorthEast)] = add(get(%0/XCOOR),1)
-
&ynew [v(exit-NorthEast)] = add(get(%0/YCOOR),1)
-
@set [v(exit-NorthEast)] = WIZARD
-
@set [v(exit-NorthEast)] = DARK
-
@name [v(exit-NorthEast)] = 
  NorthEast <NE>;
  NorthEast;EastNorth;
  NE;EN
-
&dir [v(exit-NorthEast)] = NE
-
@force me ={@succ [v(exit-NorthEast)] = You head [lcstr(NorthEast)].}
-
@force me ={@osucc [v(exit-NorthEast)] = heads [lcstr(NorthEast)].}
-
@force me ={@odrop [v(exit-NorthEast)] = comes in from the [lcstr(SouthWest)].}
-
@force me ={ &FAKE_FAIL [v(exit-NorthEast)] = You find you cannot travel further [lcstr(NorthEast)].}
-
@force me ={ &NO_DESC [v(exit-NorthEast)] = You cannot discern anything further to the [lcstr(NorthEast)].}
-
@force me ={ &FAIL_DESC [v(exit-NorthEast)]=Travel to the [lcstr(NorthEast)] appears blocked.}
-
__drop [v(exit-NorthEast)]
-
@set [v(exit-NorthEast)]=safe
-
@set [v(exit-NorthEast)]=immortal
-

@force me = { &exit-East me = open(East,) }
-
@fo me = { [v(exit-East)] = [v(parent-exit)]}
-
@lock [v(exit-East)] = me&!me
-
&xnew [v(exit-East)] = add(get(%0/XCOOR),1)
-
&ynew [v(exit-East)] = 
-
@set [v(exit-East)] = WIZARD
-
@set [v(exit-East)] = DARK
-
@name [v(exit-East)] = 
  East <E>;
  East;East;
  E;E
-
&dir [v(exit-East)] = E
-
@force me ={@succ [v(exit-East)] = You head [lcstr(East)].}
-
@force me ={@osucc [v(exit-East)] = heads [lcstr(East)].}
-
@force me ={@odrop [v(exit-East)] = comes in from the [lcstr(West)].}
-
@force me ={ &FAKE_FAIL [v(exit-East)] = You find you cannot travel further [lcstr(East)].}
-
@force me ={ &NO_DESC [v(exit-East)] = You cannot discern anything further to the [lcstr(East)].}
-
@force me ={ &FAIL_DESC [v(exit-East)]=Travel to the [lcstr(East)] appears blocked.}
-
__drop [v(exit-East)]
-
@set [v(exit-East)]=safe
-
@set [v(exit-East)]=immortal
-

@force me = { &exit-SouthEast me = open(SouthEast,) }
-
@fo me = { [v(exit-SouthEast)] = [v(parent-exit)]}
-
@lock [v(exit-SouthEast)] = me&!me
-
&xnew [v(exit-SouthEast)] = add(get(%0/XCOOR),1)
-
&ynew [v(exit-SouthEast)] = sub(get(%0/YCOOR),1)
-
@set [v(exit-SouthEast)] = WIZARD
-
@set [v(exit-SouthEast)] = DARK
-
@name [v(exit-SouthEast)] = 
  SouthEast <SE>;
  SouthEast;EastSouth;
  SE;ES
-
&dir [v(exit-SouthEast)] = SE
-
@force me ={@succ [v(exit-SouthEast)] = You head [lcstr(SouthEast)].}
-
@force me ={@osucc [v(exit-SouthEast)] = heads [lcstr(SouthEast)].}
-
@force me ={@odrop [v(exit-SouthEast)] = comes in from the [lcstr(NorthWest)].}
-
@force me ={ &FAKE_FAIL [v(exit-SouthEast)] = You find you cannot travel further [lcstr(SouthEast)].}
-
@force me ={ &NO_DESC [v(exit-SouthEast)] = You cannot discern anything further to the [lcstr(SouthEast)].}
-
@force me ={ &FAIL_DESC [v(exit-SouthEast)]=Travel to the [lcstr(SouthEast)] appears blocked.}
-
__drop [v(exit-SouthEast)]
-
@set [v(exit-SouthEast)]=safe
-
@set [v(exit-SouthEast)]=immortal
-


@power #233=!immutable
-

@fail #233 = 
  [name(me)] doesn't want to be picked up.
-

@desc #233 = 
 [desc(%!)]%r
 [clothingdesc(%!)].%r
 [pregnantdesc(%!)]
 [combatdesc(%!)]
 [damagedesc(%!)]
 [bathdesc(%!)]
 %r%r
-

# This function will return the visible wounds on the player.
# %q0 = visible wounds that the player has, if any.
# %q1 = All of the covered bodylocs on the player.
# %q2 = Total damage points of the player.

&function-damagedesc #50=
 [setq(0, lattr(%0/damage-*-*))]
 [setq(0, filter(filter-invisible-wounds, %q0))]
 [setq(1, iter(clothinglist(%0), default(##/worn-on,---)))]
 [setq(0, filter(filter-covered-wounds, %q0))]
 [setq(2, get(%0/damage))]
 [setq(3, get(%0/bandaged))]
 [setq(4, u(u-splint-show,%0))]
 [iter(%q0, [name(%0)] has [art(u(u-damage-show, last(##, -)))] 
            [lcstr(u(u-damage-show, last(##, -)))] on [poss(%0)] 
            [u(#15/u-bodyloc-description,extract(##, 2, 1, -))].)]%b
 [ifelse(t(%q3), %r[name(%0)] is bandaged on the following areas: 
            [map(#15/u-bodyloc-description,u(u-comma-list,%q3))].%b,)]
 [ifelse(t(%q4), %r[name(%0)] wears a splint on the following areas: 
            [map(#15/u-bodyloc-description,u(u-comma-list,%q4))].%b,)]%r
 [switch(1, gt(%q2, 20), [name(%0)] looks half dead.,
                gt(%q2, 15), [name(%0)] looks to be in very poor health.,
                gt(%q2, 10), [name(%0)] looks to be in bad shape.,
                gt(%q2, 4), [name(%0)] looks a little beat up.,
                [name(%0)] looks to be in general good health.)]
 

-
# Changes damage 'word' to what should appear.
#    Broken becomes 'break'.

&u-damage-show #50=
  [switch(%0,broken,break,%0)]
-
&u-show-splint #50=
            squish(iter(lattr(%0/last_splint*),
            switch(gte(default(%0/##,secs()),
                       sub(secs(),mul(mul(60,60),24))),
            1,lcstr(after(##,LAST_SPLINT_)))))
-

&u-comma-list #50=switch(words(%0),
           0, nothing, 1, %0, 2, [first(%0)] and [rest(%0)],
[edit(extract(%0, 1, dec(words(%0))),%b,\\,\%b)] and [last(%0)])

-

# %q1 = list of wearlocs that the player has covered

&filter-covered-wounds #50=
[not(t(member(%q1, lcstr(trim(extract(%0, 2, 1, -))))))]

-

&filter-invisible-wounds #50=
[t(member(get(#15/visible-wounds), lcstr(last(%0, -))))]

-
# If tr-hair_length is blank or set to bald, displays 'is bald and has'
 
&function-desc #50=
[setq(0, get(%0/sex))]
[setq(1, default(%0/features, none))]%r
[setq(2, default(%0/age, 20))]
[setq(3, default(%0/tr-hair_length, bald))]
[switch(1, 
          lte(%q2, 11), A little [switch(%q0, f*, girl, boy)],
          lte(%q2, 13), A [switch(%q0, f*, maiden, youth)],
          lte(%q2, 19), A young [switch(%q0, f*, woman, man)],
          lte(%q2, 28), A [switch(%q0, f*, woman, man)],
          lte(%q2, 35), A middle aged [switch(%q0, f*, woman, man)],
          lte(%q2, 50), An older [switch(%q0, f*, woman, man)],
          An elderly [switch(%q0, f*, woman, man)])] with 
          [switch(%q1, none, no distinguishing features, %q1)]%,%b
[name(%0)] has [lcstr([trait(%0, eye color)] eyes,
[switch(%q3, bald,%bis bald and has,
%b[trait(%0, hair length)] [trait(%0, hair color)] hair and)] 
[trait(%0, skin color)] skin.)]  [name(%0)] appears to weigh 
about [get(%0/weight)] pounds and stands about [get(%0/height)] 
tall.  
[udefault(%0/description, get_eval(%0/desc))]
-

&function-kiddesc #50=
[setq(0, get(%0/sex))]
[setq(1, default(%0/features, none))]%r
[setq(2, default(%0/age, 20))]
[switch(1,
         lte(%q2, 11), A little [switch(%q0, f*, girl, boy)],
         lte(%q2, 13), A [switch(%q0, f*, maiden, youth)],
         lte(%q2, 19), A young [switch(%q0, f*, woman, man)],
         lte(%q2, 28), A [switch(%q0, f*, woman, man)],
         lte(%q2, 35), A middle aged [switch(%q0, f*, woman, man)],
         lte(%q2, 50), An older [switch(%q0, f*, woman, man)],An elderly 
[switch(%q0, f*, woman, man)])] with [switch(%q1, none, no distinguishing 
features, %q1)]%,%b[name(%0)] has [lcstr([trait(%0, eye color)] eyes, 
[trait(%0, hair length)] [trait(%0, hair color)] hair and [trait(%0, skin 
color)] skin)]. 
[udefault(%0/description, get_eval(%0/desc))]
-

# New code
&function-clothingdesc #50=
    [setq(9, locate(%#, %0, *))]
    [ifelse(hastag(%q9,body),[setq(9,parent(%q9))],)]
    [setq(0, clothinglist(%q9))]
    %r
    [name(%q9)] is wearing: 
    [u(#52/u-commafy-expanded, %q0)]

-

# pregnantdesc()
# returns a line describing the state of the player's pregnancy.

&function-pregnantdesc #50=  
  [switch(1,
         hastag(%0,pregnant),
         %r[u(%0/desc-pregnancy-[u(u-month-diff,
                                      [extract([get(%0/conceived)],7,1)],
                                      [extract([ictime()],7,1)])])],
         hastag(%0,false-glow),
         %r[u(%0/desc-pregnancy-3)],
         %r)]
-

&u-month-diff #50=
  [setq(0,[switch(%0,Jan,1,Feb,2,Mar,3,Apr,4,May,5,Jun,6,Jul,7,Aug,8,
          Sep,9,Oct,10,Nov,11,Dec,12)])]
  [setq(1,[switch(%1,Jan,1,Feb,2,Mar,3,Apr,4,May,5,Jun,6,Jul,7,Aug,8,
          Sep,9,Oct,10,Nov,11,Dec,12)])]
  [ifelse(gte([setr(2,[mod([add(12,[sub(%q1,%q0)])],12)])],10),10,%q2)]

-



@adesc #233 = 
  @looknotify %#=[num(me)]
-

###################################################################
# Run by the player that is being checked.
# %0 is the player the pemit goes to
###################################################################
# %q0 is the last time the player bathed (in secs)
# %q1 is how long ago it was that the player bathed (in secs)
# %q2 are the number of seconds in a day
&cmd-@bath #7=$@bath *:
  @pemit %# = bathdesc(%0)
-

###################################################################
# Messages:  Bathed between (in days)
#
# Fresh      0 - 1
#   None     1 - 3
# Dirty      3 - 7
# Needs bath 7 - 20
# Rank!      after 20
###################################################################
&function-bathdesc #50 = 
  ulocal(#50/ul-bathdesc, %0, name(%0))
-
&ul-bathdesc #50 = 

  [setq(0, default(%0/bathed-last, 0))]
  [setq(1, sub(secs(), %q0))]
  [setq(2, mul(60,60,24))]
  [setq(3, gte(secs(), default(%0/perfumed-done, 0)))]
  [setq(4, gte(default(%0/bathed-last,0),default(%0/perfumed-last,0)))]
  [setq(5, gte(%q1, mul(%q2,7)))]

  [switch(or(%q3,%q4,%q5), 1, 
    [settag(%0, !noxious)]
    [u(#50/u-bathdesc, %0, %1)]%b, 
# else
    %r%1 [default(%0/desc-scent, smells like nothing at all.)]%b
  )]
-

&u-bathdesc #50 = 
  switch(1, 
    lt(%q1, %q2), 
      %r%1 smells fresh and clean like [subj(%0)]'s just been to the baths!,
    lt(%q1, mul(%q2, 3)),
      ,
    lt(%q1, mul(%q2, 7)), 
      %r%1 is looking a bit dirty., 
    lt(%q1, mul(%q2, 20)), 
      %r%1 could use a bath., 
#   else
      %r%1 is rank! %1 is in dire need of a bath.
  )
-



#################################################################
#            OTHER PLAYER SETTINGS                              #
#################################################################

&ic-home #233=#0
-
@power #233=immutable











 

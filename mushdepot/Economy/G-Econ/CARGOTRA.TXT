@create Cargo Transport Parent
@link Cargo Transport Parent = #455
@parent Cargo Transport Parent=#1297
@lock/Basic Cargo Transport Parent=#58
@lock/Use Cargo Transport Parent=canuse/1
@set Cargo Transport Parent = WIZARD
@set Cargo Transport Parent = MONITOR
@set Cargo Transport Parent = PUPPET
&CMD_DRIVE_INTO_SHIP Cargo Transport Parent=$drive into *=*:th [switch([and([hasattr(%0,nav_console)],[hasflag(%0,shipobj)])],1,[switch([strmatch(%1,[get([get(%0/nav_console)]/board_code)])],1,[if([lattr(me/STORAGE_*)],[pemit(%#,The [name(me)] is too heavy, it must be empty to drive on a ship.)],[emit(The [name(me)] drives into [name(%0)].)][tel(me,%0)])],0,[pemit(%#,Incorrect boarding code.)])],0,[pemit(%#,That is not a vessel.)])]
&FUN_UPGRADE Cargo Transport Parent=[switch([switch([name(%0)],*Power Plant,[hasattr(me,storage_power_plant)],*Water Pump*,[hasattr(me,storage_water_pump)],*Farm*,[hasattr(me,storage_farm_equipment)])],1,[switch([hasflag(%0,Wiz)],1,[switch([gte([v(storage_[switch([name(%0)],*Power Plant,power_plant,*Water Pump*,water_pump,*Farm*,farm_equipment)])],1)],1,[set(%0,max_reactor:[add([get(%0/max_reactor)],[mul([floor([v(storage_[switch([name(%0)],*Power Plant,power_plant,*Water Pump*,water_pump,*Farm*,farm_equipment)])])],50)])])][pemit(%#,The maximum output is now [get(%0/max_reactor)])][wipe(me/storage_[switch([name(%0)],*Power Plant,power_plant,*Water Pump*,water_pump,*Farm*,farm_equipment)])],0,[pemit(%#,You do not have enough to do that.)])],0,[pemit(%#,Invalid %0.)])],0,[pemit(%#,You do not have anything to do that with.)])][trigger(me/fun_calc_capacity_remaining)][trigger(me/fun_calc_capacity_used)]
&CMD_UPGRADE Cargo Transport Parent=$upgrade *:th [switch([strmatch(power plant water pump farm,*%0*)],0,[pemit(%#,Huh? %(Type "help" for help.%))],1,[switch([isdbref([num(%0)])],1,[u(fun_upgrade,%0)],0,[pemit(%#,No %0 in this room.)])])]
&FUN_UNLOAD_SHIP Cargo Transport Parent=[set(%2,storage_%1:[sub([get(%2/storage_%1)],%0)])][set(%3,storage_%1:[switch([hasattr(%3,storage_%1)],1,[add([get(%3/storage_%1)],%0)],0,%0)])][pemit(%#,The [name(me)] hums as %0 [capstr([lcstr(%1)])] are moved from [name(%2)].)][switch([strmatch([get(%2/storage_%1)],0)],1,[wipe(%2/storage_%1)])][hs_set_attr([get(%2/nav_console)]/cargoleft,[add([hs_get_attr([get(%2/nav_console)],cargoleft)],%0)])][u(%3/fun_calc_capacity_used)][u(%3/fun_calc_capacity_remaining)]
&CMD_UNLOAD Cargo Transport Parent=$unload * of * from * to *=*:th [switch([hasattr(me,transfer)],0,[switch([u(fun_iscommod,%1,%2)][u(fun_gotenough,%0,%1,%2)][u(fun_validdest,%3)],111,[switch([gte([v(capacity_remaining)],%0)],1,[switch([u(fun_isship,%2)],1,[switch([and([strmatch([loc(me)],[loc(%2)])],[strmatch([loc(me)],[loc(%3)])])],1,[switch([strmatch([get([get(%2/nav_console)]/board_code)],%4)],1,[u(fun_unload_ship,%0,%1,%2,%3)],0,[pemit(%#,Error: Incorrect boarding code.)])],0,[pemit(%#,Error: Must be in same location.)])],0,[pemit(%#,Invalid origin.)])],0,[pemit(%#,The [name(%3)] cannot hold that much.)])],011,[pemit(%#,That is not a valid commodity.)],101,[pemit(%#,You do not have that much of that commodity.)],110,[pemit(%#,Invalid destination.)],[pemit(%#,Error in operation.)])][wait(1,[lit([wipe(me/transfer)])])],1,[pemit(%#,Cargo transfer already innitiated.)])]
&FUN_LOAD_SHIP Cargo Transport Parent=[set(%2,storage_%1:[sub([get(%2/storage_%1)],%0)])][set(%3,storage_%1:[switch([hasattr(%3,storage_%1)],1,[add([get(%3/storage_%1)],%0)],0,%0)])][pemit(%#,The [name(me)] hums as %0 [capstr([lcstr(%1)])] are moved to [name(%2)].)][switch([strmatch([v(storage_%1)],0)],1,[wipe(%2/storage_%1)])][hs_set_attr([get(%3/nav_console)]/cargoleft,[sub([hs_get_attr([get(%3/nav_console)],cargoleft)],%0)])][u(%2/fun_calc_capacity_used)][u(%2/fun_calc_capacity_remaining)]
&FUN_ISSHIP Cargo Transport Parent=[and([hasattr(%0,nav_console)],[hasflag(%0,shipobj)])]
&CMD_LOAD Cargo Transport Parent=$load * of * from * to *=*:th [switch([hasattr(me,transfer)],0,[switch([u(fun_iscommod,%1,%2)][u(fun_gotenough,%0,%1,%2)][u(fun_isship,%3)],111,[switch([gte([hs_get_attr([get(%3/nav_console)],cargoleft)],%0)],1,[switch([u(fun_validorigin,%2)],1,[switch([and([strmatch([loc(me)],[loc(%2)])],[strmatch([loc(me)],[loc(%3)])])],1,[switch([strmatch([get([get(%3/nav_console)]/board_code)],%4)],1,[u(fun_load_ship,%0,%1,%2,%3)],0,[pemit(%#,Error: Incorrect boarding code.)])],0,[pemit(%#,Error: Must be in same location.)])],0,[pemit(%#,Invalid origin.)])],0,[pemit(%#,The [name(%3)] cannot hold that much.)])],011,[pemit(%#,That is not a valid commodity.)],101,[pemit(%#,You do not have that much of that commodity.)],110,[pemit(%#,Invalid destination.)],[pemit(%#,Error in operation.)])][wait(1,[lit([wipe(me/transfer)])])],0,[pemit(%#,Cargo transfer already innitiated.)])]
&FUN_VALIDORIGIN Cargo Transport Parent=[cand([hasflag(%0,Wiz)],[hasattr(%0,cargocan)])]
&CMD_TRANSFER Cargo Transport Parent=$transfer * of * from * to *:th [switch([u(fun_iscommod,%1,%2)][u(fun_gotenough,%0,%1,%2)][u(fun_validdest,%3)],111,[switch([gte([get(%3/capacity_remaining)],%0)],1,[switch([u(fun_validorigin,%2)],1,[switch([and([strmatch([loc(me)],[loc(%2)])],[strmatch([loc(me)],[loc(%3)])])],1,[u(fun_transfer_commod,%0,%1,%2,%3)][trigger(me/fun_calc_capacity_remaining)],0,[pemit(%#,Error: Must be in same location.)])],0,[pemit(%#,Invalid origin.)])],0,[pemit(%#,The [name(%3)] cannot hold that much.)])],011,[pemit(%#,That is not a valid commodity.)],101,[pemit(%#,You do not have that much of that commodity.)],110,[pemit(%#,Invalid destination.)],[pemit(%#,Error in operation.)])]
&CMD_SET_MAX_CAPACITY Cargo Transport Parent=$set max capacity *:th [switch([hasflag(%#,Wiz)],1,[set(me,max_Capacity:%0)][u(fun_calc_capacity_remaining)][pemit(%#,[name(me)] can now hold up to %0 units.)],0,[pemit(%#,Permission denied.)])]
&STOPDRIVING Cargo Transport Parent=$stop driving:th [switch([strmatch([v(driver)],*%#*)],1,[emit(%n steps out of the [name(me)].)][wipe(me/driver)],0,[pemit(%#,You are not driving.)])]
&OLDLOC Cargo Transport Parent=#60
@AHEAR Cargo Transport Parent=th [switch([strmatch([num(*%0)],[v(driver)])],1,[switch([strmatch([zone(here)],[zone([loc([v(driver)])])])],1,[tel(me,[loc([v(driver)])])],0,[pemit([v(driver)],[name(me)] can't go there.%rYou stop driving the [name(me)].)][wipe(me/driver)])])]
@set Cargo Transport Parent/AHEAR=no_command
@LISTEN Cargo Transport Parent=* has left.
@set Cargo Transport Parent/LISTEN=no_command
&CMD_DRIVE Cargo Transport Parent=$drive:th [emit(%n climbs into the [name(me)] and turns it on.)][set(me,driver:%#)]
&FUN_FIND_CONTENTS2 Cargo Transport Parent=[if([lattr(me/STORAGE_*)],%b[iter([lattr(me/STORAGE_*)],[ansi([switch([strmatch([v(commodlist)],*|[edit(##,STORAGE_,)]|*)],1,ng,0,n)],[ljust([capstr([lcstr([edit(##,STORAGE_,)])])],25)])][ljust([ansi(nc,[v(##)])],48)]%r)],None.%r)]
&CMD_CLIPBOARD Cargo Transport Parent=$clipboard:th [pemit(%#,[ansi(hb,[repeat(=,76)])]%r[center([ansi(h,[name(me)] Clipboard)],76)]%r[ansi(hb,[repeat(=,76)])]%r[u(fun_find_contents2)][ansi(hb,[repeat(=,76)])]
@IDESCRIBE Cargo Transport Parent=%tThe [name(me)] has lots of knobs and displays around.  There is a window infront of you and on either side.  Out the window, you see [ansi(h,[name([loc(me)])] %[)][ansi(hr,[name([zone([loc(me)])])])][ansi(h,%])].  The clipboard  beside you shows that the [name(me)] is currently carrying.
@set Cargo Transport Parent/IDESCRIBE=no_command
&VERSION Cargo Transport Parent=2.1
@set Cargo Transport Parent/VERSION=no_command
&CREDITS Cargo Transport Parent=Dave@GalacticMUSH (davemilford@home.com)
@set Cargo Transport Parent/CREDITS=no_command
&FUN_GOTENOUGH Cargo Transport Parent=[cand([lte(%0,[get(%2/STORAGE_%1)])],[gt(%0,0)])]
&FUN_VALIDDEST Cargo Transport Parent=[cand([hasflag(%0,Wiz)],[hasattr(%0,cargocan)])]
&FUN_ISCOMMOD Cargo Transport Parent=[hasattr(%1,storage_%0)]
&FUN_TRANSFER_COMMOD Cargo Transport Parent=[switch([hasattr(me,transfer)],0,{[set(me,transfer:1)][set(%2,storage_%1:[sub([get(%2/storage_%1)],%0)])][set(%3,storage_%1:[switch([hasattr(%3,storage_%1)],1,[add([get(%3/storage_%1)],%0)],0,%0)])][u(%2/fun_calc_capacity_remaining)][pemit(%#,The [name(me)] hums as %0 [capstr([lcstr(%1)])] are moved to [name(%2)].)][switch([strmatch([get(%2/storage_%1)],0)],1,[wipe(%2/storage_%1)])][trigger(%3/fun_calc_capacity_remaining)][trigger(%3/fun_calc_capacity_used)][u(%2/fun_calc_capacity_used)][u(%2/fun_calc_capacity_remaining)][wait(1,[lit([wipe(me/transfer)])])]},1,[pemit(%#,Cargo transfer already innitiated.)])]
&CAPACITY_USED Cargo Transport Parent=0
&FUN_CALC_CAPACITY_REMAINING Cargo Transport Parent=[set(me,capacity_remaining:[v(max_capacity)])][iter([lattr(me/STORAGE_*)],[set(me,capacity_remaining:[sub([v(capacity_remaining)],[v(##)])])])]
&FUN_CALC_CAPACITY_USED Cargo Transport Parent=[set(me,capacity_used:0)][iter([lattr(me/STORAGE_*)],[set(me,capacity_used:[add([v(capacity_used)],[u(##)])])]
&FUN_FIND_CONTENTS Cargo Transport Parent=%b[iter([lattr(me/STORAGE_*)],[ljust([ansi([switch([strmatch([v(commodlist)],*|[edit(##,STORAGE_,)]|*)],1,ng,0,n)],[capstr([lcstr([edit(##,STORAGE_,)])])])],35)][ljust([ansi(nc,[v(##)])],38)][ansi(v(border_color),|%r|)])]
&OWNER Cargo Transport Parent=Administration Transportation Corp.
&TYPE Cargo Transport Parent=Type II
@DESCRIBE Cargo Transport Parent=%b[ansi(v(border_color),[repeat(_,74)]%r/)]%b[ljust([ansi(v(name_color),[v(type)] Cargo Transport)],73)][ansi(v(border_color),\\%r|[repeat(-,74)]|%r|%b)][ljust([ansi(v(title_color),Owner:)] [v(owner)],73)][ansi(v(border_color),|%r|%b)][ljust([ansi(v(title_color),Storage Capacity:)] [v(max_capacity)],36)][ljust([ansi(v(title_color),Capacity Used:)] [v(capacity_used)],37)][ansi(v(border_color),|%r|[repeat(-,74)]|%r|%b)][ljust([ansi(v(title_color),Contents:)],73)][ansi(v(border_color),|%r|)][if([lattr(me/STORAGE_*)],[u(fun_find_contents)],[ljust(%bNone,74)][ansi(v(border_color),|%r|)])][ansi(v(border_color),[repeat(-,74)]|%r|%b)][ljust([ansi(v(title_color),Capacity Remaining:)] [v(capacity_remaining)],73)][ansi(v(border_color),|%r\\[repeat(_,74)]/)]
@set Cargo Transport Parent/DESCRIBE=no_command visual
&CAPACITY_REMAINING Cargo Transport Parent=200
&MAX_CAPACITY Cargo Transport Parent=200
@CARGOCAN Cargo Transport Parent=1
@set Cargo Transport Parent/CARGOCAN=wizard mortal_dark
&CMD_RELOAD Cargo Transport Parent=$reload * of * to *:th [switch([hasattr(me,storage_%1)],1,[switch([lte(%0,[v(storage_%1)])],1,[switch([u(fun_isship,%2)],1,[switch([strmatch([loc(me)],[loc(%2)])],1,[u(fun_reload,%0,%1,%2)],0,[pemit(%#,Error: Must be in same location.)])],0,[pemit(%#,That is not a vessel.)])],0,[pemit(%#,The [name(me)] does not carry that much.)])],0,[pemit(%#,The [name(me)] does not carry that.)])]
&TORP_LIST Cargo Transport Parent=|plasma_torpedo|cutter_torpedo|reaper_missile|implosion_torpedo|photon_torpedo|
&FUN_RELOAD Cargo Transport Parent=[setq(0,[switch([lcstr(%1)],plasma_torpedo,5,photon_torpedo,6,cutter_torpedo,7,implosion_torpedo,8,reaper_missile,9)])][switch([gte(%0,1)],1,[switch([strmatch(|plasma_torpedo|cutter_torpedo|reaper_missile|implosion_torpedo|photon_torpedo|,*|[lcstr(%1)]|*)],1,[u(fun_reload2,%0,%1,%2)],0,[pemit(%#,That is not a valid torpedo.)])],0,[pemit(%#,Must be greater than 1.)])][switch([v(storage_%1)],0,[wipe(me/storage_%1)])][trigger(me/fun_calc_capacity_used)][trigger(me/fun_calc_capacity_remaining)]
&CMD_EXPAND Cargo Transport Parent=$expand cargo transport by *:th [switch([isnum(%0)],1,[switch([lte([mul(%0,1000)],[get(%#/money)])],1,[set(me,max_capacity:[add([v(max_capacity)],%0)])][set(%#,money:[sub([get(%#/money)],[mul(%0,1000)])])][pemit(%#,You expand [name(me)]'s cargo transport to [v(max_capacity)].)][trigger(me/fun_calc_capacity_remaining)][trigger(me/fun_calc_capacity_used)],0,[pemit(%#,You don't have enough money to do that.  [mul(%0,1000)] is required.)])],0,[pemit(%#,You must specify a number.)])]
&FUN_RELOAD2 Cargo Transport Parent=[switch([squish([u(fun_check_can_hold,%0,%1,%2)])],1,[u(fun_reload3,%0,%1,%2)],0,[pemit(%#,The [name(%2)] can't hold that much.)])]
&FUN_RELOAD3 Cargo Transport Parent=[switch([hasattr([get(%2/nav_console)],torps_%q0)],1,[set([get(%2/nav_console)],torps_%q0:[add([get([get(%2/nav_console)]/torps_%q0)],[floor(%0)])])],0,[set([get(%2/nav_console)],torps_%q0:[floor(%0)])])][set(me,storage_%1:[sub([v(storage_%1)],[floor(%0)])])][pemit(%#,You load %0 of [capstr([lcstr(%1)])] into [name(%2)].)]
&FUN_CHECK_CAN_HOLD Cargo Transport Parent=[switch([hasattr([get(%2/nav_console)],torps_%q0)],0,[lte(%0,[extract([hs_get_attr([get(%2/nav_console)],maxtorps)],[inc(%q0)],1)])],1,[lte(%0,[sub([extract([hs_get_attr([get(%2/nav_console)],maxtorps)],[inc(%q0)],1)],[get([get(%2/nav_console)]/torps_%q0)])])])]
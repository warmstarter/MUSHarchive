@create Factory Parent
@set Factory Parent = WIZARD
&CMD_ADD_WORKERS Factory Parent=$add workers *:th [switch([gte(%0,1)],1,[switch([lte([mul(%0,1000)],[get(%#/money)])],1,[set(%#,money:[sub([get(%#/money)],[mul(%0,1000)])])][set(me,max_capacity:[add([v(max_capacity)],[round(%0,0)])])][pemit(%#,You hire [round(%0,0)] additional workers for the workforce.)],0,[pemit(%#,You don't have enough money to do that.)])],0,[pemit(%#,You have to hire a minimum of one worker.)])]
&BETWEEN Factory Parent=[and([gte(%0,%1)],[lte(%0,%2)])]
&FUN_FIND_REQUIRES2 Factory Parent=[iter([v(req_%0)],[ansi(ny,[ljust([capstr([lcstr([extract([edit(##,|,%b)],1,1)])])],15)])]%([ansi(nc,[extract([edit(##,|,%b)],2,1)])]%)%r[space(18)])]
&CMD_COMMOD_INFO Factory Parent=$commod info *:th [switch([u(iscommod,%0)],1,[pemit(%#,[ljust([ansi(hr,Commodity:)],13)] [ansi(h,[capstr([lcstr(%0)])])]%r[ansi(hr,Productivity:)] [ansi(h,[v(production_%0)])]%r[ljust([ansi(hr,Energy Req.:)],13)] [ansi(h,[v(energy_%0)])]%r[ljust([ansi(hr,Description:)],13)] [ansi(h,[v(desc_%0)])]%r[ansi(hr,Required per Unit:)] [u(fun_find_requires2,%0)])],0,[pemit(%#,Invalid commodity.)])]
&CMD_SOURCE_LIST Factory Parent=$source list:th [pemit(%#,[ansi(v(border_color),[repeat(=,76)])]%r[center([ansi(v(title_color),[name(me)] Source List)],76)]%r[ansi(v(border_color),[repeat(=,76)])]%r [iter([edit([v(source_list)],|,%b)],[ljust(##,8)][name(##)]%r)][ansi(v(border_color),[repeat(=,76)])])]
&CMD_SET_SOURCE Factory Parent=$set source *:th [switch([strmatch([u(source_list)],*|%0|*)],1,[set(me,source:%0)][pemit(%#,The commodities are now transferred from [name(%0)] hourly.)],0,[pemit(%#,Invalid source.)])]
&SOURCE_LIST Factory Parent=|
&FUN_ADD_SOURCE Factory Parent=[switch([strmatch([v(source_list)],*|%0|*)],0,[switch([or([hasattr(%0,cargocan)],[strmatch([name(%0)],*Factory*)])],1,[set(me,source_list:[v(source_list)]%0|)][pemit(%#,Source [name(%0)] %(%0%) is now available.)],0,[pemit(%#,That is an invalid source.)])],1,[pemit(%#,That source is already on the list.)])]
&CMD_ADD_SOURCE Factory Parent=$add source *:th [switch([hasflag(%#,Wiz)],1,[switch([strmatch([zone([loc(me)])],[zone([loc(%0)])])],1,[u(fun_add_source,%0)],0,[pemit(%#,Error: Zones do not match.)])],0,[pemit(%#,Permission denied.)])]
&SOURCE Factory Parent=[v(warehouse)]
&CMD_SET_MAX_CAPACITY Factory Parent=$set max capacity *:th [switch([hasflag(%#,Wiz)],1,[u(fun_set_max_capacity,%0)],0,[pemit(%#,Permission denied.)])]
&FUN_ADD_DESTINATION Factory Parent=[switch([strmatch([v(destination_list)],*|%0|*)],0,[switch([hasattr(%0,cargocan)],1,[set(me,destination_list:[v(destination_list)]%0|)][pemit(%#,Destination [name(%0)] %(%0%) is now available.)],0,[pemit(%#,That is an invalid destination.)])],1,[pemit(%#,That destination is already on the list.)])]
&CMD_ADD_DESTINATION Factory Parent=$add destination *:th [switch([hasflag(%#,Wiz)],1,[switch([strmatch([zone([loc(me)])],[zone([loc(%0)])])],1,[u(fun_add_destination,%0)],0,[pemit(%#,Error: Zones do not match.)])],0,[pemit(%#,Permission denied.)])]
&CMD_SET_DESTINATION Factory Parent=$set destination *:th [switch([strmatch([v(destination_list)],*|%0|*)],1,[set(me,warehouse:%0)][pemit(%#,The commodities are now transferred to [name(%0)] hourly.)],0,[pemit(%#,Invalid destination.)])]
&DESTINATION_LIST Factory Parent=|
&CMD_DESTINATION_LIST Factory Parent=$destination list:th [pemit(%#,[ansi(v(border_color),[repeat(=,76)])]%r[center([ansi(v(title_color),[name(me)] Destination List)],76)]%r[ansi(v(border_color),[repeat(=,76)])]%r [iter([edit([v(destination_list)],|,%b)],[ljust(##,8)][name(##)]%r)][ansi(v(border_color),[repeat(=,76)])])]
&FUN_SET_MAX_CAPACITY Factory Parent=[set(me,max_capacity:%0)][pemit(%#,[name(me)] now has %0 available workers.)]
&FUN_SET_FARM Factory Parent=[set(me,farm:%0)][pemit(%#,[name(me)] is now using [name(%0)] %(%0%) as a Farm.)]
&CMD_SET_FARM Factory Parent=$set farm *:th [switch([hasflag(%#,Wiz)],1,[switch([strmatch([zone([loc(me)])],[zone([loc(%0)])])],1,[u(fun_set_farm,%0)],0,[pemit(%#,Error: Zones do not match, cannot use that Farm.)])],0,[pemit(%#,Permission denied.)])]
&FUN_SET_PUMP Factory Parent=[set(me,pump:%0)][pemit(%#,[name(me)] is now using [name(%0)] %(%0%) as a Water Pump.)]
&CMD_SET_PUMP Factory Parent=$set pump *:th [switch([hasflag(%#,Wiz)],1,[switch([strmatch([zone([loc(me)])],[zone([loc(%0)])])],1,[u(fun_set_pump,%0)],0,[pemit(%#,Error: Zones do not match, cannot use that Water Pump.)])],0,[pemit(%#,Permission denied.)])]
&FUN_SET_POWER_PLANT Factory Parent=[set(me,power_plant:%0)][pemit(%#,[name(me)] is now using [name(%0)] %(%0%) as a Power Plant.)]
&CMD_SET_POWER_PLANT Factory Parent=$set power plant *:th [switch([hasflag(%#,Wiz)],1,[switch([strmatch([zone([loc(me)])],[zone([loc(%0)])])],1,[u(fun_set_power_plant,%0)],0,[pemit(%#,Error: Zones do not match, cannot use that Power Plant.)])],0,[pemit(%#,Permission denied.)])]
&CREDITS Factory Parent=Dave@GalacticMUSH (davemilford@home.com)
@set Factory Parent/CREDITS=no_command
@DESCRIBE Factory Parent=%b[squish([u(fun_calc_power_status)][u(fun_calc_power_available)][edit([set(me,power_needed:0)],%b,)][u(fun_calc_power_needed)])][ansi(v(border_color),[repeat(_,74)]%r/)]%b[ljust([ansi(v(name_color),[v(planet)] Factory)],73)][ansi(v(border_color),\\%r|[repeat(-,74)]|%r|)]%b[ljust([ansi(v(title_color),Owner:)] [v(owner)],73)][ansi(v(border_color),|%r|)]%b[ljust([ansi(v(title_color),Source:)] [switch([hasattr(me,source)],1,[name([v(source)])],0,None)],36)][ljust([ansi(h,Destination:)] [switch([hasattr(me,warehouse)],1,[name([v(warehouse)])],0,None)],37)][ansi(v(border_color),|%r|%b)][ljust([ansi(v(title_color),Work Force:)] [v(max_capacity)],36)][ljust([ansi(v(title_color),Employed Workers:)] [v(current_capacity)] %([mul([fdiv([v(current_capacity)],[v(max_capacity)])],100)]%%%),37)][ansi(v(border_color),|%r|[repeat(-,74)]|%r|)]%b[ljust([ansi(v(title_color),Food Available:)] [switch([hasattr(me,farm)],1,[switch([hasattr([v(farm)],food_[num(me)])],1,[u(fun_calc_food_available)],0,0)],0,None)],36)][ljust([ansi(v(title_color),Water Available:)] [switch([hasattr(me,pump)],1,[switch([hasattr([v(pump)],water_[num(me)])],1,[u(fun_calc_water_available)],0,0)],0,None)],37)][ansi(v(border_color),|%r|%b)][ljust([ansi(v(title_color),Food Needed%b%b%b:)] [switch([hasattr(me,farm)],1,[u(fun_show_food_needed)],0,N/A)],36)][ljust([ansi(v(title_color),Water Needed%b%b%b:)] [switch([hasattr(me,pump)],1,[u(fun_show_water_needed)],0,N/A)],37)][ansi(v(border_color),|%r|)]%b[ljust([ansi(v(title_color),Worker Health%b:)] [u(fun_show_worker_health)] %([mul([fdiv([v(worker_health)],10)],100)]%%%),73)][ansi(v(border_color),|%r|[repeat(-,74)]|%r|)]%b[ljust([ansi(v(title_color),Power Plant:)]%b[switch([hasattr(me,power_plant)],1,[mid([name([v(power_plant)])],0,23)],0,None)],36)][ljust([ansi(v(title_color),Status[space(6)]:)]%b[u(fun_power_status)],37)][ansi(v(border_color),|%r|)]%b[ljust([ansi(v(title_color),Power Supplied%b:)]%b[switch([hasattr(me,power_plant)],1,[u(fun_power_supplied)],0,None)],36)][ljust([ansi(v(title_color),Power Used%b%b:)]%b[v(used_power)],37)][ansi(v(border_color),|%r|)]%b[ljust([ansi(v(title_color),Power Available:)]%b[v(free_power)],36)][ljust([ansi(v(title_color),Power Needed:)]%b[v(power_needed)],37)][ansi(v(border_color),|%r|[repeat(-,74)]|%r|)]%b[ljust([ansi(v(title_color),Currently Manufacturing:)],73)][ansi(v(border_color),|%r|)]%b[ljust([ansi(v(subtitle_color),Commodity)],20)][ljust([ansi(v(subtitle_color),Workers)],9)][ljust([ansi(ny,Power)],8)][ljust([ansi(v(subtitle_color),Power Req.)],15)][ljust([ansi(v(subtitle_color),Hourly Production)],21)][ansi(v(border_color),|%r|)]%b[u(fun_find_manufacturing)][ljust([ansi(v(title_color),Idle Workers:)] [v(capacity_remaining)],73)][ansi(v(border_color),|)]%r[ansi(v(border_color),\\[repeat(_,74)]/)]
@set Factory Parent/DESCRIBE=no_command visual
&PLANET Factory Parent=Factory Parent
&OWNER Factory Parent=Administration Production Corp.
&MAX_CAPACITY Factory Parent=10
&CURRENT_CAPACITY Factory Parent=0
&FUN_POWER_STATUS Factory Parent=[switch([v(powered)],yes,[switch([gt([v(power_needed)],[v(used_power)])],1,[ansi(hr,Insufficient Power)],0,[ansi(hg,Powered)])],no,[ansi(hr,No Power)],insufficient,[ansi(hy,Insufficient Power)],None)]
&POWERED Factory Parent=no
&FREE_POWER Factory Parent=0
&FUN_POWER_SUPPLIED Factory Parent=[get([v(power_plant)]/POWER_[num(me)])]
&FUN_CALC_POWER_NEEDED Factory Parent=[set(me,power_needed:0)][iter([lattr(me/PRODUCING_*)],[set(me,power_needed:[add([v(power_needed)],[mul([v(##)],[v(energy_[edit(##,PRODUCING_,)])])])]
&POWER_NEEDED Factory Parent=0
&CAPACITY_REMAINING Factory Parent=0
&FUN_CALC_PROD Factory Parent=[switch([and([gte([v(%0_alloc)],[mul([v(energy_%0)],[v(producing_%0)])])],[u(fun_calc_got_enough_material,%0,[v(producing_%0)])])],1,[mul([mul([v(production_%0)],[v(producing_%0)])],[fdiv([v(worker_health)],10)])],0,0)]
&FUN_SET_CAPACITY Factory Parent=[set(me,current_capacity:%0)][u(fun_calc_capacity_needed)][pemit(%#,%0 workers are now available.)][switch([lt(%0,[v(capacity_needed)])],1,{[pemit(%#,Not enough workers, resetting allocations.)][iter([lattr(me/PRODUCING_*)],[set(me,##:0)])]})][u(fun_calc_capacity_remaining)][u(fun_calc_power_used)][u(fun_calc_power_needed)][u(fun_calc_power_available)][u(fun_calc_food_needed)][u(fun_calc_water_needed)]
&FUN_CALC_CAPACITY_REMAINING Factory Parent=[set(me,capacity_remaining:[v(current_capacity)])][iter([lattr(me/PRODUCING_*)],[set(me,capacity_remaining:[sub([v(capacity_remaining)],[v(##)])])]
&FUN_CALC_ENERGY Factory Parent=[mul([v(energy_%0)],[v(producing_%0)])]
&FUN_CALC_POWER_AVAILABLE Factory Parent=[set(me,FREE_POWER:[sub([switch([hasattr(me,power_plant)],1,[u(fun_power_supplied)],0,0)],[v(used_power)])])]
&FUN_CALC_CAPACITY_NEEDED Factory Parent=[set(me,capacity_needed:0)][iter([lattr(me/PRODUCING_*)],[set(me,capacity_needed:[add([v(capacity_needed)],[v(##)])])]
&CAPACITY_NEEDED Factory Parent=0
&FUN_POWER_COLOR Factory Parent=[switch([lt([v([edit(%0,PRODUCING_,)]_alloc)],[u(fun_calc_energy,[edit(%0,PRODUCING_,)])])],1,nr,0,[switch([gt([v([edit(%0,PRODUCING_,)]_alloc)],[u(fun_calc_energy,[edit(%0,PRODUCING_,)])])],1,nm,0,ng)])]
&FUN_CALC_POWER_STATUS Factory Parent=[switch([hasattr(me,power_plant)],1,[set(me,powered:yes)],0,[set(me,powered:no)])]
&FUN_ALLOC_POWER Factory Parent=[set(me,%0_alloc:%1)][pemit(%#,[capstr([lcstr(%0)])] now has %1 power.)][u(fun_calc_power_used)][u(fun_calc_power_available)]
&FUN_CALC_POWER_USED Factory Parent=[set(me,used_power:0)][iter([lattr(me/*_ALLOC)],[set(me,used_power:[add([v(used_power)],[v(##)])])]
&POWER_USED Factory Parent=0
&USED_POWER Factory Parent=0
&FUN_PROD_CYCLE Factory Parent=[u(fun_check_material)][iter([lattr(me/PRODUCING_*)],[switch([hasattr(me,STORAGE_[edit(##,PRODUCING_,)])],1,[set(me,STORAGE_[edit(##,PRODUCING_,)]:[add([v(storage_[edit(##,PRODUCING_,)])],[u(fun_calc_prod,[edit(##,PRODUCING_,)])])])][u(fun_reduce_materials,##)],0,[set(me,STORAGE_[edit(##,PRODUCING_,)]:[u(fun_calc_prod,[edit(##,PRODUCING_,)])])][u(fun_reduce_materials,##)])][set(me,lastprod:[secs()])][trigger(me/fun_move_commods)][u(fun_check_material)]
&LASTPROD Factory Parent=933039937
&FUN_WAREHOUSE Factory Parent=[if([lattr(me/STORAGE_*)],%b[iter([lattr(me/STORAGE_*)],[ljust([capstr([lcstr([edit(##,STORAGE_,)])])],30)][u(##)]%r)],None%r)]
&POWER_SWEEP Factory Parent=[u(fun_calc_power_needed)][switch([gt([v(power_needed)],[u(fun_power_supplied)])],1,[emit(Global power shortage.  Resetting allocations.)][iter([lattr(me/PRODUCING_*)],[set(me,##:0)][set(me,[edit(##,PRODUCING_,)]_alloc:0)])][u(fun_calc_power_used)][u(fun_calc_power_needed)][u(fun_calc_power_available)][u(fun_calc_capacity_remaining)])]
&FUN_CALC_FOOD_AVAILABLE Factory Parent=[get([v(farm)]/food_[num(me)])]
&FUN_CALC_WATER_AVAILABLE Factory Parent=[get([v(pump)]/water_[num(me)])]
&FUN_CALC_FOOD_NEEDED Factory Parent=[set(me,food_needed:[v(current_capacity)])]
&FOOD_NEEDED Factory Parent=0
&FUN_CALC_WATER_NEEDED Factory Parent=[set(me,water_needed:[v(current_capacity)])]
&WATER_NEEDED Factory Parent=0
&FUN_SHOW_FOOD_NEEDED Factory Parent=[switch([gte([u(fun_calc_food_available)],[v(food_needed)])],1,[ansi(ng,[v(food_needed)])],0,[ansi(nr,[v(food_needed)])]
&FUN_SHOW_WATER_NEEDED Factory Parent=[switch([gte([u(fun_calc_water_available)],[v(water_needed)])],1,[ansi(ng,[v(water_needed)])],0,[ansi(nr,[v(water_needed)])]
&FUN_CALC_WORKER_HEALTH Factory Parent=[set(me,health_buffer:[v(worker_health)])][u(fun_calc_food_needed)][u(fun_calc_food_available)][switch([gte([u(fun_calc_water_available)],[v(water_needed)])][gte([u(fun_calc_food_available)],[v(food_needed)])],11,[set(me,health_buffer2:10)][switch([lt([v(health_buffer)],[v(health_buffer2)])],1,[u(fun_improve_health)],0,[set(me,worker_health:10)])],10,[u(fun_hurt_health)],01,[u(fun_hurt_health)],00,[u(fun_hurt_health)])]
&FUN_IMPROVE_HEALTH Factory Parent=[set(me,worker_health:[add([v(worker_health)],0.2)])][emit(The workers' health at [name(me)] improves.)][u(fun_calc_food_needed)][u(fun_calc_water_needed)]
&FUN_HURT_HEALTH Factory Parent=[switch([strmatch([v(worker_health)],0)],0,[set(me,worker_health:[sub([v(worker_health)],0.2)])][emit(The workers at [name(me)] demand food and water.)],1,[emit(The workers at [name(me)] demand food and water.%r1 worker has died.)][set(me,current_capacity:[sub([v(current_capacity)],1)])][set(me,max_capacity:[sub([v(max_capacity)],1)][iter([lattr(me/PRODUCING_*)],[switch([hasattr(me,remove_buffer)],0,[set(me,remove_buffer:1)][set(me,##:[sub([v(##)],1)])])])])][u(fun_calc_food_needed)][u(fun_calc_water_needed)]
&WORKER_HEATLH Factory Parent=10
&HEALTH_BUFFER Factory Parent=10
&HEALTH_BUFFER2 Factory Parent=10
&WORKER_HEALTH Factory Parent=10
&FUN_SHOW_WORKER_HEALTH Factory Parent=[if([strmatch([v(worker_health)],0)],[ansi(hr,Dying)])][if([u(between,[v(worker_health)],0.1,4.9)],[ansi(hr,Bad)])][if([u(between,[v(worker_health)],5.0,7.5)],[ansi(hy,Fair)])][if([u(between,[v(worker_health)],7.6,8.9)],[ansi(hg,Good)])][if([u(between,[v(worker_health)],9.0,10.0)],[ansi(hg,Excellent)])]
&SWEEP Factory Parent=[wait(1,{[lit([trigger(me/power_sweep)][trigger(me/fun_prod_cycle)][trigger(me/fun_calc_worker_health)][trigger(me/fun_check_material)])]})]
&FUN_CALC_POWER_NEEDED_ Factory Parent=[iter([lattr(me/PRODUCING_*)],[add([v(power_needed)],[mul([v(##)],[v([edit(##,PRODUCING_,)]_energy)])]
&CMD_ALLOCATE Factory Parent=$alloc *=*:th [switch({[u(iscommod,%0)][cand([lte(%1,[add([v(free_power)],[v(%0_alloc)])])],[gte(%1,0)])]},11,[u(fun_alloc_power,%0,%1)],10,[pemit(%#,Not enough power to do that.)],01,[pemit(%#,That is not a valid commodity.)],00,[pemit(%#,That is not a valid commodity.)])]
&CMD_SET_WORK_FORCE Factory Parent=$set work force *:th [switch([isnum(%0)][lte(%0,[v(max_capacity)])][gte(%0,0)],111,[u(fun_set_capacity,%0)][u(fun_calc_food_needed)][u(fun_calc_water_needed)],110,[pemit(%#,Number must be above 0.)],101,[pemit(%#,Number is too high.)],100,[pemit(%#,Number is too high.)],[pemit(%#,Argument must be a number.)])]
&CMD_SET_WORK_FORCE2 Factory Parent=$employ *:th [switch([isnum(%0)][lte(%0,[v(max_capacity)])][gte(%0,0)],111,[u(fun_set_capacity,%0)][u(fun_calc_food_needed)][u(fun_calc_water_needed)],110,[pemit(%#,Number must be above 0.)],101,[pemit(%#,Number is too high.)],100,[pemit(%#,Number is too high.)],[pemit(%#,Argument must be a number.)])]
&FUN_MOVE_COMMODS Factory Parent=[iter([lattr(me/STORAGE_*)],[switch([u(iscommod,[edit(##,STORAGE_,)])],1,[set([v(warehouse)],##:[switch([hasattr([v(warehouse)],##)],1,[add([get([v(warehouse)]/##)],[v(##)])],0,[v(##)])])][wipe(me/##)])][trigger([v(warehouse)]/fun_calc_capacity_used)][trigger([v(warehouse)]/fun_calc_capacity_remaining)])]
&VERSION Factory Parent=2.1
@set Factory Parent/VERSION=no_command
&CMD_STOREHOUSE Factory Parent=$storehouse:th [pemit(%#,[ansi(v(border_color),[repeat(=,76)])]%r[center([ansi(h,Storehouse Contents)],76)]%r[ansi(v(border_color),[repeat(=,76)])]%r[if([lattr([v(source)]/STORAGE_*)],[u([v(source)]/fun_find_contents2)],None%r)][ansi(v(border_color),[repeat(=,76)])]
&CAPACITY_AVAILABLE Factory Parent=414
&FUN_FIND_REQUIRES Factory Parent=[iter([v(req_%0)],[ansi(ny,[ljust([capstr([lcstr([extract([edit(##,|,%b)],1,1)])])],15)])]%([ansi(nc,[extract([edit(##,|,%b)],2,1)])]%)%r[space(50)])]%r
&CMD_COMMOD_LIST Factory Parent=$commod list:th [pemit(%#,[ansi(hb,[repeat(=,76)])]%r[center([ansi(h,Producable Commodities)],76)]%r[ansi(hb,[repeat(=,76)])]%r%b[iter([v(commodlist)],[capstr([lcstr(##)])],|,%r)]%r%r[ansi(h,Type)] [ansi(hr,commod info <commod>)] [ansi(h,for information.)]%r[ansi(hb,[repeat(=,76)])]
&FUN_FIND_COMMOD_LIST Factory Parent=%b[iter([v(commodlist)],[ljust([ansi(ng,[capstr([lcstr(##)])])],20)][ljust([v(production_##)],15)][ljust([v(energy_##)],15)][u(fun_find_requires,##)]
&CMD_MANUFACTURE Factory Parent=$manufacture *=*:th [switch([u(iscommod,%0)][lte(%1,[add([v(capacity_remaining)],[switch([hasattr(me,producing_%0)],1,[v(producing_%0)],0,1)])])][gte(%1,0)],111,[u(fun_set_manufacturing,%0,%1)],110,[pemit(%#,Number must be greater than 0.)],101,[pemit(%#,Not enough workers to do that.)],100,[pemit(%#,Not enough workers to do that.)],011,[pemit(%#,That is not a valid commodity.)],001,[pemit(%#,That is not a valid commodity.)],000,[pemit(%#,That is not a valid commodity.)],010,[pemit(%#,That is not a valid commodity.)])][u(fun_calc_capacity_remaining)]
&FUN_SET_MANUFACTURING Factory Parent=[set(me,PRODUCING_%0:%1)][switch([hasattr(me,%0_alloc)],0,[set(me,%0_alloc:0)])][pemit(%#,%1 workers have been assigned to manufacture [capstr([lcstr(%0)])].)][u(fun_calc_power_used)][u(fun_calc_power_needed)][u(fun_calc_power_available)]
&ISCOMMOD Factory Parent=[strmatch([v(commodlist)],*|%0|*)]
&CMD_STOP_MANUFACTURING Factory Parent=$stop manufacturing *:th [switch({[u(iscommod,%0)][hasattr(me,PRODUCING_%0)]},01,{[pemit(%#,That is not a valid material.)]},10,{[pemit(%#,We are not manufacturing that at this time.)]},00,{[pemit(%#,That is not a valid commod.)]},11,{[wipe(me/producing_%0)][pemit(%#,No longer manufacturing [capstr([lcstr(%0)])].)][wipe(me/%0_alloc)][u(fun_calc_power_used)][u(fun_calc_power_needed)][u(fun_calc_power_available)][[u(fun_calc_capacity_remaining)]})]
&FUN_FIND_MANUFACTURING Factory Parent=[if([lattr(me/PRODUCING_*)],{[iter([lattr(me/PRODUCING_*)],[ljust([capstr([lcstr([edit(##,PRODUCING_,)])])],20)][ljust([v(##)],9)][ljust([ansi([u(fun_power_color,##)],[v([edit(##,PRODUCING_,)]_alloc)])],8)][ljust([u(fun_calc_energy,[edit(##,PRODUCING_,)])],15)][ljust([ansi(nc,[u(fun_calc_prod,[edit(##,PRODUCING_,)])])][switch([squish([u(fun_calc_got_enough_material,[edit(##,PRODUCING_,)],[v(##)])])],0,%b[ansi(nb,%[)][ansi(nr,Insuff. Material)][ansi(nb,%])])],21)][ansi(v(border_color),|%r|)])][ansi(v(border_color),[repeat(-,74)]|%r|%b)]},{[ljust([ansi(hr,None)],73)][ansi(v(border_color),|%r|)][ansi(v(border_color),[repeat(-,74)]|%r|%b)]})]
&FUN_CALC_GOT_ENOUGH_MATERIAL Factory Parent=[squish([set(me,current_buff:1)][iter([v(req_%0)],[set(me,buff_[v(current_buff)]:[switch([gte([get([v(source)]/storage_[extract([edit(##,|,%b)],1,1)])],[mul([extract([edit(##,|,%b)],2,1)],[u(fun_calc_prod2,%0)])])],1,1,0,0)][set(me,current_buff:[inc([v(current_buff)])])])])][switch([dec([v(current_buff)])],1,[v(buff_1)],2,[cand([v(buff_1)],[v(buff_2)])],3,[cand([v(buff_1)],[v(buff_2)],[v(buff_3)])],4,[cand([v(buff_1)],[v(buff_2)],[v(buff_3)],[v(buff_4)])],5,[cand([v(buff_1)],[v(buff_2)],[v(buff_3)],[v(buff_4)],[v(buff_5)])])][u(fun_clear_buff)])]
&CURRENT_BUFF Factory Parent=1
&FUN_CLEAR_BUFF Factory Parent=[iter([lattr(me/buff_*)],[wipe(me/##)])]
&FUN_REDUCE_MATERIALS Factory Parent=[iter([v(req_[edit(%0,PRODUCING_,)])],[set([v(source)],storage_[extract([edit(##,|,%b)],1,1)]:[sub([get([v(source)]/storage_[extract([edit(##,|,%b)],1,1)])],[mul([extract([edit(##,|,%b)],2,1)],[u(fun_calc_prod2,[edit(%0,PRODUCING_,)])])])])]
&FUN_CHECK_MATERIAL Factory Parent=[iter([lattr(me/PRODUCING_*)],[switch([squish([u(fun_calc_got_enough_material,[edit(##,PRODUCING_,)],[v(##)])])],0,[emit(Raw material shortage for [capstr([lcstr([edit(##,PRODUCING_,)])])] production.  Halting production.)][set(me,##:0)][u(fun_calc_capacity_remaining)][u(fun_calc_capacity_used)])]
&FUN_CALC_PROD2 Factory Parent=[switch([gte([v(%0_alloc)],[mul([v(energy_%0)],[v(producing_%0)])])],1,[mul([mul([v(production_%0)],[v(PRODUCING_%0)])],[fdiv([v(worker_health)],10)])],0,0)]
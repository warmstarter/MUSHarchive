@create Market Parent
@lock/Basic Market Parent==me
@set Market Parent = WIZARD
@set Market Parent = SAFE
@set Market Parent = NO_COMMAND
&BANNED_LIST Market Parent=|
&CMD_ADD_COMMOD Market Parent=$add * of * from *:th [if(hasattr(%2,locked),[pemit(%#,The [name(%2)] is locked.)],[switch([u(fun_isoperator)],1,[switch([hasattr(%2,cargocan)],0,[pemit(%#,Invalid source.)],1,[switch([hasattr(%2,storage_%1)],1,[switch([lte(%0,[get(%2/storage_%1)])],1,[u(fun_add_commods,%0,%1,%2)],0,[pemit(%#,Error: %2 does not contain that much material.)])],0,[pemit(%#,Error: %2 does not contain that material.)])],0,[pemit(%#,Permission denied.)])])]
&CMD_ADD_MONEY Market Parent=$add money *:th [switch([gt(%0,0)],1,[switch([u(fun_isoperator)],1,[switch([gt(%0,0)],1,[switch([lte(%0,[get(%#/money)])],1,[set(me,money:[add([v(money)],%0)])][pemit(%#,You add %0 money to the market system, leaving the total at [v(money)].)][set(%#,money:[sub([get(%#/money)],%0)])],0,[pemit(%#,You don't have enough money to do that.)])],0,[pemit(%#,Error: number must be greater than 0.)])],0,[pemit(%#,Permission denied.)])],0,[pemit(%#,Error: Number must be greater than 0.)])]
&CMD_BUY Market Parent=$buy * of *=*:th [if(hasattr(%2/locked),[pemit(%#,The [name(%2)] is locked.)],[switch([cand([hasattr(%2,cargocan)],[hasflag(%2,wiz)])],1,[switch([lte(%0,[get(%2/capacity_remaining)])],1,[switch([hasattr(me,storage_%1)],1,[switch([lte(%0,[v(storage_%1)])],1,[switch([hasattr(me,min_%1)],1,[switch([gte([sub([v(storage_%1)],%0)],[v(min_%1)])],1,[switch([u(fun_isbanned,%#)],0,[u(fun_buy,[secure(%0)],[secure(%1)],[secure(%2)])][u(fun_log_journal,sold,[secure(%0)],[secure(%1)])],1,[pemit(%#,You are banned from using this market.)])],0,[pemit(%#,The market will not sell you that much of %1.)])],0,[switch([u(fun_isbanned,%#)],0,[u(fun_log_journal,sold,[secure(%0)],[secure(%1)])][u(fun_buy,[secure(%0)],[secure(%1)],[secure(%2)])],1,[pemit(%#,You are banned from using this market.)])])],0,[pemit(%#,The [name(me)] does not have that much.)])],0,[pemit(%#,The [name(me)] does not carry [capstr([lcstr(%1)])].)])],0,[pemit(%#,The [name(%2)] cannot hold that much.)])],0,[pemit(%#,Invalid destination.)])])]
&CMD_CALC Market Parent=$calc * of *:th [switch([hasattrp(me,production_%1)],0,[pemit(%#,Invalid item.)],1,[switch([or([hasattrp(me,selling_price_%1)],[hasattrp(me,buying_price_%1)])],1,[pemit(%#,%0 units of [capstr([lcstr(%1)])] will cost [u(fun_calc_selling_price,[secure(%0)],[secure(%1)])] credits to buy from the market, and you will get [u(fun_calc_buying_price,[secure(%0)],[secure(%1)])] credits for selling %0 units to the market.)],0,[pemit(%#,That item is not for sale.)])]
&CMD_CHECK_MONEY Market Parent=$check money:th [pemit(%#,The [name(me)] currently has [ansi(h,[v(money)])] credits to spend.)]
&CMD_DELETE_ENTRY Market Parent=$delete entry *:th [switch([u(fun_isoperator)],1,[switch([hasattr(me,JOURNAL_%0)],0,[pemit(%#,No such entry.)],1,[wipe(me/JOURNAL_%0)][iter([lattr(me/JOURNAL_*)],[switch([gt([edit(##,JOURNAL_,)],%0)],1,[set(me,JOURNAL_[dec([edit(##,JOURNAL_,)])]:[v(##)])][wipe(me/##)])])][set(me,current_journal:[dec([v(current_journal)])])][pemit(%#,Journal entry %0 removed.)])],0,[pemit(%#,Permission denied.)])]
&CMD_DEL_MONEY Market Parent=$del money *:th [switch([gt(%0,0)],1,[switch([u(fun_isoperator)],1,[switch([gt(%0,0)],1,[switch([lte(%0,[v(money)])],1,[set(me,money:[sub([v(money)],%0)])][pemit(%#,You take %0 money to the market system, leaving the total at [v(money)].)][set(%#,money:[add([get(%#/money)],%0)])],0,[pemit(%#,The market doesn't have enough money to do that.)])],0,[pemit(%#,Error: number must be greater than 0.)])],0,[pemit(%#,Permission denied.)])],0,[pemit(%#,Error: Number must be greater than 0.)])]
&CMD_FOR_SALE Market Parent=$for sale:th [pemit(%#,[ansi(v(border_color),[repeat(=,76)])]%r[center([ansi(v(title_color),Items For Sale)],76)]%r[ansi(v(border_color),[repeat(=,76)])]%r%b[ansi(u(subtitle_color)u,Item[space(21)]Amount[space(4)]Price per Unit[space(26)])]%r[u(fun_find_contents)][ansi(v(border_color),[repeat(=,76)])]
&CMD_LIST_RESTRICTIONS Market Parent=$list restrictions:th [pemit(%#,[ansi(v(border_color),[repeat(=,76)])]%r[ansi(v(title_color),[center([name(me)] Restrictions,76)])]%r[ansi(v(border_color),[repeat(=,76)])]%r[if([or([lattr(me/MIN_*)],[lattr(me/MAX_*)],[hasattr(me,banned_list)])],[u(fun_list_restrictions)],None%r)][ansi(v(border_color),[repeat(=,76)])]
&CMD_REMOVE_COMMOD Market Parent=$remove * of * to *:th [if(hasattr(%2,locked),[pemit(%#,The [name(%2)] is locked.)],[switch([u(fun_isoperator)],1,[switch([hasattr(%2,cargocan)],0,[pemit(%#,Invalid source.)],1,[switch([hasattr(me,storage_%1)],1,[switch([lte(%0,[v(storage_%1)])],1,[u(fun_remove_commods,%0,%1,%2)],0,[pemit(%#,Error: [name(me)] does not contain that much material.)])],0,[pemit(%#,Error: [name(me)] does not contain that material.)])],0,[pemit(%#,Permission denied.)])])]
&CMD_RESTRICT Market Parent=$restrict * storage of * to *:th [switch([u(fun_isoperator)],1,[switch([strmatch(|min|max|,*|%0|*)],1,[switch([hasattrp(me,production_%1)],1,[switch([and([isnum(%2)],[gt(%2,0)])],1,[u(fun_restrict,[secure(%0)],[secure(%1)],[secure(%2)])],0,[pemit(%#,Can only restrict to numbers greater than Zero.)])],0,[pemit(%#,That is not a valid commodity or material.)])],0,[pemit(%#,That is not a valid restriction type.)])],0,[pemit(%#,Permission denied.)])]
&CMD_RESTRICT_PERSON Market Parent=$restrict * from use:th [switch([u(fun_isoperator)],1,[switch([hastype(*%0,player)],1,[switch([u(fun_isbanned,[num(*%0)])],0,[u(fun_restrict_person,[num(*%0)])],1,[pemit(%#,That player is already restricted.)])],#-1,[pemit(%#,That is not a player.)])],0,[pemit(%#,Permission denied.)])]
&CMD_SELL Market Parent=$sell * of *=*:th [if(hasattr(%2,locked),[pemit(%#,The [name(%2)] is locked.)],[switch([cand([hasattr(%2,cargocan)],[hasflag(%2,wiz)])],1,[switch([hasattr(%2,storage_%1)],1,[switch([lte(%0,[get(%2/storage_%1)])],1,[switch([hasattr(me,max_%1)],1,[switch([lte([add(%0,[if([hasattr(me,storage_%1)],[v(storage_%1)],0)])],[v(max_%1)])],1,[switch([u(fun_isbanned,%#)],0,[u(fun_log_journal,bought,[secure(%0)],[secure(%1)])][u(fun_sell,[secure(%0)],[secure(%1)],[secure(%2)])],1,[pemit(%#,You are banned from using this market.)])],0,[pemit(%#,The market does not want that much of %1.)])],0,[switch([u(fun_isbanned,%#)],0,[u(fun_log_journal,bought,[secure(%0)],[secure(%1)])][u(fun_sell,[secure(%0)],[secure(%1)],[secure(%2)])],1,[pemit(%#,You are banned from using this market.)])])],0,[pemit(%#,The [name(%2)] does not have that much.)])],0,[pemit(%#,The [name(%2)] does not have [capstr([lcstr(%1)])].)])],0,[pemit(%#,Invalid source.)])])]
&CMD_SET_BUYING_PRICE Market Parent=$set buying price *=*:th [switch([gt(%1,0)],1,[switch([u(fun_isoperator)],1,[switch([hasattrp(me,production_%0)],1,[set(me,buying_price_%0:%1)][pemit(%#,The [name(me)] now buys [capstr([lcstr(%0)])]'s for %1 credits.)],0,[pemit(%#,No such material or commodity.)])],0,[pemit(%#,Permission denied.)])],0,[pemit(%#,Error: Number must be greater than 0.)])]
&CMD_SET_OPERATOR Market Parent=$set operator *:th [switch([u(fun_isoperator)],1,[set(me,operator:%0)][pemit(%#,[name(*%0)] %(%0%) is now the [name(me)] operator.)],0,[pemit(%#,Permission denied.)])]
&CMD_SET_PRICE Market Parent=$set price *=*:th [switch([gt(%1,0)],1,[switch([u(fun_isoperator)],1,[switch([hasattrp(me,production_%0)],1,[set(me,selling_price_%0:%1)][set(me,buying_price_%0:%1)][pemit(%#,You set [capstr([lcstr(%0)])]'s buying and selling price to %1 credits.)],0,[pemit(%#,No such material or commodity.)])],0,[pemit(%#,Permission denied.)])],0,[pemit(%#,Error: Number must be greater than 0.)])]
&CMD_SET_SELLING_PRICE Market Parent=$set selling price *=*:th [switch([gt(%1,0)],1,[switch([u(fun_isoperator)],1,[switch([hasattrp(me,production_%0)],1,[set(me,selling_price_%0:%1)][pemit(%#,The [name(me)] now sells [capstr([lcstr(%0)])]'s for %1 credits.)],0,[pemit(%#,No such material or commodity.)])],0,[pemit(%#,Permission denied.)])],0,[pemit(%#,Error: Number must be greater than 0.)])]
&CMD_UNRESTRICT Market Parent=$unrestrict * storage of *:th [switch([u(fun_isoperator)],1,[switch([strmatch(|min|max|,*|%0|*)],1,[switch([or([hasattr(me,min_%1)],[hasattr(me,max_%1)])],1,[u(fun_unrestrict,[secure(%0)],[secure(%1)])],0,[pemit(%#,That is not a valid commodity or material.)])],0,[pemit(%#,That is not a valid restriction type.)])],0,[pemit(%#,Permission denied.)])]:
&CMD_UNRESTRICT_PERSON Market Parent=$unrestrict * from use:th [switch([u(fun_isoperator)],1,[switch([hastype(*%0,player)],1,[switch([u(fun_isbanned,[num(*%0)])],1,[u(fun_unrestrict_person,[num(*%0)])],0,[pemit(%#,That player is not restricted.)])],#-1,[pemit(%#,That is not a player.)])],0,[pemit(%#,Permission denied.)])]
&CMD_VIEW_JOURNAL Market Parent=$view journal*:th [switch([u(fun_isoperator)],1,[pemit(%#,[repeat([ansi(v(border_color),=)],76)]%r[center([ansi(v(title_color),Financial Journal for [name(me)])],76)]%r[repeat([ansi(v(border_color),=)],76)]%r%b[if([lattr(me/JOURNAL_*)],[iter([sort([lattr(me/JOURNAL_*)])],[ansi(h,[edit(##,JOURNAL_,)]:)]%b%b[extract([v(##)],1,1)] of [ansi(nc,[extract([v(##)],2,1)])] of [ansi(nc,[extract([v(##)],3,1)])] [switch([extract([v(##)],1,1)],sold,to,from)] [ansi(ny,[extract([v(##)],4,1)])] for [ansi(nw,[extract([v(##)],5,1)])] at [ansi(ng,[extract([v(##)],6,5)])]%r)],None%r)][repeat([ansi(v(border_color),=)],76)]
&CREDITS Market Parent=Dave@GalacticMUSH [EMAIL: davemilford@home.com] [ICQ: 8516328]
@set Market Parent/CREDITS=no_command
&CURRENT_JOURNAL Market Parent=0
@DESCRIBE Market Parent=The market is bustling. There are seemingly endless rows of tables with vendors buying and selling various things. You see a large console that directs the sales infront of you.
@set Market Parent/DESCRIBE=no_command visual
&FUN_ADD_COMMODS Market Parent=[switch([gt(%0,0)],1,[switch([strmatch([loc(me)],[loc(%2)])],1,[switch([hasattr(me,storage_%1)],1,[set(me,storage_%1:[add([v(storage_%1)],%0)])],0,[set(me,storage_%1:%0)])][set(%2,storage_%1:[sub([get(%2/storage_%1)],%0)])][switch([get(%2/storage_%1)],0,[wipe(%2/storage_%1)])][trigger(%2/fun_calc_capacity_used)][trigger(%2/fun_calc_capacity_remaining)][pemit(%#,You add %0 of %2 from [name(%2)].)],0,[pemit(%#,Error: Must be in same location.)])],0,[pemit(%#,Error: Number must be greater than 0.)])]
&FUN_BUY Market Parent=[switch([strmatch([loc(me)],[loc(%2)])],1,[switch([gt(%0,0)],1,[switch([lte([u(fun_calc_selling_price,%0,%1)],[get(%#/money)])],1,[set(me,money:[add([v(money)],[u(fun_calc_selling_price,%0,%1)])])][set(%#,money:[sub([get(%#/money)],[u(fun_calc_selling_price,%0,%1)])])][set(me,storage_%1:[sub([v(storage_%1)],%0)])][switch([v(storage_%1)],0,[wipe(me,storage_%1)])][switch([hasattr(%2,storage_%1)],1,[set(%2,storage_%1:[add([get(%2/storage_%1)],%0)])],0,[set(%2,storage_%1:%0)])][trigger(%2/fun_calc_capacity_used)][trigger(%2/fun_calc_capacity_remaining)][switch([v(storage_%1)],0,[wipe(me/storage_%1)])][pemit(%#,You buy %0 of [capstr([lcstr(%1)])] for [u(fun_calc_selling_price,%0,%1)] credits.)],0,[pemit(%#,You don't have enough money to do that.)])],0,[pemit(%#,Error: Number must be created than 0.)])],0,[pemit(%#,Error: Must be in same location.)])]
&FUN_CALC_BUYING_PRICE Market Parent=[mul([v(buying_price_%1)],%0)]
&FUN_CALC_SELLING_PRICE Market Parent=[mul([v(selling_price_%1)],%0)]
&FUN_FIND_CONTENTS Market Parent=[if([lattr(me/STORAGE_*)],%b[iter([lattr(me/STORAGE_*)],[ansi([switch([strmatch([v(commodlist)],*|[edit(##,STORAGE_,)]|*)],1,ng,0,n)],[ljust([capstr([lcstr([edit(##,STORAGE_,)])])],25)])][ljust([ansi(nc,[v(##)])],10)][switch([or([hasattr(me,selling_price_[edit(##,STORAGE_,)])],[hasattrp(me,selling_price_[edit(##,STORAGE_,)])])],1,[v(selling_price_[edit(##,STORAGE_,)])],0,Not for Sale)]%r)],None.%r)]
&FUN_ISBANNED Market Parent=[strmatch([v(banned_list)],*|%0|*)]
&FUN_ISOPERATOR Market Parent=[or([hasflag(%#,Wiz)],[strmatch([get([v(server)]/[edit(empire(%#),%b,_)]-members)],* %# *)],[strmatch([get([v(server)]/[edit(empire(%#),%b,_)]-ceo)],%#)])]
&FUN_LIST_RESTRICTIONS Market Parent=[switch([hasattr(me,banned_list)],1,[ansi(v(subtitle_color),Banned people:)]%r%b[iter([edit([v(banned_list)],|,%b)],[name(##)]%r)])][if([lattr(me/MAX_*)],[ansi(v(subtitle_color),Maximum Storage:)]%r%b[iter([lattr(me/MAX_*)],[ljust([ansi(n,[capstr([lcstr([edit(##,MAX_,)])])])],20)][ansi(nc,[v(##)])]%r)])][if([and([lattr(me/MIN_*)],[lattr(me/MAX_*)])],%r)][if([lattr(me/MIN_*)],[ansi(v(subtitle_color),Minimum Storage:)]%r%b[iter([lattr(me/MIN_*)],[ljust([ansi(n,[capstr([lcstr([edit(##,MIN_,)])])])],20)][ansi(nc,[v(##)])]%r)])]
&FUN_LOG_JOURNAL Market Parent=[set(me,journal_[inc([v(current_journal)])]:[capstr(%0)] %1 %2 %n [squish([u(fun_calc_[switch(%0,sold,selling,buying)]_price,%1,%2)])] [time()])][set(me,current_journal:[inc([v(current_journal)])])]
&FUN_REMOVE_COMMODS Market Parent=[switch([gt(%0,0)],1,[switch([lte(%0,[get(%2/capacity_remaining)])],1,[switch([strmatch([loc(me)],[loc(%2)])],1,[switch([hasattr(%2,storage_%1)],1,[set(%2,storage_%1:[add([get(%2/storage_%1)],%0)])],0,[set(%2,storage_%1:%0)])][set(me,storage_%1:[sub([v(storage_%1)],%0)])][switch([v(storage_%1)],0,[wipe(me/storage_%1)])][pemit(%#,You remove %0 of %2 to [name(%2)].)][trigger(%2/fun_calc_capacity_used)][trigger(%2/fun_calc_capacity_remaining)],0,[pemit(%#,Error: Must be in same location.)])],0,[pemit(%#,The [name(%2)] cannot hold that much.)])],0,[pemit(%#,Error: Must be greater than 0.)]
&FUN_RESTRICT Market Parent=[switch(%0,min,[set(me,min_%1:%2)][pemit(%#,The [name(me)] will not sell %1 if the storage is below %2.)],max,[set(me,max_%1:%2)][pemit(%#,The [name(me)] will not purchase any more %1 if the storage is above %2.)])]
&FUN_RESTRICT_PERSON Market Parent=[set(me,banned_list:[v(banned_list)]%0|)][pemit(%#,[name(*%0)] is now banned from buying and selling at this market.)]
&FUN_SELL Market Parent=[switch([strmatch([loc(me)],[loc(%2)])],1,[switch([gt(%0,0)],1,[switch([lte([u(fun_calc_buying_price,%0,%1)],[v(money)])],1,[set(me,money:[sub([v(money)],[u(fun_calc_buying_price,%0,%1)])])][set(%#,money:[add([get(%#/money)],[u(fun_calc_buying_price,%0,%1)])])][set(%2,storage_%1:[sub([get(%2/storage_%1)],%0)])][switch([get(%2/storage_%1)],0,[wipe(%2/storage_%1)])][switch([hasattr(me,storage_%1)],1,[set(me,storage_%1:[add([get(me/storage_%1)],%0)])],0,[set(me,storage_%1:%0)])][trigger(%2/fun_calc_capacity_used)][trigger(%2/fun_calc_capacity_remaining)][switch([get(%2/storage_%1)],0,[wipe(%2/storage_%1)])][pemit(%#,You sell %0 of [capstr([lcstr(%1)])] for [u(fun_calc_buying_price,%0,%1)] credits.)],0,[pemit(%#,The [name(me)] doesn't have enough money to do that.)])],0,[pemit(%#,Error: Number must be created than 0.)])],0,[pemit(%#,Error: Must be in same location.)])]
&FUN_UNRESTRICT Market Parent=[switch(%0,min,[wipe(me/min_%1)][pemit(%#,Restriction removed.)],max,[wipe(me/max_%1)][pemit(%#,Restriction removed.)])]
&FUN_UNRESTRICT_PERSON Market Parent=[set(me,banned_list:[edit([v(banned_list)],%0|,)])][pemit(%#,[name(*%0)] is now allowed to buy and sell at this market.)]
&MONEY Market Parent=150000
&OPERATOR Market Parent=[v(none)]
&VERSION Market Parent=3.0
@set Market Parent/VERSION=no_command

<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<meta charset="UTF-8" /><title>Zallafar's Queue Array - Gwen Morse's Wiki</title>
<meta name="generator" content="MediaWiki 1.22.8" />
<meta name="robots" content="noindex,nofollow" />
<link rel="shortcut icon" href="/favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="/wiki/opensearch_desc.php" title="Gwen Morse's Wiki (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://www.gwen-morse.com/wiki/api.php?action=rsd" />
<link rel="alternate" type="application/atom+xml" title="Gwen Morse's Wiki Atom feed" href="/wiki/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="stylesheet" href="http://www.gwen-morse.com/wiki/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.legacy.commonPrint%2Cshared%7Cskins.vector&amp;only=styles&amp;skin=vector&amp;*" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<style>a:lang(ar),a:lang(ckb),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}
/* cache key: homesitewiki-mw_:resourceloader:filter:minify-css:7:caed6998fab899483c805c3e2c432ff5 */</style>

<script src="http://www.gwen-morse.com/wiki/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Zallafar's_Queue_Array","wgTitle":"Zallafar's Queue Array","wgCurRevisionId":283,"wgRevisionId":283,"wgArticleId":67,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":[],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Zallafar's_Queue_Array","wgIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[]});
}</script><script>if(window.mw){
mw.loader.implement("user.options",function(){mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"vector","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"vector-simplesearch":1,"watchcreations":0,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,"watchlisthidebots":0,
"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"useeditwarning":1,"prefershttps":1,"language":"en","variant-gan":"gan","variant-iu":"iu","variant-kk":"kk","variant-ku":"ku","variant-shi":"shi","variant-sr":"sr","variant-tg":"tg","variant-uz":"uz","variant-zh":"zh","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false,"variant":"en"});},{},{});mw.loader.implement("user.tokens",function(){mw.user.tokens.set({"editToken":"+\\","patrolToken":false,"watchToken":false});},{},{});
/* cache key: homesitewiki-mw_:resourceloader:filter:minify-js:7:5a69c7e0fa6557851b6dea8a62efaffb */
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.page.startup","mediawiki.legacy.wikibits","mediawiki.legacy.ajax","skins.vector.js"]);
}</script>
<!--[if lt IE 7]><style type="text/css">body{behavior:url("/wiki/skins/vector/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Zallafar_s_Queue_Array skin-vector action-view vector-animateLayout">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<div id="content" class="mw-body" role="main">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<h1 id="firstHeading" class="firstHeading" lang="en"><span dir="auto">Zallafar's Queue Array</span></h1>
			<div id="bodyContent">
								<div id="siteSub">From Gwen Morse&#039;s Wiki</div>
								<div id="contentSub"><div id="mw-revision-info">Revision as of 21:26, 23 July 2010 by <a href="/wiki/index.php/User:Eachna" title="User:Eachna" class="mw-userlink">Eachna</a>  <span class="mw-usertoollinks">(<a href="/wiki/index.php?title=User_talk:Eachna&amp;action=edit&amp;redlink=1" class="new" title="User talk:Eachna (page does not exist)">Talk</a> | <a href="/wiki/index.php/Special:Contributions/Eachna" title="Special:Contributions/Eachna">contribs</a>)</span></div><br />
				<div id="mw-revision-nav">(<a href="/wiki/index.php?title=Zallafar%27s_Queue_Array&amp;diff=prev&amp;oldid=283" title="Zallafar's Queue Array">diff</a>) <a href="/wiki/index.php?title=Zallafar%27s_Queue_Array&amp;direction=prev&amp;oldid=283" title="Zallafar's Queue Array">← Older revision</a> | Latest revision (diff) | Newer revision → (diff)</div></div>
												<div id="jump-to-nav" class="mw-jump">
					Jump to:					<a href="#mw-navigation">navigation</a>, 					<a href="#p-search">search</a>
				</div>
				<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><pre>
;;
;; From Zallafar of Lusternia (Tim Fredenburg)
;;

###########################################################
#
# QUEUES
#
###########################################################

# TinyFugue doesn't provide any data structures so we fabricate our own.
# These &quot;queues&quot; end up being used as arrays, lists, etc.


###########################################################
# Prioritized queue
#
# The first field in each item is a number, a priority.  The items in the
# queue are sorted by priority, highest to lowest.
# The rest of the fields are the item itself.

# The arguments are the queue name, the priority, and the item.
# The item may have multiple fields.
# Returns the position in the queue that the item went into.
# Macro is invisible to make mecho output more understandable.
/def -i pqueueAdd = \
       /set pqueueAddSpot=1&#160;%; \
       /while ( pqueueAddSpot &lt;= queueSize( {1} ) ) \
               /eval /set pqueueAddQueueItem=$[queueAt( {1}, pqueueAddSpot)]&#160;%; \
;               /eval /echo&#160;%pqueueAddSpot&#160;%pqueueAddQueueItem&#160;%; \
               /if ( $( /phigher&#160;%{2}&#160;%pqueueAddQueueItem ) ) /break&#160;%; /endif&#160;%; \
               /eval /set pqueueAddSpot=$[pqueueAddSpot + 1]&#160;%; \
       /done&#160;%; \
;       /eval /echo Goes in spot&#160;%pqueueAddSpot&#160;%; \
       /queueInsert&#160;%{1}&#160;%pqueueAddSpot&#160;%{-1}

; This macro is used so that in calling it we get the item parsed into its
; separate fields.  Then {2} will be only the item's priority.
; Uses &gt; rather then &gt;= so that the item added first has higher priority in a tie.
/def -i phigher = /result  {1} &gt; {2}
       

###########################################################
# Sorted queue
#
# When squeueAdd is called it will use the defined comparison routine to
# determine where to insert the new item in the queue.  The comparison
# routine must be named &lt;queuename&gt;Compare.  It will be passed two
# strings, new item and existing item, and must return &gt;0 for greater than,
# 0 for equal, and &lt;0 for less than.
#
# Sorts low to high, with a new equal item coming after other equal items.

# The arguments are the queue name, the item to add.
# The item may have multiple fields.
# Returns the position in the queue that the item went into.
# Macro is invisible to make mecho output more understandable.
/def squeueAdd = \
       /let spot=1&#160;%; \
       /while ( spot &lt;= queueSize( {1} ) ) \
               /let existingItem=$[queueAt( {1}, spot)]&#160;%; \
               /let compareFunc=%{1}Compare&#160;%; \
               /eval /test&#160;%{compareFunc}( {-1}, {existingItem} )&#160;%; \
               /if ( {?} &lt; 0 ) /break&#160;%; /endif&#160;%; \
               /let spot=$[spot + 1]&#160;%; \
       /done&#160;%; \
       /queueInsert&#160;%{1}&#160;%spot&#160;%{-1}

/def stringCompare = /return $[ strcmp( {1}, {2} ) ]

/def testCompare = /stringCompare $( /field1&#160;%1 ) $( /field1&#160;%2 )&#160;%; /return {?}


###########################################################
# Queues
#
# A queue is just a series of global variables.  E.g.:
#       queueHerbsThing1
#       queueHerbsThing2
#       ...
# Push means to add at the end of the queue.
# Pop means to remove from the front of the queue.
# The name of the queue (&quot;Herbs&quot; in the example) must always be specified.
#       queuePush( &quot;Herbs&quot;, &quot;calamus&quot; )
#       queuePush( &quot;Herbs&quot;, &quot;horehound&quot; )
#       queueSize( &quot;Herbs&quot; )
#       queuePop( &quot;Herbs&quot; )
# It's OK to use a queue without ever having declared it ahead of time.
# In fact, there is no way to declare a queue.

# Arguments are queue name and thing to push.
# Returns number of items in queue.
# Macro is invisible to make mecho output more understandable.
/def -i queuePush = \
       /eval /eval /set queue%{1}Size $$[{queue%{1}Size} + 1]&#160;%; \
       /eval /eval /set queue%{1}Thing%%{queue%{1}Size}&#160;%{-1}&#160;%; \
       /return queue%{1}Size

# Arguments are queue name and any number of things to push.
/def -i queuePushMany = \
       /set queuePushManyWhich 2&#160;%; \
       /while ( queuePushManyWhich &lt;= {#} ) \
               /eval /queuePush&#160;%1&#160;%%{%queuePushManyWhich}&#160;%; \
               /set queuePushManyItem=$[queueAt( {1}, queuePushManyWhich )]&#160;%; \
               /set queuePushManyWhich $[ queuePushManyWhich + 1 ]&#160;%; \
       /done

# Push an item onto the front of a queue (where it will be the first popped).
; Args: queue name, item
/def queuePushFront = /queueInsert&#160;%1 1 ${-1}

# Args: queue name, regexp to parse items, # of Pn to sort on, comparison func, item
# This is probably best called as a function, to avoid some quoting issues.
# E.g. /test queuePushSorted( &quot;xx&quot;, &quot;(\\d+)&quot;, 1, &quot;sortDecreasing&quot;, &quot;299&quot; )
/def -i queuePushSorted = \
;/echo regexp |%2|&#160;%; \
       /test regmatch( {2}, {-4} )&#160;%; \
;/echo result&#160;%?, P1&#160;%P1&#160;%; \
       /eval /test set( &quot;queuePushValue=%%P%3&quot; )&#160;%; \
;/echo queuePushValue&#160;%queuePushValue&#160;%; \
       /set queuePushSpot=1&#160;%; \
       /while ( queuePushSpot &lt;= queueSize( {1} ) ) \
               /eval /test set( &quot;queuePushQueueItem=$[queueAt( {1}, queuePushSpot)]&quot; )&#160;%; \
               /test regmatch( {2}, {queuePushQueueItem} )&#160;%; \
               /eval /test set( &quot;queuePushItemValue=%%P%3&quot; )&#160;%; \
               /if ( $( /%4&#160;%queuePushValue&#160;%queuePushItemValue ) ) /break&#160;%; /endif&#160;%; \
               /eval /set queuePushSpot=$[queuePushSpot + 1]&#160;%; \
       /done&#160;%; \
       /queueInsert&#160;%{1}&#160;%queuePushSpot&#160;%{-4}

/def -i sortIncreasing = /result {1} &lt; {2}
/def -i sortDecreasing = /result {1} &gt; {2}

; This macro is used so that in calling it we get the item parsed into its
; separate fields.  Then {2} will be only the item's priority.
; Uses &gt; rather then &gt;= so that the item added first has higher priority in a tie.
/def -i phigher = /result  {1} &gt; {2}

# Argument is the queue name.
# Returns the number of items in the queue.
# Macro is invisible to make mecho output more understandable.
/def -i queueSize = \
       /eval /eval /set queueSizeSize $$[{queue%{1}Size} + 0]&#160;%; \
       /return {queueSizeSize}

# Argument is the queue name.
# Removes the first item from the queue and returns it.
# Macro is invisible to make mecho output more understandable.
/def -i queuePop = \
       /if ( queueSize( {1} ) &lt;= 0 ) \
               /echo POPPING EMPTY QUEUE&#160;%1&#160;%; \
               /return &quot;&quot;&#160;%; \
       /endif&#160;%; \
       /eval /eval /set queueThingPopped &#160;%%{queue%{1}Thing1}&#160;%; \
       /if ( queueSize( {1} ) &gt; 1 ) \
               /eval /for which 1 $[queueSize( {1} ) - 1] \
                       /eval /set queue%{1}Thing%%%which&#160;%%%%queue%{1}Thing$$$[which + 1]&#160;%; \
       /endif&#160;%; \
       /eval /eval /set queue%{1}Size $$[{queue%{1}Size} - 1]&#160;%; \
       /result &quot;%queueThingPopped&quot;

# Argument is the queue name.
# Macro is invisible to make mecho output more understandable.
/def -i queueFlush = \
       /eval /set queue%{1}Size 0

# Arguments are the queue name and the spot in the queue to return.
# Queue locations are numbered from 1.
# Macro is invisible to make mecho output more understandable.
/def -i queueAt = \
       /if /test {2} &lt; 1  | {2} &gt; queue%{1}Size&#160;%; /then /result &quot;&quot;&#160;%; /endif&#160;%; \
       /eval /set queueThingAt&#160;%%{queue%{1}Thing%{2}}&#160;%; \
       /result {queueThingAt}

# Arguments are the queue name, the spot to put the item and the
# item itself.  The current item at that spot and all following items
# are moved back one spot in the queue.
# Macro is invisible to make mecho output more understandable.
/def -i queueInsert = \
       /if ( {2} &lt;= 0 ) \
               /echo INVALID INSERTION POINT&#160;%2, FOR QUEUE&#160;%1&#160;%; \
               /return&#160;%; \
       /endif&#160;%; \
       /if ( {2} &gt; queueSize( {1} ) + 1 ) \
               /echo INSERTION AT&#160;%2 BEYOND END OF QUEUE&#160;%1&#160;%; \
               /return&#160;%; \
       /endif&#160;%; \
       /if ( queueSize( {1} ) &gt;= {2} ) \
               /eval /for which&#160;%{2} $[queueSize( {1} )] \
                       /eval /set \
                               queue%{1}Thing$$$[%{2} + queueSize( &quot;%{1}&quot; ) - which + 1] \
                              &#160;%%%%queue%{1}Thing$$$[{2} + queueSize( &quot;%{1}&quot; ) - which]&#160;%; \
;                               queue%{1}Thing$$$[%{2} + queueSize( &quot;%{1}&quot; ) -&#160;%%%which + 1] \
;                              &#160;%%%%queue%{1}Thing$$$[%{2} + queueSize( &quot;%{1}&quot; ) -&#160;%%%which]&#160;%; \
       /endif&#160;%; \
       /eval /eval /set queue%{1}Thing%{2}&#160;%{-2}&#160;%; \
       /eval /eval /set queue%{1}Size $$[{queue%{1}Size} + 1]

# Arguments are the queue name, the spot of the existing the item and the
# new value for the item.
# Macro is invisible to make mecho output more understandable.
/def -i queueReplace = \
       /if ( {2} &lt;= 0 ) \
               /echo INVALID REPLACEMENT POINT&#160;%2, FOR QUEUE&#160;%1&#160;%; \
               /return&#160;%; \
       /endif&#160;%; \
       /if ( {2} &gt; queueSize( {1} ) ) \
               /echo REPLACEMENT AT&#160;%2 BEYOND END OF QUEUE&#160;%1&#160;%; \
               /return&#160;%; \
       /endif&#160;%; \
       /eval /eval /set queue%{1}Thing%{2}&#160;%{-2}&#160;%; \

# Arguments: queue name, the spot of the existing the item, desired field in
# item,  the new value for the field.
# Macro is invisible to make mecho output more understandable.
/def -i queueReplaceField = \
       /if ( {2} &lt;= 0 ) \
               /echo INVALID REPLACEMENT POINT&#160;%2, FOR QUEUE&#160;%1&#160;%; \
               /return&#160;%; \
       /endif&#160;%; \
       /if ( {2} &gt; queueSize( {1} ) ) \
               /echo REPLACEMENT AT&#160;%2 BEYOND END OF QUEUE&#160;%1&#160;%; \
               /return&#160;%; \
       /endif&#160;%; \
       /eval /set replaceFieldItem&#160;%%{queue%{1}Thing%{2}}&#160;%; \
       /set replaceFieldItem $(/replaceField&#160;%3&#160;%4&#160;%replaceFieldItem)&#160;%; \
       /eval /eval /set queue%{1}Thing%{2}=%replaceFieldItem

# Arguments: field number, new field value, all fields of item.
# Result: entire item with field replaced
/def -i replaceField = \
       /if ( {1} &lt;= 0  |  {1} &gt; {#} - 2 ) \
               /echo -e BAD FIELD NUMBER&#160;%1 FOR REPLACEFIELD&#160;%{*}&#160;%; \
               /result &quot;&quot;&#160;%; \
       /endif&#160;%; \
; Walk through each field, concatenating.  Swap in the new field as we go.
       /set replaceFieldWhich 3&#160;%; \
       /while ( replaceFieldWhich &lt;= {#} ) \
               /eval /set replaceFieldField&#160;%%{%replaceFieldWhich}&#160;%; \
; Swap in new value for field.
               /if ( replaceFieldWhich - 2 == {1} ) \
                       /set replaceFieldField&#160;%2&#160;%; \
               /endif&#160;%; \
; Don't add a space separator for the first field.
               /if ( replaceFieldWhich == 3 ) \
                       /set replaceFieldResult&#160;%replaceFieldField&#160;%; \
; All subsequent fields are prefaced by a space.
               /else \
                       /set replaceFieldResult $[strcat( replaceFieldResult, &quot; &quot;, replaceFieldField )]&#160;%; \
               /endif&#160;%; \
               /set replaceFieldWhich $[replaceFieldWhich + 1]&#160;%; \
       /done&#160;%; \
       /result {replaceFieldResult}

# Arguments are the queue name, and the spot to delete the item from.
# All following items are moved forward one spot in the queue.
# Macro is invisible to make mecho output more understandable.
/def -i queueRemove = \
       /if ( {2} &lt;= 0 ) \
               /echo INVALID REMOVAL POINT&#160;%2, FOR QUEUE&#160;%1&#160;%; \
               /return&#160;%; \
       /endif&#160;%; \
       /if ( {2} &gt; queueSize( {1} )  ) \
               /echo REMOVAL AT&#160;%2 BEYOND END OF QUEUE&#160;%1&#160;%; \
               /return&#160;%; \
       /endif&#160;%; \
       /eval /eval /set queueThingRemoved &#160;%%{queue%{1}Thing%{2}}&#160;%; \
       /if ( queueSize( {1} ) &gt; {2} ) \
               /eval /for which&#160;%{2} $[queueSize( {1} ) - 1] \
                       /eval /set \
                               queue%{1}Thing%%%which \
                              &#160;%%%%queue%{1}Thing$$$[which + 1]&#160;%; \
;                              &#160;%%%%queue%{1}Thing$$$[%%%which + 1]&#160;%; \
       /endif&#160;%; \
       /eval /eval /set queue%{1}Size $$[{queue%{1}Size} - 1]&#160;%; \
       /return {queueThingRemoved}

# Searches a specific field of queue items for a matching string.
# Args: queue name, field number, string to find
# Returns item number of first matching entry, or zero on no match.
# Macro is invisible to make mecho output more understandable.
/def -i queueFindField = \
       /set findQueueSpot=1&#160;%; \
       /eval /set findQueueLength $[queueSize( {1} )]&#160;%; \
       /while ( findQueueSpot &lt;= findQueueLength ) \
               /eval /set findQueueItem=$[queueAt( {1}, findQueueSpot)]&#160;%; \
;               /eval /echo&#160;%findQueueSpot&#160;%findQueueItem&#160;%; \
               /eval /set findField $( /findItemField&#160;%2&#160;%findQueueItem )&#160;%; \
               /if ( findField =~ {3} ) \
                       /return findQueueSpot&#160;%; \
               /endif&#160;%; \
               /eval /set findQueueSpot=$[findQueueSpot + 1]&#160;%; \
       /done&#160;%; \
       /return 0

# Searches items of a queue for a matching string.
# Args: queue name, string to find
# Returns item number of first matching entry, or zero on no match.
# Macro is invisible to make mecho output more understandable.
/def -i queueFind = \
       /let spot=1&#160;%; \
       /let qsize $[queueSize( {1} )]&#160;%; \
       /while ( spot &lt;= qsize ) \
               /let item=$[queueAt( {1}, spot )]&#160;%; \
;               /echo&#160;%spot&#160;%item matches?&#160;%{-1}&#160;%; \
               /if ( item =~ {-1} ) \
                       /return spot&#160;%; \
               /endif&#160;%; \
               /let spot=$[spot + 1]&#160;%; \
       /done&#160;%; \
       /return 0

/def findItemField = /eval /result {$[{1} + 1]}

# Args: queue name, field number, string to find
# Returns count of matching items in queue.
# Note that called with same arguments as queueFindField.
# Macro is invisible to make mecho output more understandable.
/def -i queueCount = \
       /set countCount 0&#160;%; \
       /set countQueueSpot=1&#160;%; \
       /eval /set countQueueLength $[queueSize( {1} )]&#160;%; \
       /while ( countQueueSpot &lt;= countQueueLength ) \
               /eval /set countQueueItem=$[queueAt( {1}, countQueueSpot)]&#160;%; \
;               /eval /echo&#160;%countQueueSpot&#160;%countQueueItem&#160;%; \
               /eval /set countField=$( /findItemField&#160;%2&#160;%countQueueItem )&#160;%; \
               /if ( countField =~ {3} ) \
                       /eval /set countCount=$[countCount + 1]&#160;%; \
               /endif&#160;%; \
               /eval /set countQueueSpot=$[countQueueSpot + 1]&#160;%; \
       /done&#160;%; \
       /return countCount


# Argument is the queue name.
# Macro is invisible to make mecho output more understandable.
/def -i queueDump = \
       /eval /for which 1 $[queueSize( {1} )] \
               /eval /_echo&#160;%%%%queue%{1}Thing%%%which

# Call a macro for each item in a queue.  Queue walked in forward direction.
; Args: queue name, macro to call with each item
; Arguments to the called macro: item number, item.
; Macro returns true to continue looping, false to stop.
/def -i queueForEach = \
       /let queueForEachWhich 1&#160;%; \
       /let queueForEachSize $[ queueSize( {1} ) ]&#160;%; \
       /while ( queueForEachWhich &lt;= queueForEachSize ) \
               /let queueForEachItem=$[queueAt( {1}, queueForEachWhich )]&#160;%; \
               /test&#160;%2( queueForEachWhich, {queueForEachItem} )&#160;%; \
               /if (&#160;! {?} ) /break&#160;%; /endif&#160;%; \
               /let queueForEachWhich $[ queueForEachWhich + 1 ]&#160;%; \
       /done

# Call a macro for each item in a queue.  Queue walked in reverse direction.
; Args: queue name, macro to call with each item
; Arguments to the called macro: item number, item.
; Macro returns true to continue looping, false to stop.
/def -i queueForEachReverse = \
       /let queueForEachWhich $[ queueSize( {1} ) ]&#160;%; \
       /while ( queueForEachWhich &gt;= 1 ) \
               /let queueForEachItem=$[queueAt( {1}, queueForEachWhich )]&#160;%; \
               /test&#160;%2( queueForEachWhich, {queueForEachItem} )&#160;%; \
               /if (&#160;! {?} ) /break&#160;%; /endif&#160;%; \
               /let queueForEachWhich $[ queueForEachWhich - 1 ]&#160;%; \
       /done

; Simple macro to use with queueForEach to show each item in a queue.
/def queueEchoItem = /echo&#160;%{2}&#160;%; /return 1

# Convert a queue to a single string of all the items in the queue.
; Args: queue, var to get list
/def -i queueAsList = \
       /set queueAsListList=%2&#160;%; \
       /set&#160;%queueAsListList=&#160;%; \
       /queueForEach&#160;%1 queueAsListAdd
/def queueAsListAdd = \
       /eval /set&#160;%queueAsListList&#160;%%{%queueAsListList}&#160;%{2}&#160;%; \
       /return 1

# Convert a queue to a single string of all the items in the queue, with each item
# delimited by a bar.
; Args: queue, var to get list
/def -i queueAsDelimitedList = \
       /set queueAsDelimitedListList=%2&#160;%; \
       /set&#160;%queueAsDelimitedListList=|&#160;%; \
       /queueForEach&#160;%1 queueAsDelimitedListAdd
/def queueAsDelimitedListAdd = \
       /eval /set&#160;%queueAsDelimitedListList&#160;%%{%queueAsDelimitedListList}%{2}|&#160;%; \
       /return 1

# Make a copy of a queue.
; Args: queue to copy, queue to be the copy
/def -i queueCopy = \
       /set queueCopyDestination&#160;%2&#160;%; \
       /queueFlush&#160;%queueCopyDestination&#160;%; \
       /queueForEach&#160;%1 queueCopyOne
/def queueCopyOne = \
       /queuePush&#160;%queueCopyDestination&#160;%2&#160;%; \
       /return 1

# Parse out fields of a line.
/def field1 = /result {1}
/def field2 = /result {2}

</pre>

<!-- 
NewPP limit report
CPU time usage: 0.003 seconds
Real time usage: 0.006 seconds
Preprocessor visited node count: 4/1000000
Preprocessor generated node count: 24/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key homesitewiki-mw_:pcache:idhash:67-0!*!*!*!*!*!* and timestamp 20200924045624
 -->
</div>								<div class="printfooter">
				Retrieved from "<a href="http://www.gwen-morse.com/wiki/index.php?title=Zallafar%27s_Queue_Array&amp;oldid=283">http://www.gwen-morse.com/wiki/index.php?title=Zallafar%27s_Queue_Array&amp;oldid=283</a>"				</div>
												<div id='catlinks' class='catlinks catlinks-allhidden'></div>												<div class="visualClear"></div>
							</div>
		</div>
		<div id="mw-navigation">
			<h2>Navigation menu</h2>
			<div id="mw-head">
				<div id="p-personal" role="navigation" class="" aria-labelledby="p-personal-label">
	<h3 id="p-personal-label">Personal tools</h3>
	<ul>
<li id="pt-login"><a href="/wiki/index.php?title=Special:UserLogin&amp;returnto=Zallafar%27s+Queue+Array&amp;returntoquery=oldid%3D283" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>	</ul>
</div>
				<div id="left-navigation">
					<div id="p-namespaces" role="navigation" class="vectorTabs" aria-labelledby="p-namespaces-label">
	<h3 id="p-namespaces-label">Namespaces</h3>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="/wiki/index.php/Zallafar%27s_Queue_Array"  title="View the content page [c]" accesskey="c">Page</a></span></li>
					<li  id="ca-talk" class="new"><span><a href="/wiki/index.php?title=Talk:Zallafar%27s_Queue_Array&amp;action=edit&amp;redlink=1"  title="Discussion about the content page [t]" accesskey="t">Discussion</a></span></li>
			</ul>
</div>
<div id="p-variants" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-variants-label">
	<h3 id="mw-vector-current-variant">
		</h3>
	<h3 id="p-variants-label"><span>Variants</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
				</div>
				<div id="right-navigation">
					<div id="p-views" role="navigation" class="vectorTabs" aria-labelledby="p-views-label">
	<h3 id="p-views-label">Views</h3>
	<ul>
					<li id="ca-view" class="selected"><span><a href="/wiki/index.php/Zallafar%27s_Queue_Array" >Read</a></span></li>
					<li id="ca-viewsource"><span><a href="/wiki/index.php?title=Zallafar%27s_Queue_Array&amp;action=edit"  title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="/wiki/index.php?title=Zallafar%27s_Queue_Array&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">View history</a></span></li>
			</ul>
</div>
<div id="p-cactions" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-cactions-label">
	<h3 id="p-cactions-label"><span>Actions</span><a href="#"></a></h3>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>
<div id="p-search" role="search">
	<h3><label for="searchInput">Search</label></h3>
	<form action="/wiki/index.php" id="searchform">
				<div id="simpleSearch">
						<input name="search" placeholder="Search" title="Search Gwen Morse's Wiki [f]" accesskey="f" id="searchInput" />						<button type="submit" name="button" title="Search the pages for this text" id="searchButton"><img src="/wiki/skins/vector/images/search-ltr.png?303" alt="Search" width="12" height="13" /></button>								<input type='hidden' name="title" value="Special:Search"/>
		</div>
	</form>
</div>
				</div>
			</div>
			<div id="mw-panel">
					<div id="p-logo" role="banner"><a style="background-image: url(/home/public/wiki/guestbook.jpg);" href="/wiki/index.php/Main_Page"  title="Visit the main page"></a></div>
				<div class="portal" role="navigation" id='p-navigation' aria-labelledby='p-navigation-label'>
	<h3 id='p-navigation-label'>Navigation</h3>
	<div class="body">
		<ul>
			<li id="n-mainpage-description"><a href="/wiki/index.php/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
			<li id="n-MUSHing"><a href="/wiki/index.php/MUSHing">MUSHing</a></li>
			<li id="n-Softcode-Archive"><a href="/wiki/index.php/Gwen%27s_MUSHcode_Archive">Softcode Archive</a></li>
			<li id="n-Tinyfugue-Client"><a href="/wiki/index.php/Tinyfugue">Tinyfugue Client</a></li>
			<li id="n-Tabletop-Roleplay"><a href="/wiki/index.php/Roleplay">Tabletop Roleplay</a></li>
			<li id="n-Sims"><a href="/wiki/index.php/Sims">Sims</a></li>
			<li id="n-Linux"><a href="/wiki/index.php/Linux">Linux</a></li>
			<li id="n-Health-and-Beauty"><a href="/wiki/index.php/HABA">Health and Beauty</a></li>
			<li id="n-Recipes"><a href="/wiki/index.php/Recipes">Recipes</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-Wiki_Help' aria-labelledby='p-Wiki_Help-label'>
	<h3 id='p-Wiki_Help-label'>Wiki Help</h3>
	<div class="body">
		<ul>
			<li id="n-portal"><a href="/wiki/index.php/Gwen_Morse%27s_Wiki:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
			<li id="n-currentevents"><a href="/wiki/index.php/Gwen_Morse%27s_Wiki:Current_events" title="Find background information on current events">Current events</a></li>
			<li id="n-recentchanges"><a href="/wiki/index.php/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
			<li id="n-randompage"><a href="/wiki/index.php/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
			<li id="n-help"><a href="https://www.mediawiki.org/wiki/Special:MyLanguage/Help:Contents" rel="nofollow" title="The place to find out">Help</a></li>
		</ul>
	</div>
</div>
<div class="portal" role="navigation" id='p-tb' aria-labelledby='p-tb-label'>
	<h3 id='p-tb-label'>Tools</h3>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="/wiki/index.php/Special:WhatLinksHere/Zallafar%27s_Queue_Array" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="/wiki/index.php/Special:RecentChangesLinked/Zallafar%27s_Queue_Array" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-specialpages"><a href="/wiki/index.php/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li id="t-print"><a href="/wiki/index.php?title=Zallafar%27s_Queue_Array&amp;oldid=283&amp;printable=yes" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>
			<li id="t-permalink"><a href="/wiki/index.php?title=Zallafar%27s_Queue_Array&amp;oldid=283" title="Permanent link to this revision of the page">Permanent link</a></li>
			<li id="t-info"><a href="/wiki/index.php?title=Zallafar%27s_Queue_Array&amp;action=info">Page information</a></li>
		</ul>
	</div>
</div>
			</div>
		</div>
		<div id="footer" role="contentinfo">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 23 July 2010, at 21:26.</li>
											<li id="footer-info-viewcount">This page has been accessed 3,096 times.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="/wiki/index.php/Gwen_Morse%27s_Wiki:Privacy_policy" title="Gwen Morse's Wiki:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="/wiki/index.php/Gwen_Morse%27s_Wiki:About" title="Gwen Morse's Wiki:About">About Gwen Morse&#039;s Wiki</a></li>
											<li id="footer-places-disclaimer"><a href="/wiki/index.php/Gwen_Morse%27s_Wiki:General_disclaimer" title="Gwen Morse's Wiki:General disclaimer">Disclaimers</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
					<li id="footer-poweredbyico">
						<a href="//www.mediawiki.org/"><img src="/wiki/skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31" /></a>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>
		<script>/*<![CDATA[*/window.jQuery && jQuery.ready();/*]]>*/</script><script>if(window.mw){
mw.loader.state({"site":"loading","user":"ready","user.groups":"ready"});
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.action.view.postEdit","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.searchSuggest","skins.vector.collapsibleNav"],null,true);
}</script>
<script>if(window.mw){
mw.loader.state({"site":"ready"});
}</script>
<!-- Served in 0.176 secs. -->
	</body>
</html>
